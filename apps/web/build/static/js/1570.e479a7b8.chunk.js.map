{"version":3,"file":"static/js/1570.e479a7b8.chunk.js","mappings":"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","sources":["../../../packages/uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery.ts","components/PoolProgressIndicator/PoolProgressIndicator.tsx","hooks/useNetworkSupportsV2.ts","pages/Pool/Positions/create/BaseQuoteFiatAmount.tsx","components/Liquidity/FeeTierSearchModal.tsx","pages/Pool/Positions/create/DynamicFeeTierSpeedbump.tsx","pages/Pool/Positions/create/ContextProviders.tsx","../../../packages/ui/src/components/icons/Edit.tsx","pages/Pool/Positions/create/EditStep.tsx","components/Charts/ActiveLiquidityChart/AxisRight.tsx","components/Charts/ActiveLiquidityChart/Brush2.tsx","components/Charts/ActiveLiquidityChart/HorizontalArea.tsx","components/Charts/ActiveLiquidityChart/HorizontalLine.tsx","components/Charts/ActiveLiquidityChart/TickTooltip.tsx","components/Charts/ActiveLiquidityChart/ActiveLiquidityChart2.tsx","components/Charts/LiquidityRangeInput/constants.ts","../../../packages/ui/src/components/icons/HorizontalDensityChart.tsx","../../../packages/ui/src/components/icons/SearchMinus.tsx","../../../packages/ui/src/components/icons/SearchPlus.tsx","components/Charts/LiquidityRangeInput/LiquidityRangeInput.tsx","pages/Pool/Positions/create/RangeSelectionStep.tsx"],"sourcesContent":["import { UseQueryResult, skipToken, useQuery } from '@tanstack/react-query'\nimport { uniswapUrls } from 'uniswap/src/constants/urls'\nimport { TRADING_API_CACHE_KEY, createLpPosition } from 'uniswap/src/data/apiClients/tradingApi/TradingApiClient'\nimport { getTradeSettingsDeadline } from 'uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline'\nimport { UseQueryApiHelperHookArgs } from 'uniswap/src/data/apiClients/types'\nimport { CreateLPPositionRequest, CreateLPPositionResponse } from 'uniswap/src/data/tradingApi/__generated__'\n\nexport function useCreateLpPositionCalldataQuery({\n  params,\n  deadlineInMinutes,\n  ...rest\n}: UseQueryApiHelperHookArgs<CreateLPPositionRequest, CreateLPPositionResponse> & {\n  deadlineInMinutes: number | undefined\n}): UseQueryResult<CreateLPPositionResponse> {\n  const queryKey = [TRADING_API_CACHE_KEY, uniswapUrls.tradingApiPaths.createLp, params]\n\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes)\n\n  const paramsWithDeadline = { ...params, deadline }\n  return useQuery<CreateLPPositionResponse>({\n    queryKey,\n    queryFn: params\n      ? async (): ReturnType<typeof createLpPosition> => await createLpPosition(paramsWithDeadline)\n      : skipToken,\n    ...rest,\n  })\n}\n","\"use strict\";\nimport { Fragment } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, Text } from \"ui/src\";\nimport { assert } from \"utilities/src/errors\";\nexport function PoolProgressIndicator({\n  steps,\n  ...rest\n}) {\n  assert(steps.length > 0, \"PoolProgressIndicator: steps must have at least one step\");\n  return <Flex\n    width=\"100%\"\n    borderRadius=\"$rounded24\"\n    py=\"$padding8\"\n    borderColor=\"$surface3\"\n    borderWidth=\"$spacing1\"\n    p=\"$padding16\"\n    {...rest}\n  >{steps.map((step, index) => <Fragment key={step.label + index}><Flex\n    row\n    gap=\"$gap12\"\n    alignItems=\"center\"\n    onPress={step.onPress}\n    {...step.onPress ? ClickableTamaguiStyle : {}}\n  ><Flex\n    height=\"$spacing32\"\n    width=\"$spacing32\"\n    borderRadius=\"$roundedFull\"\n    backgroundColor={step.active ? \"$neutral1\" : \"$surface3\"}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n  ><Text variant=\"subheading2\" color={step.active ? \"$surface1\" : \"$neutral2\"} userSelect=\"none\">{index + 1}</Text></Flex><Flex gap=\"$spacing2\"><Text variant=\"body3\" color={step.active ? \"$neutral2\" : \"$neutral3\"} userSelect=\"none\"><Trans i18nKey=\"common.step.number\" values={{ number: index + 1 }} /></Text><Text variant=\"subheading2\" color={step.active ? \"$neutral1\" : \"$neutral2\"} userSelect=\"none\">{step.label}</Text></Flex></Flex>{index !== steps.length - 1 && <Flex\n    width=\"$spacing2\"\n    height=\"$spacing32\"\n    backgroundColor=\"$surface3\"\n    ml={15}\n    my=\"$spacing8\"\n    borderRadius=\"$roundedFull\"\n  />}</Fragment>)}</Flex>;\n}\n","\"use strict\";\nimport { V2_ROUTER_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { useAccount } from \"hooks/useAccount\";\nexport const SUPPORTED_V2POOL_CHAIN_IDS = Object.keys(V2_ROUTER_ADDRESSES).map((chainId) => parseInt(chainId));\nexport function useNetworkSupportsV2() {\n  const { chainId } = useAccount();\n  return chainId && SUPPORTED_V2POOL_CHAIN_IDS.includes(chainId);\n}\n","\"use strict\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { Text } from \"ui/src\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport function BaseQuoteFiatAmount({\n  price,\n  base,\n  quote,\n  variant\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const quoteCurrencyAmount = tryParseCurrencyAmount(price?.toFixed(), price?.quoteCurrency);\n  const usdPrice = useUSDCValue(quoteCurrencyAmount);\n  if (!price || !base || !quote) {\n    return null;\n  }\n  return <Text><Text variant={variant ?? \"body3\"} color=\"$neutral1\">\n        1 {base?.symbol} = {formatPrice({ price, type: NumberType.TokenTx })} {quote?.symbol}</Text>{\" \"}<Text variant={variant ?? \"body3\"} color=\"$neutral2\">\n        (\n        {formatCurrencyAmount({\n    amount: usdPrice,\n    type: NumberType.FiatTokenPrice\n  })}\n        )\n      </Text></Text>;\n}\n","\"use strict\";\nimport { FeePoolSelectAction, LiquidityEventName } from \"@uniswap/analytics-events\";\nimport { useAllFeeTierPoolData } from \"components/Liquidity/hooks\";\nimport { calculateTickSpacingFromFeeAmount, isDynamicFeeTier } from \"components/Liquidity/utils\";\nimport { StyledPercentInput } from \"components/PercentInput\";\nimport ms from \"ms\";\nimport { useCreatePositionContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { NumericalInputMimic, NumericalInputSymbolContainer } from \"pages/Swap/common/shared\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMultichainContext } from \"state/multichain/useMultichainContext\";\nimport styled from \"styled-components\";\nimport { ClickableTamaguiStyle, CloseIcon } from \"theme/components\";\nimport { Button, Flex, Text } from \"ui/src\";\nimport { BackArrow } from \"ui/src/components/icons/BackArrow\";\nimport { CheckCircleFilled } from \"ui/src/components/icons/CheckCircleFilled\";\nimport { Plus } from \"ui/src/components/icons/Plus\";\nimport { Search } from \"ui/src/components/icons/Search\";\nimport { AmountInput, numericInputRegex } from \"uniswap/src/components/CurrencyInputPanel/AmountInput\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nconst FeeTierPercentInput = styled(StyledPercentInput)`\n  flex-grow: 0;\n  text-align: end;\n  justify-content: flex-end;\n`;\nexport function FeeTierSearchModal() {\n  const { chainId } = useMultichainContext();\n  const {\n    positionState: { fee: selectedFee, protocolVersion, hook },\n    derivedPositionInfo,\n    setPositionState,\n    feeTierSearchModalOpen,\n    setFeeTierSearchModalOpen,\n    setDynamicFeeTierSpeedbumpData\n  } = useCreatePositionContext();\n  const onClose = () => {\n    setCreateFeeValue(\"\");\n    setCreateModeEnabled(false);\n    setFeeTierSearchModalOpen(false);\n  };\n  const { t } = useTranslation();\n  const trace = useTrace();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [createFeeValue, setCreateFeeValue] = useState(\"\");\n  const [createModeEnabled, setCreateModeEnabled] = useState(false);\n  const { formatNumberOrString, formatPercent } = useLocalizationContext();\n  const [autoDecrementing, setAutoDecrementing] = useState(false);\n  const [autoIncrementing, setAutoIncrementing] = useState(false);\n  const [holdDuration, setHoldDuration] = useState(0);\n  const hiddenObserver = useResizeObserver();\n  const withDynamicFeeTier = Boolean(hook);\n  const { feeTierData, hasExistingFeeTiers } = useAllFeeTierPoolData({\n    chainId,\n    protocolVersion,\n    currencies: derivedPositionInfo.currencies,\n    withDynamicFeeTier\n  });\n  const showCreateModal = !withDynamicFeeTier && (createModeEnabled || !hasExistingFeeTiers);\n  useEffect(() => {\n    let interval;\n    let holdTimeout;\n    const baseInterval = 100;\n    let currentInterval = baseInterval;\n    if (autoDecrementing || autoIncrementing) {\n      holdTimeout = setTimeout(() => {\n        setHoldDuration((prev) => prev + 1);\n      }, ms(\"1s\"));\n      if (holdDuration >= 2) {\n        currentInterval = baseInterval / 2;\n      }\n      if (holdDuration >= 4) {\n        currentInterval = baseInterval / 4;\n      }\n      if (holdDuration >= 6) {\n        currentInterval = baseInterval / 8;\n      }\n      interval = setInterval(() => {\n        setCreateFeeValue((prev) => {\n          let newValue = parseFloat(prev);\n          if (autoDecrementing) {\n            if (!prev || prev === \"\") {\n              return \"0\";\n            }\n            newValue -= 0.01;\n            if (newValue < 0) {\n              return \"0\";\n            }\n          } else if (autoIncrementing) {\n            if (!prev || prev === \"\") {\n              return \"0.01\";\n            }\n            newValue += 0.01;\n            if (newValue > 100) {\n              return \"100\";\n            }\n          }\n          return newValue.toFixed(2);\n        });\n      }, currentInterval);\n      return () => {\n        clearInterval(interval);\n        clearTimeout(holdTimeout);\n      };\n    }\n    return () => {\n      clearInterval(interval);\n      clearTimeout(holdTimeout);\n      setHoldDuration(0);\n    };\n  }, [autoDecrementing, autoIncrementing, holdDuration]);\n  const feeHundredthsOfBips = Math.round(parseFloat(createFeeValue) * 1e4);\n  return <Modal name={ModalName.FeeTierSearch} onClose={onClose} isDismissible isModalOpen={feeTierSearchModalOpen}><Flex width=\"100%\" gap=\"$gap20\"><Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$spacing4\" width=\"100%\">{createModeEnabled && <Flex {...ClickableTamaguiStyle} onPress={() => setCreateModeEnabled(false)}><BackArrow size=\"$icon.24\" /></Flex>}<Text variant=\"body2\" flexGrow={1} textAlign=\"center\" pl={showCreateModal ? 0 : 24}>{showCreateModal ? t(\"fee.tier.create\") : t(\"fee.tier.select\")}</Text><CloseIcon data-testid=\"LiquidityModalHeader-close\" onClick={onClose} size={24} /></Flex>{showCreateModal ? <Flex gap=\"$gap20\"><Text variant=\"body2\" color=\"$neutral2\" textAlign=\"center\">{t(\"fee.tier.create.description\")}</Text><Flex row alignItems=\"center\" gap=\"$spacing28\" px=\"$spacing20\"><Flex\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$roundedFull\"\n    userSelect=\"none\"\n    height=\"$spacing36\"\n    width=\"$spacing36\"\n    onPressIn={() => {\n      setAutoDecrementing(true);\n    }}\n    onPressOut={() => {\n      setAutoDecrementing(false);\n    }}\n    onPress={() => {\n      setCreateFeeValue((prev) => {\n        if (!prev || prev === \"\") {\n          return \"0\";\n        }\n        const newValue = parseFloat(prev) - 0.01;\n        if (isNaN(newValue) || newValue < 0) {\n          return \"0\";\n        }\n        return newValue.toFixed(2);\n      });\n    }}\n    {...ClickableTamaguiStyle}\n  ><Text variant=\"heading3\" mb=\"$spacing4\">\n                  -\n                </Text></Flex><Flex grow justifyContent=\"flex-end\"><Flex row maxWidth=\"100%\" centered><FeeTierPercentInput\n    value={createFeeValue}\n    onUserInput={(input) => {\n      if (parseInt(input) > 100) {\n        setCreateFeeValue(\"100\");\n      } else {\n        setCreateFeeValue(input);\n      }\n    }}\n    placeholder=\"0\"\n    maxDecimals={2}\n    maxLength={4}\n    $width={createFeeValue && hiddenObserver.width ? hiddenObserver.width + 1 : void 0}\n  /><NumericalInputSymbolContainer showPlaceholder={!createFeeValue}>%</NumericalInputSymbolContainer><NumericalInputMimic ref={hiddenObserver.ref}>{createFeeValue}</NumericalInputMimic></Flex></Flex><Flex\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$roundedFull\"\n    userSelect=\"none\"\n    height={36}\n    width={36}\n    onPressIn={() => {\n      setAutoIncrementing(true);\n    }}\n    onPressOut={() => {\n      setAutoIncrementing(false);\n    }}\n    onPress={() => {\n      setCreateFeeValue((prev) => {\n        if (!prev || prev === \"\") {\n          return \"0.01\";\n        }\n        const newValue = parseFloat(prev) + 0.01;\n        if (newValue > 100) {\n          return \"100\";\n        }\n        return newValue.toFixed(2);\n      });\n    }}\n    {...ClickableTamaguiStyle}\n  ><Text variant=\"heading3\">+</Text></Flex></Flex>{\n    /* TODO(WEB-4920): search existing fee tiers for a match and optionally show this, with real TVL value */\n  }{\n    /* <Text variant=\"body2\" color=\"$neutral2\" textAlign=\"center\">\n      {t('fee.tier.alreadyExists', { formattedTVL: '$289.6K' })}\n    </Text> */\n  }{\n    /* TODO(WEB-4920): search existing fee tiers for close matches and optionally similar list */\n  }<Button\n    flex={1}\n    py=\"$spacing16\"\n    px=\"$spacing20\"\n    backgroundColor=\"$accent3\"\n    hoverStyle={{\n      backgroundColor: void 0,\n      opacity: 0.8\n    }}\n    pressStyle={{\n      backgroundColor: void 0\n    }}\n    disabled={!createFeeValue || createFeeValue === \"0\" || createFeeValue === \"\"}\n    onPress={() => {\n      setPositionState((prevState) => ({\n        ...prevState,\n        fee: {\n          feeAmount: feeHundredthsOfBips,\n          tickSpacing: calculateTickSpacingFromFeeAmount(feeHundredthsOfBips)\n        }\n      }));\n      sendAnalyticsEvent(LiquidityEventName.SELECT_LIQUIDITY_POOL_FEE_TIER, {\n        action: FeePoolSelectAction.SEARCH,\n        fee_tier: feeHundredthsOfBips,\n        is_new_fee_tier: Boolean(feeTierData[feeHundredthsOfBips]),\n        ...trace\n      });\n      onClose();\n    }}\n  ><Text variant=\"buttonLabel2\" color=\"$surface1\">{feeTierData[feeHundredthsOfBips] ? t(\"fee.tier.select.existing.button\") : t(\"fee.tier.create.button\")}</Text></Button></Flex> : <><Flex\n    row\n    alignItems=\"center\"\n    py=\"$padding12\"\n    px=\"$padding8\"\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded24\"\n    gap=\"$gap8\"\n  ><Search size={20} color=\"$neutral2\" /><AmountInput\n    width=\"100%\"\n    autoFocus\n    alignSelf=\"stretch\"\n    backgroundColor=\"$transparent\"\n    borderRadius={0}\n    borderWidth={0}\n    textAlign=\"left\"\n    value={searchValue}\n    fontFamily=\"$subHeading\"\n    fontSize={18}\n    px=\"$none\"\n    py=\"$none\"\n    placeholder={t(\"fee.tier.search.short\")}\n    placeholderTextColor=\"$neutral3\"\n    onChangeText={(value) => {\n      if (value === \".\") {\n        setSearchValue(\"0.\");\n        return;\n      }\n      if (value.indexOf(\".\") !== -1 && value.indexOf(\".\", value.indexOf(\".\") + 1) !== -1) {\n        return;\n      }\n      if (!numericInputRegex.test(value)) {\n        setSearchValue(value.slice(0, -1));\n        return;\n      }\n      const newValue = parseFloat(value);\n      if (newValue > 100) {\n        setSearchValue(\"100\");\n        return;\n      }\n      setSearchValue(newValue >= 0 ? value : \"\");\n    }}\n  /></Flex><Flex width=\"100%\" gap=\"$gap4\" maxHeight={350} overflow=\"scroll\">{Object.values(feeTierData).filter((data) => data.formattedFee.includes(searchValue) || data.id && searchValue.includes(data.id)).map((pool) => <Flex\n    row\n    alignItems=\"center\"\n    gap=\"$spacing24\"\n    key={pool.id}\n    py=\"$padding12\"\n    px=\"$padding16\"\n    justifyContent=\"space-between\"\n    {...ClickableTamaguiStyle}\n    onPress={() => {\n      if (isDynamicFeeTier(pool.fee)) {\n        setDynamicFeeTierSpeedbumpData({\n          open: true,\n          wishFeeData: pool.fee\n        });\n      } else {\n        setPositionState((prevState) => ({\n          ...prevState,\n          fee: {\n            feeAmount: pool.fee.feeAmount,\n            tickSpacing: pool.fee.tickSpacing\n          }\n        }));\n      }\n      onClose();\n    }}\n  ><Flex><Text variant=\"subheading2\">{pool.formattedFee}</Text><Flex row gap=\"$gap12\" alignItems=\"center\"><Text variant=\"body3\" color=\"$neutral2\">{pool.totalLiquidityUsd === 0 ? \"0\" : formatNumberOrString({\n    value: pool.totalLiquidityUsd,\n    type: NumberType.FiatTokenStats\n  })}{\" \"}{t(\"common.totalValueLocked\")}</Text><Text variant=\"body3\" color=\"$neutral2\">{pool.created ? t(\"fee.tier.percent.select\", { percentage: formatPercent(pool.percentage.toFixed()) }) : t(\"common.notCreated.label\")}</Text></Flex></Flex>{pool.fee.feeAmount === selectedFee.feeAmount && <CheckCircleFilled size=\"$icon.24\" color=\"$accent3\" />}</Flex>)}</Flex><Flex py=\"$padding12\" gap=\"$gap12\" alignItems=\"center\"><Text variant=\"body3\" color=\"$neutral2\">{t(\"fee.tier.missing.description\")}</Text><Button\n    py=\"$spacing8\"\n    px=\"$spacing12\"\n    gap=\"$gap4\"\n    theme=\"secondary\"\n    size=\"small\"\n    icon={<Plus size={16} color=\"$neutral1\" />}\n    onPress={() => setCreateModeEnabled(true)}\n  >{t(\"fee.tier.create.button\")}</Button></Flex></>}</Flex></Modal>;\n}\n","\"use strict\";\nimport { Dialog } from \"components/Dialog/Dialog\";\nimport { useCreatePositionContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { Trans } from \"react-i18next\";\nimport { Button, Text } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nexport const DynamicFeeTierSpeedbump = () => {\n  const { setPositionState, dynamicFeeTierSpeedbumpData, setDynamicFeeTierSpeedbumpData } = useCreatePositionContext();\n  const handleCancel = () => {\n    setDynamicFeeTierSpeedbumpData({\n      open: false,\n      wishFeeData: dynamicFeeTierSpeedbumpData.wishFeeData\n    });\n  };\n  const handleConfirm = () => {\n    setPositionState((prevState) => ({\n      ...prevState,\n      fee: {\n        feeAmount: dynamicFeeTierSpeedbumpData.wishFeeData.feeAmount,\n        tickSpacing: dynamicFeeTierSpeedbumpData.wishFeeData.tickSpacing\n      }\n    }));\n    setDynamicFeeTierSpeedbumpData({\n      open: false,\n      wishFeeData: dynamicFeeTierSpeedbumpData.wishFeeData\n    });\n  };\n  if (!dynamicFeeTierSpeedbumpData.open) {\n    return null;\n  }\n  return <Dialog\n    icon={<InfoCircleFilled size=\"$icon.24\" color=\"$neutral1\" />}\n    isVisible={true}\n    title={<Trans i18nKey=\"fee.tier.dynamic.create\" />}\n    description={<Trans i18nKey=\"fee.tier.dynamic.create.info\" />}\n    onCancel={handleCancel}\n    buttonsConfig={{\n      left: <Button\n        flex={1}\n        theme=\"secondary\"\n        borderRadius=\"$rounded12\"\n        py=\"$spacing8\"\n        px=\"$spacing12\"\n        onPress={handleCancel}\n      ><Text variant=\"buttonLabel3\" color=\"$neutral1\"><Trans i18nKey=\"common.button.cancel\" /></Text></Button>,\n      right: <Button\n        flex={1}\n        borderRadius=\"$rounded12\"\n        py=\"$spacing8\"\n        px=\"$spacing12\"\n        backgroundColor=\"$accent3\"\n        hoverStyle={{\n          backgroundColor: void 0,\n          opacity: 0.8\n        }}\n        pressStyle={{\n          backgroundColor: void 0\n        }}\n        onPress={handleConfirm}\n      ><Text variant=\"buttonLabel3\" color=\"$surface1\"><Trans i18nKey=\"common.button.continue\" /></Text></Button>\n    }}\n  />;\n};\n","\"use strict\";\nimport { FeeTierSearchModal } from \"components/Liquidity/FeeTierSearchModal\";\nimport {\n  CreatePositionContext,\n  CreateTxContext,\n  DEFAULT_DEPOSIT_STATE,\n  DEFAULT_PRICE_RANGE_STATE,\n  DepositContext,\n  PriceRangeContext,\n  useCreatePositionContext,\n  useDepositContext,\n  usePriceRangeContext\n} from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { DynamicFeeTierSpeedbump } from \"pages/Pool/Positions/create/DynamicFeeTierSpeedbump\";\nimport {\n  useDerivedDepositInfo,\n  useDerivedPositionInfo,\n  useDerivedPriceRangeInfo\n} from \"pages/Pool/Positions/create/hooks\";\nimport {\n  DEFAULT_POSITION_STATE,\n  PositionFlowStep\n} from \"pages/Pool/Positions/create/types\";\nimport {\n  generateAddLiquidityApprovalParams,\n  generateCreateCalldataQueryParams,\n  generateCreatePositionTxRequest\n} from \"pages/Pool/Positions/create/utils\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useAccountMeta } from \"uniswap/src/contexts/UniswapContext\";\nimport { useCheckLpApprovalQuery } from \"uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery\";\nimport { useCreateLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery\";\nimport { useTransactionGasFee, useUSDCurrencyAmountOfGasFee } from \"uniswap/src/features/gas/hooks\";\nimport { useTransactionSettingsContext } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nexport function CreatePositionContextProvider({\n  children,\n  initialState = {}\n}) {\n  const [positionState, setPositionState] = useState({ ...DEFAULT_POSITION_STATE, ...initialState });\n  const [step, setStep] = useState(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n  const derivedPositionInfo = useDerivedPositionInfo(positionState);\n  const [feeTierSearchModalOpen, setFeeTierSearchModalOpen] = useState(false);\n  const [dynamicFeeTierSpeedbumpData, setDynamicFeeTierSpeedbumpData] = useState({\n    open: false,\n    wishFeeData: DEFAULT_POSITION_STATE.fee\n  });\n  const reset = useCallback(() => {\n    setPositionState({\n      ...DEFAULT_POSITION_STATE,\n      ...initialState\n    });\n    setStep(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n  }, [initialState]);\n  return <CreatePositionContext.Provider\n    value={{\n      reset,\n      step,\n      setStep,\n      positionState,\n      setPositionState,\n      derivedPositionInfo,\n      feeTierSearchModalOpen,\n      setFeeTierSearchModalOpen,\n      dynamicFeeTierSpeedbumpData,\n      setDynamicFeeTierSpeedbumpData\n    }}\n  >{children}<FeeTierSearchModal /><DynamicFeeTierSpeedbump /></CreatePositionContext.Provider>;\n}\nexport function PriceRangeContextProvider({ children }) {\n  const { derivedPositionInfo } = useCreatePositionContext();\n  const [priceRangeState, setPriceRangeState] = useState(DEFAULT_PRICE_RANGE_STATE);\n  const reset = useCallback(() => {\n    setPriceRangeState(DEFAULT_PRICE_RANGE_STATE);\n  }, []);\n  useEffect(() => {\n    setPriceRangeState(DEFAULT_PRICE_RANGE_STATE);\n  }, [derivedPositionInfo.creatingPoolOrPair]);\n  useEffect(() => {\n    setPriceRangeState((prevState) => {\n      if (prevState.fullRange) {\n        return { ...prevState, fullRange: true, minPrice: \"\", maxPrice: \"\" };\n      } else {\n        return { ...prevState, fullRange: false, minPrice: void 0, maxPrice: void 0 };\n      }\n    });\n  }, [priceRangeState.priceInverted]);\n  const derivedPriceRangeInfo = useDerivedPriceRangeInfo(priceRangeState);\n  return <PriceRangeContext.Provider value={{ reset, priceRangeState, setPriceRangeState, derivedPriceRangeInfo }}>{children}</PriceRangeContext.Provider>;\n}\nexport function DepositContextProvider({ children }) {\n  const [depositState, setDepositState] = useState(DEFAULT_DEPOSIT_STATE);\n  const derivedDepositInfo = useDerivedDepositInfo(depositState);\n  const reset = useCallback(() => {\n    setDepositState(DEFAULT_DEPOSIT_STATE);\n  }, []);\n  return <DepositContext.Provider value={{ reset, depositState, setDepositState, derivedDepositInfo }}>{children}</DepositContext.Provider>;\n}\nexport function CreateTxContextProvider({ children }) {\n  const account = useAccountMeta();\n  const { derivedPositionInfo, positionState } = useCreatePositionContext();\n  const { derivedDepositInfo } = useDepositContext();\n  const { priceRangeState, derivedPriceRangeInfo } = usePriceRangeContext();\n  const swapSettings = useTransactionSettingsContext();\n  const hasError = Boolean(derivedDepositInfo.error);\n  const addLiquidityApprovalParams = useMemo(() => {\n    return generateAddLiquidityApprovalParams({\n      account,\n      positionState,\n      derivedPositionInfo,\n      derivedDepositInfo\n    });\n  }, [account, derivedDepositInfo, derivedPositionInfo, positionState]);\n  const {\n    data: approvalCalldata,\n    error: approvalError,\n    isLoading: approvalLoading,\n    refetch: approvalRefetch\n  } = useCheckLpApprovalQuery({\n    params: addLiquidityApprovalParams,\n    staleTime: 5 * ONE_SECOND_MS,\n    enabled: !hasError\n  });\n  const gasFeeToken0USD = useUSDCurrencyAmountOfGasFee(\n    derivedPositionInfo.currencies?.[0]?.chainId,\n    approvalCalldata?.gasFeeToken0Approval\n  );\n  const gasFeeToken1USD = useUSDCurrencyAmountOfGasFee(\n    derivedPositionInfo.currencies?.[1]?.chainId,\n    approvalCalldata?.gasFeeToken1Approval\n  );\n  const createCalldataQueryParams = useMemo(() => {\n    return generateCreateCalldataQueryParams({\n      account,\n      approvalCalldata,\n      positionState,\n      derivedPositionInfo,\n      priceRangeState,\n      derivedPriceRangeInfo,\n      derivedDepositInfo\n    });\n  }, [\n    account,\n    approvalCalldata,\n    derivedDepositInfo,\n    derivedPositionInfo,\n    derivedPriceRangeInfo,\n    positionState,\n    priceRangeState\n  ]);\n  const {\n    data: createCalldata,\n    error: createError,\n    refetch: createRefetch\n  } = useCreateLpPositionCalldataQuery({\n    params: createCalldataQueryParams,\n    deadlineInMinutes: swapSettings.customDeadline,\n    refetchInterval: 5 * ONE_SECOND_MS,\n    enabled: !hasError && !approvalLoading && !approvalError && Boolean(approvalCalldata)\n  });\n  const actualGasFee = createCalldata?.gasFee;\n  const { value: calculatedGasFee } = useTransactionGasFee(createCalldata?.create, !!actualGasFee);\n  const increaseGasFeeUsd = useUSDCurrencyAmountOfGasFee(\n    createCalldata?.create?.chainId,\n    actualGasFee || calculatedGasFee\n  );\n  const totalGasFee = useMemo(() => {\n    const fees = [gasFeeToken0USD, gasFeeToken1USD, increaseGasFeeUsd];\n    return fees.reduce((total, fee) => {\n      if (fee && total) {\n        return total.add(fee);\n      }\n      return total || fee;\n    });\n  }, [gasFeeToken0USD, gasFeeToken1USD, increaseGasFeeUsd]);\n  const validatedValue = useMemo(() => {\n    const txInfo = generateCreatePositionTxRequest({\n      approvalCalldata,\n      createCalldata,\n      createCalldataQueryParams,\n      derivedPositionInfo,\n      derivedDepositInfo\n    });\n    return {\n      txInfo,\n      gasFeeEstimateUSD: totalGasFee,\n      error: Boolean(approvalError || createError),\n      refetch: approvalError ? approvalRefetch : createError ? createRefetch : void 0\n    };\n  }, [\n    approvalCalldata,\n    createCalldata,\n    createCalldataQueryParams,\n    derivedPositionInfo,\n    derivedDepositInfo,\n    approvalError,\n    createError,\n    approvalRefetch,\n    createRefetch,\n    totalGasFee\n  ]);\n  return <CreateTxContext.Provider value={validatedValue}>{children}</CreateTxContext.Provider>;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Edit, AnimatedEdit] = createIcon({\n  name: \"Edit\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}><Path\n    d=\"M16 21.75H6C3.582 21.75 2.25 20.418 2.25 18V7.99998C2.25 5.58198 3.582 4.24998 6 4.24998H9C9.414 4.24998 9.75 4.58598 9.75 4.99998C9.75 5.41398 9.414 5.74998 9 5.74998H6C4.423 5.74998 3.75 6.42298 3.75 7.99998V18C3.75 19.577 4.423 20.25 6 20.25H16C17.577 20.25 18.25 19.577 18.25 18V15C18.25 14.586 18.586 14.25 19 14.25C19.414 14.25 19.75 14.586 19.75 15V18C19.75 20.418 18.418 21.75 16 21.75ZM20.58 5.02997L18.97 3.41999C18.4 2.85999 17.49 2.85997 16.92 3.42997L15.57 4.78998L19.21 8.42997L20.57 7.07996C21.14 6.50996 21.14 5.59997 20.58 5.02997ZM14.51 5.84998L8 12.39V16H11.61L18.15 9.48997L14.51 5.84998Z\"\n    fill=\"currentColor\"\n  /></Svg>\n});\n","\"use strict\";\nimport {\n  LiquidityPositionRangeChart,\n  getLiquidityRangeChartProps\n} from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport { LiquidityPositionInfoBadges } from \"components/Liquidity/LiquidityPositionInfoBadges\";\nimport { getProtocolVersionLabel } from \"components/Liquidity/utils\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport {\n  DEFAULT_DEPOSIT_STATE,\n  useCreatePositionContext,\n  useDepositContext,\n  usePriceRangeContext\n} from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { Container, formatPrices } from \"pages/Pool/Positions/create/shared\";\nimport { PositionFlowStep } from \"pages/Pool/Positions/create/types\";\nimport { getInvertedTuple } from \"pages/Pool/Positions/create/utils\";\nimport { useCallback, useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Button, Flex, Text } from \"ui/src\";\nimport { ArrowsLeftRight } from \"ui/src/components/icons/ArrowsLeftRight\";\nimport { Edit } from \"ui/src/components/icons/Edit\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nconst EditStep = ({ children, onClick, ...rest }) => {\n  return <Container row gap=\"$gap24\" justifyContent=\"space-between\" alignItems=\"center\" {...rest}>{children}<Button\n    theme=\"secondary\"\n    py=\"$spacing8\"\n    px=\"$spacing12\"\n    gap=\"$gap8\"\n    height={36}\n    borderRadius=\"$rounded12\"\n    onPress={onClick}\n    $md={{ px: \"$spacing8\" }}\n  ><Edit size={iconSizes.icon20} color=\"$neutral1\" /><Text variant=\"buttonLabel3\" $md={{ display: \"none\" }}><Trans i18nKey=\"common.edit.button\" /></Text></Button></Container>;\n};\nexport const EditSelectTokensStep = (props) => {\n  const { setStep, derivedPositionInfo, positionState } = useCreatePositionContext();\n  const { reset: resetPriceRangeState } = usePriceRangeContext();\n  const { reset: resetDepositState } = useDepositContext();\n  const { currencies, protocolVersion } = derivedPositionInfo;\n  const { fee, hook } = positionState;\n  const [token0, token1] = currencies;\n  const versionLabel = getProtocolVersionLabel(protocolVersion);\n  const screenSize = useScreenSize();\n  const handleEdit = useCallback(() => {\n    resetPriceRangeState();\n    resetDepositState();\n    setStep(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n  }, [resetDepositState, resetPriceRangeState, setStep]);\n  return <EditStep onClick={handleEdit} {...props}><Flex row gap=\"$gap12\"><DoubleCurrencyLogo currencies={[token0, token1]} size={!screenSize.sm ? iconSizes.icon44 : iconSizes.icon32} /><Flex row gap=\"$gap12\" $md={{ flexDirection: \"column\", gap: \"$gap4\" }}><Flex row gap=\"$gap8\" alignItems=\"center\"><Text variant=\"subheading1\">{token0?.symbol}</Text><Text variant=\"subheading1\">/</Text><Text variant=\"subheading1\">{token1?.symbol}</Text></Flex><Flex row gap={2} alignItems=\"center\"><LiquidityPositionInfoBadges\n    size=\"small\"\n    versionLabel={versionLabel}\n    v4hook={hook}\n    feeTier={fee.feeAmount}\n  /></Flex></Flex></Flex></EditStep>;\n};\nexport const EditRangeSelectionStep = (props) => {\n  const {\n    setStep,\n    derivedPositionInfo,\n    derivedPositionInfo: { currencies }\n  } = useCreatePositionContext();\n  const {\n    priceRangeState: { priceInverted },\n    derivedPriceRangeInfo\n  } = usePriceRangeContext();\n  const { setDepositState } = useDepositContext();\n  const { formatNumberOrString } = useLocalizationContext();\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(currencies, priceInverted);\n  const isMobile = useIsMobile();\n  const handleEdit = useCallback(() => {\n    setDepositState(DEFAULT_DEPOSIT_STATE);\n    setStep(PositionFlowStep.PRICE_RANGE);\n  }, [setDepositState, setStep]);\n  const { formattedPrices, isFullRange } = useMemo(() => {\n    return formatPrices(derivedPriceRangeInfo, formatNumberOrString);\n  }, [formatNumberOrString, derivedPriceRangeInfo]);\n  const liquidityRangeChartProps = useMemo(\n    () => getLiquidityRangeChartProps({\n      positionInfo: derivedPositionInfo,\n      priceRangeInfo: derivedPriceRangeInfo\n    }),\n    [derivedPositionInfo, derivedPriceRangeInfo]\n  );\n  return <EditStep onClick={handleEdit} {...props}><Flex grow flexBasis={1} row gap=\"$gap20\" alignItems=\"center\" $md={{ row: false, gap: 10 }}>{!!liquidityRangeChartProps && <LiquidityPositionRangeChart grow={isMobile ? false : true} {...liquidityRangeChartProps} />}{isMobile ? <Flex row gap={10} alignItems=\"center\" alignSelf=\"flex-start\"><Text variant=\"body4\">{`${formattedPrices[0]} ${quoteCurrency?.symbol + \"/\" + baseCurrency?.symbol}`}</Text><ArrowsLeftRight size={iconSizes.icon16} color=\"$neutral2\" /><Text variant=\"body4\">{`${formattedPrices[1]} ${quoteCurrency?.symbol + \"/\" + baseCurrency?.symbol}`}</Text></Flex> : <Flex row>{!isFullRange ? <Flex gap=\"$gap4\"><Flex row gap={10}><Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.min\" /></Text><Text variant=\"body2\">{`${formattedPrices[0]} ${quoteCurrency?.symbol + \"/\" + baseCurrency?.symbol}`}</Text></Flex><Flex row gap={10}><Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.max\" /></Text><Text variant=\"body2\">{`${formattedPrices[1]} ${quoteCurrency?.symbol + \"/\" + baseCurrency?.symbol}`}</Text></Flex></Flex> : <Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.fullRange\" /></Text>}</Flex>}</Flex></EditStep>;\n};\n","\"use strict\";\nimport { axisRight, select } from \"d3\";\nimport styled from \"lib/styled-components\";\nimport { useMemo } from \"react\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst StyledGroup = styled.g`\n  line {\n    display: none;\n  }\n\n  text {\n    color: ${({ theme }) => theme.neutral2};\n  }\n`;\nconst TEXT_Y_OFFSET = 5;\nconst Axis = ({\n  axisGenerator,\n  yScale,\n  height\n}) => {\n  const axisRef = (axis) => {\n    if (axis) {\n      select(axis).call(axisGenerator).call((g) => g.select(\".domain\").remove()).call(\n        (g) => g.selectAll(\"text\").attr(\"transform\", function(d) {\n          const yCoordinate = yScale(d);\n          if (yCoordinate < TEXT_Y_OFFSET) {\n            return `translate(0, ${TEXT_Y_OFFSET})`;\n          }\n          if (yCoordinate > height - TEXT_Y_OFFSET) {\n            return `translate(0, ${-TEXT_Y_OFFSET})`;\n          }\n          return \"\";\n        })\n      );\n    }\n  };\n  return <g ref={axisRef} />;\n};\nexport const AxisRight = ({\n  yScale,\n  offset = 0,\n  min,\n  current,\n  max,\n  height\n}) => {\n  const { formatNumber } = useFormatter();\n  const tickValues = useMemo(() => {\n    const minCoordinate = min ? yScale(min) : void 0;\n    const maxCoordinate = max ? yScale(max) : void 0;\n    const currentCoordinate = current ? yScale(current) : void 0;\n    if (minCoordinate && currentCoordinate && Math.abs(minCoordinate - currentCoordinate) < TEXT_Y_OFFSET) {\n      return [min, max].filter(Boolean);\n    }\n    if (maxCoordinate && currentCoordinate && Math.abs(maxCoordinate - currentCoordinate) < TEXT_Y_OFFSET) {\n      return [min, max].filter(Boolean);\n    }\n    return [min, current, max].filter(Boolean);\n  }, [current, max, min, yScale]);\n  return <StyledGroup transform={`translate(${offset}, 0)`}><Axis\n    axisGenerator={axisRight(yScale).tickValues(tickValues).tickFormat(\n      (d) => formatNumber({\n        input: d,\n        type: NumberType.TokenQuantityStats\n      })\n    )}\n    height={height}\n    yScale={yScale}\n  /></StyledGroup>;\n};\n","\"use strict\";\nimport { OffScreenHandleV2, brushHandleAccentPathV2, brushHandlePathV2 } from \"components/LiquidityChartRangeInput/svg\";\nimport { brushY, select } from \"d3\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSporeColors } from \"ui/src\";\nconst FLIP_HANDLE_THRESHOLD_PX = 20;\nconst BRUSH_EXTENT_MARGIN_PX = 2;\nconst compare = (a, b, yScale) => {\n  const aNorm = a.map((y) => yScale(y).toFixed(1));\n  const bNorm = b.map((y) => yScale(y).toFixed(1));\n  return aNorm.every((v, i) => v === bNorm[i]);\n};\nconst toYScale = (extent, yScale) => {\n  return [yScale(extent[1]), yScale(extent[0])];\n};\nconst toPriceExtent = (selection, yScale) => {\n  return [yScale.invert(selection[1]), yScale.invert(selection[0])];\n};\nconst normalizeExtent = (extent) => extent[0] < extent[1] ? extent : [extent[1], extent[0]];\nexport const Brush2 = ({\n  id,\n  yScale,\n  interactive,\n  brushExtent,\n  setBrushExtent,\n  hideHandles,\n  width,\n  height\n}) => {\n  const colors = useSporeColors();\n  const brushRef = useRef(null);\n  const brushBehavior = useRef(null);\n  const { t } = useTranslation();\n  const [localBrushExtent, setLocalBrushExtent] = useState(brushExtent);\n  const previousBrushExtent = usePrevious(brushExtent);\n  const [brushInProgress, setBrushInProgress] = useState(false);\n  useEffect(() => {\n    if (brushInProgress) {\n      return;\n    }\n    setLocalBrushExtent(brushExtent);\n  }, [brushExtent, brushInProgress]);\n  useEffect(() => {\n    if (!brushRef.current || brushInProgress) {\n      return;\n    }\n    const normalizedExtent = normalizeExtent(brushExtent);\n    const scaledExtent = toYScale(normalizedExtent, yScale);\n    brushBehavior.current = brushY().extent([\n      // x0, y0 (top left)\n      [0, BRUSH_EXTENT_MARGIN_PX],\n      // x1, y1 (bottom right)\n      [width, height - BRUSH_EXTENT_MARGIN_PX]\n    ]).handleSize(30).filter(() => interactive).filter((event) => {\n      const target = event.target;\n      return target.classList.contains(\"selection\") || target.classList.contains(\"handle\");\n    }).on(\"brush\", (event) => {\n      const { selection } = event;\n      setBrushInProgress(true);\n      if (!selection) {\n        setLocalBrushExtent(null);\n        return;\n      }\n      const priceExtent = normalizeExtent(toPriceExtent(selection, yScale));\n      setLocalBrushExtent(priceExtent);\n    }).on(\"end\", (event) => {\n      const { selection, mode } = event;\n      if (!selection) {\n        setLocalBrushExtent(null);\n        return;\n      }\n      const priceExtent = normalizeExtent(toPriceExtent(selection, yScale));\n      if (!compare(normalizedExtent, priceExtent, yScale)) {\n        setBrushExtent(priceExtent, mode);\n      }\n      setLocalBrushExtent(priceExtent);\n      setBrushInProgress(false);\n    });\n    brushBehavior.current(select(brushRef.current));\n    if (previousBrushExtent && compare(normalizedExtent, normalizeExtent(previousBrushExtent), yScale)) {\n      select(brushRef.current).transition().call(brushBehavior.current.move, scaledExtent);\n    }\n    select(brushRef.current).selectAll(\".overlay\").attr(\"cursor\", \"default\");\n    select(brushRef.current).selectAll(\".selection\").attr(\"stroke\", \"none\").attr(\"fill-opacity\", \"0.1\").attr(\"fill\", `url(#${id}-gradient-selection)`).attr(\"cursor\", \"grab\");\n  }, [brushExtent, id, height, interactive, previousBrushExtent, yScale, width, setBrushExtent, brushInProgress]);\n  useEffect(() => {\n    if (!brushRef.current || !brushBehavior.current) {\n      return;\n    }\n    brushBehavior.current.move(\n      select(brushRef.current),\n      normalizeExtent(toYScale(brushExtent, yScale))\n    );\n  }, [brushExtent, yScale]);\n  const normalizedBrushExtent = normalizeExtent(localBrushExtent ?? brushExtent);\n  const flipNorthHandle = yScale(normalizedBrushExtent[1]) < FLIP_HANDLE_THRESHOLD_PX;\n  const flipSouthHandle = yScale(normalizedBrushExtent[0]) > height - FLIP_HANDLE_THRESHOLD_PX;\n  const showNorthArrow = normalizedBrushExtent && (yScale(normalizedBrushExtent[0]) < 0 || yScale(normalizedBrushExtent[1]) < 0);\n  const showSouthArrow = normalizedBrushExtent && (yScale(normalizedBrushExtent[0]) > height || yScale(normalizedBrushExtent[1]) > height);\n  const southHandleInView = normalizedBrushExtent && yScale(normalizedBrushExtent[0]) >= 0 && yScale(normalizedBrushExtent[0]) <= height;\n  const northHandleInView = normalizedBrushExtent && yScale(normalizedBrushExtent[1]) >= 0 && yScale(normalizedBrushExtent[1]) <= height;\n  return useMemo(\n    () => <><defs><linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\"><stop stopColor={colors.accent1.val} /><stop stopColor={colors.accent1.val} offset=\"1\" /></linearGradient>{\n      /* clips at exactly the svg area */\n    }<clipPath id={`${id}-brush-clip`}><rect x={0} y=\"0\" width={width} height={height} /></clipPath></defs>{\n      /* will host the d3 brush */\n    }<g ref={brushRef} clipPath={`url(#${id}-brush-clip)`} />{\n      /* custom brush handles */\n    }{normalizedBrushExtent && !hideHandles && <>{northHandleInView ? <g\n      transform={`translate(0, ${Math.max(0, yScale(normalizedBrushExtent[1]))}), scale(1, ${flipNorthHandle ? \"1\" : \"-1\"})`}\n      cursor={interactive ? \"ns-resize\" : \"default\"}\n      pointerEvents=\"none\"\n    ><g><path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      opacity={0.6}\n      d={brushHandlePathV2(width)}\n    /><path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      strokeWidth={4}\n      strokeLinecap=\"round\"\n      d={brushHandleAccentPathV2(width)}\n    /></g></g> : null}{southHandleInView ? <g\n      transform={`translate(0, ${yScale(normalizedBrushExtent[0])}), scale(1, ${flipSouthHandle ? \"-1\" : \"1\"})`}\n      cursor={interactive ? \"ns-resize\" : \"default\"}\n      pointerEvents=\"none\"\n    ><g><path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      opacity={0.6}\n      d={brushHandlePathV2(width)}\n    /><path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      strokeWidth={4}\n      strokeLinecap=\"round\"\n      d={brushHandleAccentPathV2(width)}\n    /></g></g> : null}{showNorthArrow && <g transform=\"translate(18, 16) scale(1,-1)\"><OffScreenHandleV2 color={colors.accent1.val} /><text\n      x={14}\n      y={-3}\n      fill={colors.accent1.val}\n      fontSize={10}\n      alignmentBaseline=\"middle\"\n      transform=\"scale(1,-1)\"\n    >{t(\"range.outOfView\")}</text></g>}{showSouthArrow && <g transform={`translate(18, ${height - 16}) `}><OffScreenHandleV2 color={colors.accent1.val} />{!showNorthArrow && <text x={14} y={5} fill={colors.accent1.val} fontSize={10} alignmentBaseline=\"middle\">{t(\"range.outOfView\")}</text>}</g>}</>}</>,\n    [\n      id,\n      colors.accent1.val,\n      colors.neutral2.val,\n      width,\n      height,\n      normalizedBrushExtent,\n      hideHandles,\n      northHandleInView,\n      yScale,\n      flipNorthHandle,\n      interactive,\n      southHandleInView,\n      flipSouthHandle,\n      showNorthArrow,\n      t,\n      showSouthArrow\n    ]\n  );\n};\n","\"use strict\";\nimport styled from \"lib/styled-components\";\nconst Bar = styled.rect`\n  stroke: ${({ fill, theme }) => fill ?? theme.accent1};\n  fill: ${({ fill, theme }) => fill ?? theme.accent1};\n`;\nexport const HorizontalArea = ({\n  series,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  fill,\n  brushDomain,\n  selectedFill,\n  containerHeight,\n  containerWidth\n}) => {\n  return <>{series.filter((d) => {\n    const value = yScale(yValue(d));\n    return value > 0 && value <= containerHeight;\n  }).map((d, i) => {\n    const price = yValue(d);\n    const isInDomain = brushDomain && price >= brushDomain[0] && price <= brushDomain[1];\n    return <Bar\n      key={i}\n      x={xScale(xValue(d))}\n      y={yScale(price)}\n      width={xScale(containerWidth) - xScale(xValue(d))}\n      height={0.2}\n      fill={isInDomain ? selectedFill : fill}\n      rx={1}\n      ry={1}\n    />;\n  })}</>;\n};\n","\"use strict\";\nimport styled from \"lib/styled-components\";\nconst StyledLine = styled.line`\n  opacity: 0.5;\n  stroke-width: 1;\n  stroke: ${({ theme }) => theme.neutral2};\n  stroke-dasharray: ${({ strokeDasharray }) => strokeDasharray};\n  fill: none;\n`;\nexport const HorizontalLine = ({\n  value,\n  yScale,\n  width,\n  containerWidth,\n  lineStyle = \"dashed\"\n}) => {\n  const lineStart = containerWidth - width;\n  if (isNaN(lineStart)) {\n    return null;\n  }\n  const strokeDasharray = lineStyle === \"dashed\" ? \"1, 4\" : \"none\";\n  return <StyledLine\n    strokeDasharray={strokeDasharray}\n    y1={yScale(value)}\n    x1={lineStart}\n    y2={yScale(value)}\n    x2={lineStart + width}\n  />;\n};\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { Flex, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport function TickTooltip({\n  hoverY,\n  hoveredTick,\n  currentPrice,\n  currentTick,\n  contentWidth,\n  axisLabelPaneWidth,\n  currency0,\n  currency1\n}) {\n  const { formatCurrencyAmount, formatPercent } = useFormatter();\n  const amount0LockedUSD = useUSDCValue(tryParseCurrencyAmount(hoveredTick.amount0Locked?.toFixed(2), currency0));\n  const amount1LockedUSD = useUSDCValue(tryParseCurrencyAmount(hoveredTick.amount1Locked?.toFixed(2), currency1));\n  if (!amount0LockedUSD || !amount1LockedUSD) {\n    return null;\n  }\n  return <Flex\n    position=\"absolute\"\n    p=\"$padding8\"\n    gap=\"$gap4\"\n    top={hoverY - 18}\n    minWidth={150}\n    right={contentWidth + axisLabelPaneWidth + 8}\n    borderRadius=\"$rounded12\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    backgroundColor=\"$surface2\"\n    pointerEvents=\"none\"\n  >{(currentPrice >= hoveredTick.price0 || hoveredTick.tick === currentTick) && <Flex justifyContent=\"space-between\" row alignItems=\"center\" gap=\"$gap8\"><Flex row gap=\"$gap4\" alignItems=\"center\"><DoubleCurrencyLogo currencies={[currency0]} size={iconSizes.icon16} /><Text variant=\"body4\">{currency0.symbol}</Text></Flex><Flex row alignItems=\"center\" gap=\"$gap4\"><Text variant=\"body4\">{formatCurrencyAmount({\n    amount: amount0LockedUSD,\n    type: NumberType.FiatTokenStats\n  })}</Text>{amount1LockedUSD && <Text variant=\"body4\" color=\"$neutral2\">{formatPercent(\n    hoveredTick.tick === currentTick ? new Percent(amount0LockedUSD.quotient, amount1LockedUSD.add(amount0LockedUSD).quotient) : new Percent(1, 1)\n  )}</Text>}</Flex></Flex>}{(currentPrice <= hoveredTick.price0 || hoveredTick.tick === currentTick) && <Flex justifyContent=\"space-between\" row alignItems=\"center\" gap=\"$gap8\"><Flex row gap=\"$gap4\" alignItems=\"center\"><DoubleCurrencyLogo currencies={[currency1]} size={iconSizes.icon16} /><Text variant=\"body4\">{currency1.symbol}</Text></Flex><Flex row alignItems=\"center\" gap=\"$gap4\"><Text variant=\"body4\">{formatCurrencyAmount({\n    amount: amount1LockedUSD,\n    type: NumberType.FiatTokenStats\n  })}</Text>{amount0LockedUSD && <Text variant=\"body4\" color=\"$neutral2\">{formatPercent(\n    hoveredTick.tick === currentTick ? new Percent(amount1LockedUSD.quotient, amount0LockedUSD.add(amount1LockedUSD).quotient) : new Percent(1, 1)\n  )}</Text>}</Flex></Flex>}</Flex>;\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { AxisRight } from \"components/Charts/ActiveLiquidityChart/AxisRight\";\nimport { Brush2 } from \"components/Charts/ActiveLiquidityChart/Brush2\";\nimport { HorizontalArea } from \"components/Charts/ActiveLiquidityChart/HorizontalArea\";\nimport { HorizontalLine } from \"components/Charts/ActiveLiquidityChart/HorizontalLine\";\nimport { TickTooltip } from \"components/Charts/ActiveLiquidityChart/TickTooltip\";\nimport { max as getMax, scaleLinear } from \"d3\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { opacify } from \"ui/src/theme\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst xAccessor = (d) => d.activeLiquidity;\nconst yAccessor = (d) => d.price0;\nconst priceDataCache = /* @__PURE__ */ new Map();\nfunction findClosestElementBinarySearch(data, target) {\n  let left = 0;\n  let right = data.length - 1;\n  if (!target) {\n    return null;\n  }\n  if (priceDataCache.has(target.toString())) {\n    return priceDataCache.get(target.toString());\n  }\n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n    if (data[mid].price0 === target) {\n      priceDataCache.set(target.toString(), data[mid]);\n      return data[mid];\n    } else if (data[mid].price0 < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  const closest = data[right] ?? { price0: Infinity };\n  const nextClosest = data[left] ?? { price0: Infinity };\n  const closestElement = Math.abs(closest.price0 - target) <= Math.abs(nextClosest.price0 - target) ? closest : nextClosest;\n  if (closestElement) {\n    priceDataCache.set(target.toString(), closestElement);\n  }\n  return closestElement;\n}\nfunction scaleToInteger(a, precision = 18) {\n  const scaleFactor = Math.pow(10, precision);\n  return Math.round(a * scaleFactor);\n}\nexport function ActiveLiquidityChart2({\n  id = \"ActiveLiquidityChart2\",\n  currency0,\n  currency1,\n  data: { series, current, min, max },\n  dimensions: { width, height, contentWidth, axisLabelPaneWidth },\n  brushDomain,\n  onBrushDomainChange,\n  disableBrushInteraction,\n  showDiffIndicators,\n  isMobile\n}) {\n  const { formatPercent } = useFormatter();\n  const colors = useSporeColors();\n  const svgRef = useRef(null);\n  const [hoverY, setHoverY] = useState();\n  const { xScale, yScale } = useMemo(() => {\n    const activeEntries = min && max ? series.filter((d) => d.price0 >= min && d.price0 <= max) : series;\n    const scales = {\n      yScale: scaleLinear().domain([min, max]).range([height, 0]),\n      xScale: scaleLinear().domain([0, getMax(activeEntries, xAccessor)]).range([width - axisLabelPaneWidth, width - axisLabelPaneWidth - contentWidth])\n    };\n    return scales;\n  }, [min, max, series, height, width, axisLabelPaneWidth, contentWidth]);\n  const hoveredTick = useMemo(() => {\n    if (!hoverY || !yScale) {\n      return void 0;\n    }\n    const price = yScale.invert(hoverY);\n    return findClosestElementBinarySearch(series, price);\n  }, [hoverY, series, yScale]);\n  const currentTick = useMemo(() => {\n    return findClosestElementBinarySearch(series, current)?.tick;\n  }, [current, series]);\n  useEffect(() => {\n    if (!brushDomain) {\n      const [min2, max2] = yScale.domain();\n      const lowerBound = min2 + (max2 - min2) * 0.2;\n      const upperBound = min2 + (max2 - min2) * 0.8;\n      onBrushDomainChange([lowerBound, upperBound], void 0);\n    }\n  }, [brushDomain, onBrushDomainChange, yScale]);\n  const southHandleInView = brushDomain && yScale(brushDomain[0]) >= 0 && yScale(brushDomain[0]) <= height;\n  const northHandleInView = brushDomain && yScale(brushDomain[1]) >= 0 && yScale(brushDomain[1]) <= height;\n  return <>{hoverY && hoveredTick && <TickTooltip\n    hoverY={hoverY}\n    hoveredTick={hoveredTick ?? void 0}\n    currentTick={currentTick}\n    currentPrice={current}\n    contentWidth={contentWidth}\n    axisLabelPaneWidth={axisLabelPaneWidth}\n    currency0={currency0}\n    currency1={currency1}\n  />}{showDiffIndicators && <>{southHandleInView && <Flex\n    borderRadius=\"$rounded12\"\n    backgroundColor=\"$surface2\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    p=\"$padding8\"\n    position=\"absolute\"\n    left={0}\n    top={yScale(brushDomain[0]) - 16}\n  ><Text variant=\"body4\">{formatPercent(new Percent(scaleToInteger(brushDomain[0] - current), scaleToInteger(current)))}</Text></Flex>}{northHandleInView && <Flex\n    borderRadius=\"$rounded12\"\n    backgroundColor=\"$surface2\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    p=\"$padding8\"\n    position=\"absolute\"\n    left={0}\n    top={yScale(brushDomain[1]) - 16}\n  ><Text variant=\"body4\">{formatPercent(new Percent(scaleToInteger(brushDomain[1] - current), scaleToInteger(current)))}</Text></Flex>}</>}<svg\n    ref={svgRef}\n    width=\"100%\"\n    height=\"100%\"\n    viewBox={`0 0 ${width} ${height}`}\n    onMouseMove={(event) => {\n      if (!svgRef.current) {\n        return;\n      }\n      const rect = svgRef.current?.getBoundingClientRect();\n      const y = event.clientY - rect.top;\n      const x = event.clientX - rect.left;\n      if (x > width - axisLabelPaneWidth - contentWidth) {\n        setHoverY(y);\n      } else {\n        setHoverY(void 0);\n      }\n    }}\n    onMouseLeave={() => setHoverY(void 0)}\n  ><defs><clipPath id={`${id}-chart-clip`}><rect x=\"0\" y=\"0\" width={width} height={height} /></clipPath>{brushDomain && // mask to highlight selected area\n  <mask id={`${id}-chart-area-mask`}><rect\n    fill=\"white\"\n    y={yScale(brushDomain[1])}\n    x={width - axisLabelPaneWidth - contentWidth - 1}\n    height={yScale(brushDomain[0]) - yScale(brushDomain[1])}\n    width={contentWidth + 2}\n  /></mask>}</defs><g><g clipPath={`url(#${id}-chart-clip)`}><HorizontalArea\n    series={series}\n    xScale={xScale}\n    yScale={yScale}\n    xValue={xAccessor}\n    yValue={yAccessor}\n    brushDomain={brushDomain}\n    fill={opacify(isMobile ? 10 : 100, brushDomain ? colors.neutral1.val : colors.accent1.val)}\n    selectedFill={opacify(isMobile ? 10 : 100, colors.accent1.val)}\n    containerHeight={height}\n    containerWidth={width - axisLabelPaneWidth}\n  /><HorizontalLine\n    value={current}\n    yScale={yScale}\n    width={contentWidth + 12}\n    containerWidth={width - axisLabelPaneWidth}\n  />{hoverY && <HorizontalLine\n    value={yScale.invert(hoverY)}\n    yScale={yScale}\n    width={contentWidth + 12}\n    containerWidth={width - axisLabelPaneWidth}\n    lineStyle=\"solid\"\n  />}{isMobile ? null : <AxisRight\n    yScale={yScale}\n    offset={width - contentWidth}\n    min={brushDomain?.[0]}\n    current={current}\n    max={brushDomain?.[1]}\n    height={height}\n  />}</g><Brush2\n    id={id}\n    yScale={yScale}\n    interactive={!disableBrushInteraction}\n    brushExtent={brushDomain ?? yScale.domain()}\n    hideHandles={!brushDomain}\n    width={width - axisLabelPaneWidth}\n    height={height}\n    setBrushExtent={onBrushDomainChange}\n  /></g></svg></>;\n}\n","\"use strict\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nconst RIGHT_AXIS_WIDTH = 64;\nconst CHART_CONTAINER_WIDTH = 452 + RIGHT_AXIS_WIDTH;\nconst LIQUIDITY_CHART_WIDTH = 68;\nconst INTER_CHART_PADDING = 12;\nconst CHART_HEIGHT = 164;\nconst BOTTOM_AXIS_HEIGHT = 28;\nconst loadedPriceChartWidth = CHART_CONTAINER_WIDTH - LIQUIDITY_CHART_WIDTH - INTER_CHART_PADDING - RIGHT_AXIS_WIDTH;\nconst desktopSizes = {\n  rightAxisWidth: RIGHT_AXIS_WIDTH,\n  chartContainerWidth: CHART_CONTAINER_WIDTH,\n  liquidityChartWidth: LIQUIDITY_CHART_WIDTH,\n  interChartPadding: INTER_CHART_PADDING,\n  chartHeight: CHART_HEIGHT,\n  bottomAxisHeight: BOTTOM_AXIS_HEIGHT,\n  loadedPriceChartWidth\n};\nconst mobileSizes = {\n  rightAxisWidth: 0,\n  chartContainerWidth: 290,\n  liquidityChartWidth: 48,\n  interChartPadding: 0,\n  chartHeight: CHART_HEIGHT,\n  bottomAxisHeight: BOTTOM_AXIS_HEIGHT,\n  loadedPriceChartWidth: 290\n};\nexport function useRangeInputSizes(parentWidth) {\n  return isMobileWeb ? {\n    ...mobileSizes,\n    chartContainerWidth: parentWidth ?? mobileSizes.chartContainerWidth,\n    loadedPriceChartWidth: parentWidth ?? mobileSizes.loadedPriceChartWidth\n  } : desktopSizes;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [HorizontalDensityChart, AnimatedHorizontalDensityChart] = createIcon({\n  name: \"HorizontalDensityChart\",\n  getIcon: (props) => <Svg viewBox=\"0 0 68 160\" fill=\"none\" {...props}><Path\n    opacity=\"0.3\"\n    d=\"M-2.81916e-05 143.755L4.26779 143.755L4.26779 146.435L7.63937 146.435L7.63938 149.115L11.4692 149.115L11.4692 151.795L13.8529 151.795L13.8529 157.156L21.2318 157.156L21.2318 159.807L16.1192 159.807L16.1192 165.196L21.1191 165.196L21.1191 170.556L31.5742 170.556L31.5742 181.277L35.6296 181.277L35.6296 186.608L24.4682 186.608L24.4682 189.317L28.2773 189.317L28.2773 191.997L31.5742 191.997L31.5742 194.677L36.538 194.677L36.538 197.329L33.713 197.329L33.713 202.718L46.8274 202.718L46.8274 208.078L51.5491 208.078L51.5491 210.758L59.2397 210.758L59.2397 218.798L60.215 218.798L60.215 224.13L58.4468 224.13L58.4468 226.81L56.0701 226.81L56.0701 229.49L54.9989 229.49L54.9989 232.199L63.8703 232.199L63.8703 234.879L64.4186 234.879L64.4186 240.239L65.2172 240.239L65.2172 250.96L65.5271 250.96L65.5271 256.291L64.9655 256.291L64.9655 259L68 259L68 -1L64.7936 -1L64.7936 7.04069L64.4543 7.04069L64.4543 12.4294L64.7478 12.4294L64.7478 20.441L64.4186 20.441L64.4186 23.1213L63.5415 23.1213L63.5415 25.8013L60.6652 25.8013L60.6652 28.4816L60.215 28.4816L60.215 31.1904L60.3503 31.1904L60.3503 33.8704L61.5876 33.8704L61.5876 36.5219L61.565 36.5219L61.565 41.882L57.2534 41.882L57.2534 44.5622L51.9347 44.5622L51.9347 52.6026L50.2346 52.6026L50.2346 57.9913L51.7052 57.9913L51.7052 63.3228L49.3319 63.3228L49.3319 66.0031L47.442 66.0031L47.442 68.7119L48.3381 68.7119L48.3381 74.0435L43.1292 74.0435L43.1292 76.7523L43.5618 76.7523L43.5618 79.4323L47.5144 79.4323L47.5144 82.0837L47.442 82.0837L47.442 87.444L46.0648 87.444L46.0648 90.124L35.8738 90.124L35.8738 95.4843L32.4742 95.4843L32.4742 100.845L26.1019 100.845L26.1019 106.205L17.0321 106.205L17.0321 108.914L24.348 108.914L24.348 111.565L14.319 111.565L14.319 116.925L7.63955 116.925L7.63955 119.634L9.32938 119.634L9.32938 122.286L7.63937 122.286L7.63937 127.646L2.65565 127.646L2.65565 130.326L1.09052 130.326L1.09052 133.035L5.9822 133.035L5.9822 135.686L4.70469 135.686L4.70469 138.366L-2.95098e-05 138.366L-2.81916e-05 143.755Z\"\n    fill=\"currentColor\"\n  /></Svg>\n});\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [SearchMinus, AnimatedSearchMinus] = createIcon({\n  name: \"SearchMinus\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}><Path\n    d=\"M14.3534 13.6467L11.44 10.7333C12.2066 9.81334 12.6667 8.62667 12.6667 7.33333C12.6667 4.38667 10.28 2 7.33333 2C4.38667 2 2 4.38667 2 7.33333C2 10.28 4.38667 12.6667 7.33333 12.6667C8.62667 12.6667 9.81332 12.2067 10.7333 11.44L13.6466 14.3533C13.7466 14.4533 13.8733 14.5 14 14.5C14.1267 14.5 14.2534 14.4533 14.3534 14.3533C14.5467 14.16 14.5467 13.84 14.3534 13.6467ZM9.33333 7.83333H5.33333C5.06 7.83333 4.83333 7.60667 4.83333 7.33333C4.83333 7.06 5.06 6.83333 5.33333 6.83333H9.33333C9.60667 6.83333 9.83333 7.06 9.83333 7.33333C9.83333 7.60667 9.60667 7.83333 9.33333 7.83333Z\"\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  /></Svg>\n});\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [SearchPlus, AnimatedSearchPlus] = createIcon({\n  name: \"SearchPlus\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}><Path\n    d=\"M14.3534 13.6467L11.44 10.7333C12.2066 9.81334 12.6667 8.62667 12.6667 7.33333C12.6667 4.38667 10.28 2 7.33333 2C4.38667 2 2 4.38667 2 7.33333C2 10.28 4.38667 12.6667 7.33333 12.6667C8.62667 12.6667 9.81332 12.2067 10.7333 11.44L13.6466 14.3533C13.7466 14.4533 13.8733 14.5 14 14.5C14.1267 14.5 14.2534 14.4533 14.3534 14.3533C14.5467 14.16 14.5467 13.84 14.3534 13.6467ZM9.33333 7.83333H7.83333V9.33333C7.83333 9.60667 7.60667 9.83333 7.33333 9.83333C7.06 9.83333 6.83333 9.60667 6.83333 9.33333V7.83333H5.33333C5.06 7.83333 4.83333 7.60667 4.83333 7.33333C4.83333 7.06 5.06 6.83333 5.33333 6.83333H6.83333V5.33333C6.83333 5.06 7.06 4.83333 7.33333 4.83333C7.60667 4.83333 7.83333 5.06 7.83333 5.33333V6.83333H9.33333C9.60667 6.83333 9.83333 7.06 9.83333 7.33333C9.83333 7.60667 9.60667 7.83333 9.33333 7.83333Z\"\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  /></Svg>\n});\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { ActiveLiquidityChart2 } from \"components/Charts/ActiveLiquidityChart/ActiveLiquidityChart2\";\nimport { Chart } from \"components/Charts/ChartModel\";\nimport { LPPriceChartModel } from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport { useRangeInputSizes } from \"components/Charts/LiquidityRangeInput/constants\";\nimport { ChartErrorView } from \"components/Charts/LoadingState\";\nimport { getCandlestickPriceBounds } from \"components/Charts/PriceChart/utils\";\nimport { PriceChartType } from \"components/Charts/utils\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { useDensityChartData } from \"components/LiquidityChartRangeInput/hooks\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { usePoolPriceChartData } from \"hooks/usePoolPriceChartData\";\nimport {\n  getCurrencyAddressWithWrap,\n  getCurrencyWithWrap,\n  getSortedCurrenciesTupleWithWrap\n} from \"pages/Pool/Positions/create/utils\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Button, Flex, SegmentedControl, Shine, Text, useSporeColors } from \"ui/src\";\nimport { HorizontalDensityChart } from \"ui/src/components/icons/HorizontalDensityChart\";\nimport { LoadingPriceCurve } from \"ui/src/components/icons/LoadingPriceCurve\";\nimport { RotatableChevron } from \"ui/src/components/icons/RotatableChevron\";\nimport { RotateLeft } from \"ui/src/components/icons/RotateLeft\";\nimport { SearchMinus } from \"ui/src/components/icons/SearchMinus\";\nimport { SearchPlus } from \"ui/src/components/icons/SearchPlus\";\nimport { HistoryDuration } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nexport function LiquidityRangeInput({\n  currency0,\n  currency1,\n  feeTier,\n  tickSpacing,\n  protocolVersion,\n  poolId,\n  minPrice,\n  maxPrice,\n  setMinPrice,\n  setMaxPrice,\n  disableBrushInteraction = false\n}) {\n  const chainInfo = getChainInfo(currency0.chainId);\n  const colors = useSporeColors();\n  const { t } = useTranslation();\n  const sortedCurrencies = getSortedCurrenciesTupleWithWrap(currency0, currency1, protocolVersion);\n  const currency1MaybeWrapped = getCurrencyWithWrap(currency1, protocolVersion);\n  const isReversed = currency1MaybeWrapped?.equals(sortedCurrencies[0]) ?? false;\n  const [selectedHistoryDuration, setSelectedHistoryDuration] = useState(HistoryDuration.Month);\n  const priceData = usePoolPriceChartData(\n    // If the Pool doesn't exist, the poolId is undefined and we skip this query.\n    {\n      addressOrId: poolId,\n      chain: chainInfo.backendChain.chain,\n      duration: selectedHistoryDuration,\n      isV4: protocolVersion === ProtocolVersion.V4,\n      isV3: protocolVersion === ProtocolVersion.V3,\n      isV2: false\n    },\n    currency0,\n    currency1,\n    protocolVersion,\n    getCurrencyAddressWithWrap(sortedCurrencies[0], protocolVersion)\n  );\n  const [boundaryPrices, setBoundaryPrices] = useState();\n  const [zoomFactor, setZoomFactor] = useState(1);\n  const { dataMin, dataMax } = useMemo(() => {\n    const { min: dataMin2, max: dataMax2 } = getCandlestickPriceBounds(priceData.entries);\n    return { dataMin: dataMin2, dataMax: dataMax2 };\n  }, [priceData.entries]);\n  const [midPrice, setMidPrice] = useState();\n  const [showDiffIndicators, setShowDiffIndicators] = useState(false);\n  useEffect(() => {\n    if (priceData.entries.length > 0) {\n      setMidPrice(priceData.entries[priceData.entries.length - 1]?.value);\n    }\n  }, [priceData.entries]);\n  const scrollIncrement = (dataMax - dataMin) / 10;\n  const { minVisiblePrice, maxVisiblePrice } = useMemo(() => {\n    if (!midPrice) {\n      return {\n        minVisiblePrice: dataMin,\n        maxVisiblePrice: dataMax\n      };\n    }\n    const mostRecentPrice = priceData.entries[priceData.entries.length - 1]?.value;\n    const maxSpread = Math.max(mostRecentPrice - dataMin, dataMax - mostRecentPrice);\n    const initialRange = 2 * maxSpread;\n    const newRange = initialRange / zoomFactor;\n    return {\n      minVisiblePrice: midPrice - newRange / 2,\n      maxVisiblePrice: midPrice + newRange / 2\n    };\n  }, [dataMax, dataMin, midPrice, priceData.entries, zoomFactor]);\n  const containerRef = useRef(null);\n  const sizes = useRangeInputSizes(containerRef.current?.clientWidth);\n  const priceChartParams = useMemo(() => {\n    return {\n      data: priceData.entries,\n      stale: priceData.dataQuality === DataQuality.STALE,\n      type: PriceChartType.LINE,\n      height: sizes.chartHeight,\n      color: colors.accent1.val,\n      currentPriceLineColor: colors.neutral2.val,\n      showXAxis: true,\n      minVisiblePrice,\n      maxVisiblePrice,\n      setBoundaryPrices,\n      isReversed,\n      disableExtendedTimeScale: !isMobileWeb,\n      allowScrollInteractions: false,\n      priceScaleMargins: {\n        top: 0,\n        bottom: 0\n      }\n    };\n  }, [\n    priceData.entries,\n    priceData.dataQuality,\n    sizes.chartHeight,\n    colors.accent1.val,\n    colors.neutral2.val,\n    minVisiblePrice,\n    maxVisiblePrice,\n    isReversed\n  ]);\n  const { formattedData, isLoading: liquidityDataLoading } = useDensityChartData({\n    poolId,\n    currencyA: sortedCurrencies[0],\n    currencyB: sortedCurrencies[1],\n    invertPrices: !isReversed,\n    version: protocolVersion,\n    feeAmount: Number(feeTier),\n    tickSpacing\n  });\n  const sortedFormattedData = useMemo(() => {\n    return formattedData?.sort((a, b) => a.price0 - b.price0);\n  }, [formattedData]);\n  const timePeriodOptions = useMemo(() => {\n    const options = [\n      [\n        HistoryDuration.Day,\n        t(\"token.priceExplorer.timeRangeLabel.day\"),\n        t(\"token.priceExplorer.timeRangeLabel.day.verbose\")\n      ],\n      [\n        HistoryDuration.Week,\n        t(\"token.priceExplorer.timeRangeLabel.week\"),\n        t(\"token.priceExplorer.timeRangeLabel.week.verbose\")\n      ],\n      [\n        HistoryDuration.Month,\n        t(\"token.priceExplorer.timeRangeLabel.month\"),\n        t(\"token.priceExplorer.timeRangeLabel.month.verbose\")\n      ],\n      [\n        HistoryDuration.Year,\n        t(\"token.priceExplorer.timeRangeLabel.year\"),\n        t(\"token.priceExplorer.timeRangeLabel.year.verbose\")\n      ],\n      [HistoryDuration.Max, t(\"token.priceExplorer.timeRangeLabel.all\")]\n    ].map((timePeriod) => ({\n      value: timePeriod[0],\n      display: <Text variant=\"buttonLabel3\">{timePeriod[1]}</Text>,\n      verboseDisplay: <Text variant=\"buttonLabel3\">{timePeriod[2] ?? timePeriod[1]}</Text>\n    }));\n    return {\n      options,\n      selected: selectedHistoryDuration\n    };\n  }, [selectedHistoryDuration, t]);\n  const [createDropdownOpen, setCreateDropdownOpen] = useState(false);\n  const showChartErrorView = !priceData.loading && priceData.entries.length === 0 || !liquidityDataLoading && !sortedFormattedData;\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container && !disableBrushInteraction) {\n      let lastCall = 0;\n      const throttleDelayMs = 50;\n      const listener = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const now = Date.now();\n        if (now - lastCall >= throttleDelayMs) {\n          lastCall = now;\n          if (event.deltaY < 0) {\n            setMidPrice((prevMidPrice) => prevMidPrice ? prevMidPrice + scrollIncrement : void 0);\n          } else if (event.deltaY > 0 && minVisiblePrice > 0) {\n            setMidPrice((prevMidPrice) => prevMidPrice ? prevMidPrice - scrollIncrement : void 0);\n          }\n        }\n      };\n      container.addEventListener(\"wheel\", listener);\n      return () => {\n        container.removeEventListener(\"wheel\", listener);\n      };\n    }\n    return void 0;\n  }, [disableBrushInteraction, midPrice, minVisiblePrice, scrollIncrement]);\n  return <Flex\n    gap=\"$gap8\"\n    overflow=\"hidden\"\n    ref={containerRef}\n    onMouseEnter={() => {\n      setShowDiffIndicators(true);\n    }}\n    onMouseLeave={() => {\n      setShowDiffIndicators(false);\n    }}\n  ><Flex height={sizes.chartHeight + sizes.bottomAxisHeight} width={sizes.chartContainerWidth} overflow=\"hidden\">{showChartErrorView && <ChartErrorView><Text variant=\"body3\" color=\"$neutral2\">{t(\"position.setRange.inputsBelow\")}</Text></ChartErrorView>}<Flex\n    width={showChartErrorView ? sizes.chartContainerWidth : sizes.loadedPriceChartWidth}\n    height={sizes.chartHeight + sizes.bottomAxisHeight}\n    overflow=\"hidden\"\n  >{(priceData.loading || showChartErrorView) && (!priceData.entries || priceData.entries.length === 0) && <Shine height={sizes.chartHeight} disabled={showChartErrorView} zIndex={0}><LoadingPriceCurve\n    size={showChartErrorView ? sizes.chartContainerWidth : sizes.loadedPriceChartWidth}\n    color=\"$neutral2\"\n  /></Shine>}{showChartErrorView ? null : <Chart\n    Model={LPPriceChartModel}\n    params={priceChartParams}\n    height={sizes.chartHeight + sizes.bottomAxisHeight}\n  />}</Flex><Flex\n    width={sizes.chartContainerWidth}\n    height={sizes.chartHeight}\n    position=\"absolute\"\n    right={0}\n    top={0}\n    pointerEvents=\"none\"\n  >{(liquidityDataLoading || priceData.loading) && <Shine\n    position=\"absolute\"\n    right={0}\n    top={0}\n    overflow=\"hidden\"\n    justifyContent=\"flex-end\"\n    height={sizes.chartHeight}\n    width={sizes.chartHeight}\n  ><HorizontalDensityChart color=\"$neutral2\" size={sizes.chartHeight} /></Shine>}{sortedFormattedData && !liquidityDataLoading && !priceData.loading && boundaryPrices && <ActiveLiquidityChart2\n    data={{\n      series: sortedFormattedData,\n      current: priceData.entries[priceData.entries.length - 1]?.value,\n      min: boundaryPrices[0],\n      max: boundaryPrices[1]\n    }}\n    disableBrushInteraction={disableBrushInteraction}\n    showDiffIndicators={showDiffIndicators}\n    brushDomain={minPrice && maxPrice ? [minPrice, maxPrice] : void 0}\n    dimensions={{\n      width: sizes.chartContainerWidth,\n      height: sizes.chartHeight,\n      contentWidth: sizes.liquidityChartWidth,\n      axisLabelPaneWidth: sizes.rightAxisWidth\n    }}\n    onBrushDomainChange={function(domain, mode) {\n      if (domain[0] < 0) {\n        return;\n      }\n      const hasValidRange = minPrice !== void 0 && maxPrice !== void 0 && minPrice < maxPrice && minPrice >= 0 && maxPrice >= 0;\n      if (!mode && hasValidRange) {\n        return;\n      }\n      setMinPrice(domain[0]);\n      setMaxPrice(domain[1]);\n    }}\n    currency0={currency0}\n    currency1={currency1}\n    isMobile={isMobileWeb}\n  />}</Flex></Flex><Flex row alignItems=\"center\" gap=\"$gap8\" $lg={{ justifyContent: \"space-between\" }}><Flex row alignItems=\"center\" gap=\"$gap8\">{isMobileWeb ? <DropdownSelector\n    containerStyle={{ width: \"auto\" }}\n    menuLabel={<Flex\n      borderRadius=\"$rounded16\"\n      backgroundColor=\"transparent\"\n      row\n      centered\n      p=\"$padding8\"\n      pl=\"$padding12\"\n      borderColor=\"$surface3\"\n      borderWidth={1}\n      gap=\"$gap6\"\n      {...ClickableTamaguiStyle}\n    >{timePeriodOptions.options.find((p) => p.value === timePeriodOptions.selected)?.display}<RotatableChevron direction=\"down\" height={16} width={16} color=\"$neutral2\" /></Flex>}\n    buttonStyle={{\n      borderWidth: 0,\n      p: 0\n    }}\n    dropdownStyle={{\n      width: 160\n    }}\n    internalMenuItems={<>{timePeriodOptions.options.map((p) => <Flex\n      key={p.value}\n      width=\"100%\"\n      height={32}\n      row\n      alignItems=\"center\"\n      justifyContent=\"flex-start\"\n      p=\"$padding12\"\n      onPress={() => {\n        setSelectedHistoryDuration(p.value);\n        setZoomFactor(1);\n        setBoundaryPrices(void 0);\n      }}\n    >{p.verboseDisplay}</Flex>)}</>}\n    hideChevron={true}\n    isOpen={createDropdownOpen}\n    toggleOpen={() => {\n      setCreateDropdownOpen((prev) => !prev);\n    }}\n  /> : <SegmentedControl\n    options={timePeriodOptions.options}\n    selectedOption={timePeriodOptions.selected}\n    onSelectOption={(option) => {\n      setSelectedHistoryDuration(option);\n      setZoomFactor(1);\n      setBoundaryPrices(void 0);\n    }}\n  />}<Flex row centered borderRadius=\"$roundedFull\"><Button\n    animation=\"100ms\"\n    backgroundColor=\"$transparent\"\n    hoverStyle={{ backgroundColor: \"$transparent\", opacity: 0.8 }}\n    pressStyle={{ backgroundColor: \"$surface3\", opacity: 0.8 }}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    borderTopLeftRadius=\"$roundedFull\"\n    borderBottomLeftRadius=\"$roundedFull\"\n    p=\"$spacing8\"\n    onPress={() => {\n      setZoomFactor((prevZoomFactor) => prevZoomFactor * 1.2);\n    }}\n  ><SearchPlus size={16} color=\"$neutral1\" /></Button><Button\n    animation=\"100ms\"\n    backgroundColor=\"$transparent\"\n    hoverStyle={{ backgroundColor: \"$transparent\", opacity: 0.8 }}\n    pressStyle={{ backgroundColor: \"$surface3\", opacity: 0.8 }}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    borderTopRightRadius=\"$roundedFull\"\n    borderBottomRightRadius=\"$roundedFull\"\n    p=\"$spacing8\"\n    onPress={() => {\n      setZoomFactor((prevZoomFactor) => prevZoomFactor / 1.2);\n    }}\n  ><SearchMinus size={16} color=\"$neutral1\" /></Button></Flex></Flex><Button\n    height={32}\n    backgroundColor=\"$transparent\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    hoverStyle={{ backgroundColor: \"$transparent\", opacity: 0.8 }}\n    pressStyle={{ backgroundColor: \"$surface3\", opacity: 0.8 }}\n    onPress={() => {\n      setSelectedHistoryDuration(HistoryDuration.Month);\n      setZoomFactor(1);\n      setMinPrice(void 0);\n      setMaxPrice(void 0);\n      setMidPrice(priceData.entries[priceData.entries.length - 1]?.value);\n    }}\n  >{isMobileWeb ? <RotateLeft size={16} color=\"$neutral1\" /> : <Text variant=\"buttonLabel3\">{t(\"common.button.reset\")}</Text>}</Button></Flex></Flex>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { LiquidityRangeInput } from \"components/Charts/LiquidityRangeInput/LiquidityRangeInput\";\nimport LiquidityChartRangeInput from \"components/LiquidityChartRangeInput\";\nimport { BaseQuoteFiatAmount } from \"pages/Pool/Positions/create/BaseQuoteFiatAmount\";\nimport { useCreatePositionContext, usePriceRangeContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { Container } from \"pages/Pool/Positions/create/shared\";\nimport { getInvertedTuple } from \"pages/Pool/Positions/create/utils\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Minus, Plus } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useRangeHopCallbacks } from \"state/mint/v3/hooks\";\nimport { Button, Flex, SegmentedControl, Text, useSporeColors } from \"ui/src\";\nimport { AlertTriangleFilled } from \"ui/src/components/icons/AlertTriangleFilled\";\nimport { fonts } from \"ui/src/theme\";\nimport { AmountInput, numericInputRegex } from \"uniswap/src/components/CurrencyInputPanel/AmountInput\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { areCurrenciesEqual } from \"uniswap/src/utils/currencyId\";\nvar RangeSelectionInput = /* @__PURE__ */ ((RangeSelectionInput2) => {\n  RangeSelectionInput2[RangeSelectionInput2[\"MIN\"] = 0] = \"MIN\";\n  RangeSelectionInput2[RangeSelectionInput2[\"MAX\"] = 1] = \"MAX\";\n  return RangeSelectionInput2;\n})(RangeSelectionInput || {});\nvar RangeSelection = /* @__PURE__ */ ((RangeSelection2) => {\n  RangeSelection2[\"FULL\"] = \"FULL\";\n  RangeSelection2[\"CUSTOM\"] = \"CUSTOM\";\n  return RangeSelection2;\n})(RangeSelection || {});\nfunction DisplayCurrentPrice({ price }) {\n  return <Flex gap=\"$gap8\" row alignItems=\"center\" $md={{ row: false, alignItems: \"flex-start\" }}><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"common.currentPrice.label\" /></Text><BaseQuoteFiatAmount price={price} base={price?.baseCurrency} quote={price?.quoteCurrency} /></Flex>;\n}\nconst InitialPriceInput = () => {\n  const colors = useSporeColors();\n  const { derivedPositionInfo } = useCreatePositionContext();\n  const {\n    priceRangeState: { initialPrice, initialPriceInverted },\n    setPriceRangeState,\n    derivedPriceRangeInfo\n  } = usePriceRangeContext();\n  const [token0, token1] = derivedPositionInfo.currencies;\n  const [initialPriceBaseToken, initialPriceQuoteToken] = getInvertedTuple(\n    derivedPositionInfo.currencies,\n    initialPriceInverted\n  );\n  const price = derivedPriceRangeInfo.price;\n  const controlOptions = useMemo(() => {\n    return [{ value: token0?.symbol ?? \"\" }, { value: token1?.symbol ?? \"\" }];\n  }, [token0?.symbol, token1?.symbol]);\n  const handleSelectInitialPriceBaseToken = useCallback(\n    (option) => {\n      if (option === token0?.symbol) {\n        setPriceRangeState((prevState) => ({ ...prevState, initialPriceInverted: false }));\n      } else {\n        setPriceRangeState((prevState) => ({ ...prevState, initialPriceInverted: true }));\n      }\n    },\n    [token0?.symbol, setPriceRangeState]\n  );\n  return <Flex gap=\"$spacing12\"><Flex row justifyContent=\"space-between\"><Flex shrink gap=\"$spacing4\"><Text flex={1} variant=\"subheading1\"><Trans i18nKey=\"position.initialPrice\" /></Text><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"position.initialPrice.info\" /></Text></Flex><SegmentedControl\n    options={controlOptions}\n    selectedOption={initialPriceBaseToken?.symbol ?? \"\"}\n    onSelectOption={handleSelectInitialPriceBaseToken}\n  /></Flex><Flex\n    row\n    backgroundColor=\"$surface2\"\n    borderWidth=\"$spacing1\"\n    borderColor=\"$surface3\"\n    py=\"$spacing12\"\n    px=\"$spacing16\"\n    borderRadius=\"$rounded16\"\n    gap=\"$spacing12\"\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  ><AmountInput\n    backgroundColor=\"$transparent\"\n    borderWidth={0}\n    borderRadius=\"$none\"\n    color=\"$neutral1\"\n    fontFamily=\"$heading\"\n    fontSize={fonts.heading3.fontSize}\n    fontWeight={fonts.heading3.fontWeight}\n    lineHeight={fonts.heading3.lineHeight}\n    overflow=\"visible\"\n    placeholder=\"0\"\n    placeholderTextColor={colors.neutral3.val}\n    px=\"$none\"\n    py=\"$none\"\n    value={initialPrice}\n    onChangeText={(text) => setPriceRangeState((prev) => ({ ...prev, initialPrice: text }))}\n  /><Text variant=\"body2\" color=\"$neutral2\" $md={{ variant: \"body3\" }} flexShrink={0}><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: initialPriceQuoteToken?.symbol,\n      symbolB: initialPriceBaseToken?.symbol\n    }}\n  /></Text></Flex><DisplayCurrentPrice\n    price={areCurrenciesEqual(price?.baseCurrency, initialPriceBaseToken) ? price : price?.invert()}\n  /></Flex>;\n};\nfunction RangeControl({ value, active }) {\n  return <Text color={active ? \"$neutral1\" : \"$neutral2\"} userSelect=\"none\" variant=\"buttonLabel3\">{value}</Text>;\n}\nfunction numericInputEnforcerWithInfinity(value) {\n  return !value || numericInputRegex.test(value) || value === \"\\u221E\";\n}\nfunction RangeInput({\n  value,\n  input,\n  decrement,\n  increment,\n  showIncrementButtons = true,\n  isInvalid = false\n}) {\n  const colors = useSporeColors();\n  const { t } = useTranslation();\n  const { derivedPositionInfo } = useCreatePositionContext();\n  const {\n    priceRangeState: { priceInverted },\n    setPriceRangeState\n  } = usePriceRangeContext();\n  const [typedValue, setTypedValue] = useState(\"\");\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(derivedPositionInfo.currencies, priceInverted);\n  const [displayUserTypedValue, setDisplayUserTypedValue] = useState(false);\n  const handlePriceRangeInput = useCallback(\n    (input2, value2) => {\n      if (input2 === 0 /* MIN */) {\n        setPriceRangeState((prev) => ({ ...prev, minPrice: value2, fullRange: false }));\n      } else {\n        setPriceRangeState((prev) => ({ ...prev, maxPrice: value2, fullRange: false }));\n      }\n      setTypedValue(value2);\n      setDisplayUserTypedValue(true);\n    },\n    [setPriceRangeState]\n  );\n  const handleDecrement = useCallback(() => {\n    handlePriceRangeInput(input, decrement());\n    setDisplayUserTypedValue(false);\n  }, [decrement, handlePriceRangeInput, input]);\n  const handleIncrement = useCallback(() => {\n    handlePriceRangeInput(input, increment());\n    setDisplayUserTypedValue(false);\n  }, [handlePriceRangeInput, increment, input]);\n  return <Flex\n    row\n    flex={1}\n    position=\"relative\"\n    backgroundColor=\"$surface2\"\n    borderBottomRightRadius={input === 0 /* MIN */ ? \"$none\" : \"$rounded20\"}\n    borderBottomLeftRadius={input === 0 /* MIN */ ? \"$rounded20\" : \"$none\"}\n    p=\"$spacing16\"\n    justifyContent=\"space-between\"\n    overflow=\"hidden\"\n  ><Flex gap=\"$gap4\" overflow=\"hidden\" flex={1}><Text variant=\"body3\" color=\"$neutral2\">{input === 0 /* MIN */ ? t(`pool.minPrice`) : t(`pool.maxPrice`)}</Text><AmountInput\n    backgroundColor=\"$transparent\"\n    borderWidth={0}\n    borderRadius=\"$none\"\n    color={isInvalid ? \"$statusCritical\" : \"$neutral1\"}\n    fontFamily=\"$heading\"\n    fontSize={fonts.heading3.fontSize}\n    fontWeight={fonts.heading3.fontWeight}\n    maxDecimals={quoteCurrency?.decimals ?? 18}\n    overflow=\"visible\"\n    placeholder=\"0\"\n    placeholderTextColor={colors.neutral3.val}\n    px=\"$none\"\n    py=\"$none\"\n    value={displayUserTypedValue ? typedValue : value}\n    onChangeText={(text) => handlePriceRangeInput(input, text)}\n    onBlur={() => setDisplayUserTypedValue(false)}\n    inputEnforcer={numericInputEnforcerWithInfinity}\n    $md={{\n      fontSize: fonts.subheading2.fontSize,\n      fontWeight: fonts.subheading2.fontWeight\n    }}\n  /><Text variant=\"body3\" color=\"$neutral2\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: quoteCurrency?.symbol,\n      symbolB: baseCurrency?.symbol\n    }}\n  /></Text></Flex>{showIncrementButtons && <Flex gap={10}><Button theme=\"secondary\" p=\"$spacing8\" borderRadius=\"$roundedFull\" onPress={handleIncrement}><Plus size=\"16px\" color={colors.neutral1.val} /></Button><Button\n    theme=\"secondary\"\n    p=\"$spacing8\"\n    borderRadius=\"$roundedFull\"\n    color=\"$neutral1\"\n    onPress={handleDecrement}\n  ><Minus size=\"16px\" color={colors.neutral1.val} /></Button></Flex>}</Flex>;\n}\nexport const SelectPriceRangeStepV2 = ({ onContinue, ...rest }) => {\n  return <Container {...rest}><InitialPriceInput /><Button\n    flex={1}\n    py=\"$spacing16\"\n    px=\"$spacing20\"\n    backgroundColor=\"$accent3\"\n    hoverStyle={{\n      backgroundColor: void 0,\n      opacity: 0.8\n    }}\n    pressStyle={{\n      backgroundColor: void 0\n    }}\n    onPress={onContinue}\n  ><Text variant=\"buttonLabel1\" color=\"$surface1\"><Trans i18nKey=\"common.button.continue\" /></Text></Button></Container>;\n};\nexport const SelectPriceRangeStep = ({\n  onContinue,\n  onDisableContinue,\n  ...rest\n}) => {\n  const { t } = useTranslation();\n  const {\n    positionState: { fee },\n    derivedPositionInfo\n  } = useCreatePositionContext();\n  const { priceRangeState, setPriceRangeState, derivedPriceRangeInfo } = usePriceRangeContext();\n  const [token0, token1] = derivedPositionInfo.currencies;\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(derivedPositionInfo.currencies, priceRangeState.priceInverted);\n  const creatingPoolOrPair = derivedPositionInfo.creatingPoolOrPair;\n  const isPriceRangeInputV2Enabled = useFeatureFlag(FeatureFlags.PriceRangeInputV2);\n  const controlOptions = useMemo(() => {\n    return [{ value: token0?.symbol ?? \"\" }, { value: token1?.symbol ?? \"\" }];\n  }, [token0, token1]);\n  const handleSelectToken = useCallback(\n    (option) => {\n      if (option === token0?.symbol) {\n        setPriceRangeState((prevState) => ({ ...prevState, priceInverted: false }));\n      } else {\n        setPriceRangeState((prevState) => ({ ...prevState, priceInverted: true }));\n      }\n    },\n    [token0?.symbol, setPriceRangeState]\n  );\n  const price = derivedPriceRangeInfo.price;\n  const { ticks, isSorted, prices, ticksAtLimit, pricesAtTicks, invalidPrice, invalidRange } = useMemo(() => {\n    if (derivedPriceRangeInfo.protocolVersion === ProtocolVersion.V2) {\n      return {\n        ticks: void 0,\n        isSorted: false,\n        prices: void 0,\n        pricesAtTicks: void 0,\n        ticksAtLimit: [false, false],\n        invalidPrice: false,\n        invalidRange: false\n      };\n    }\n    return derivedPriceRangeInfo;\n  }, [derivedPriceRangeInfo]);\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper } = useRangeHopCallbacks(\n    derivedPositionInfo.protocolVersion === ProtocolVersion.V3 ? {\n      baseCurrency,\n      quoteCurrency,\n      feeAmount: fee.feeAmount,\n      tickLower: ticks?.[0],\n      tickUpper: ticks?.[1],\n      pool: derivedPositionInfo.pool\n    } : derivedPositionInfo.protocolVersion === ProtocolVersion.V4 ? {\n      baseCurrency,\n      quoteCurrency,\n      fee,\n      tickLower: ticks?.[0],\n      tickUpper: ticks?.[1],\n      pool: derivedPositionInfo.pool\n    } : {\n      baseCurrency: void 0,\n      quoteCurrency: void 0,\n      feeAmount: void 0,\n      tickLower: void 0,\n      tickUpper: void 0,\n      pool: void 0\n    }\n  );\n  const handleSelectRange = useCallback(\n    (option) => {\n      if (option === \"FULL\" /* FULL */) {\n        setPriceRangeState((prevState) => ({\n          ...prevState,\n          minPrice: \"\",\n          maxPrice: \"\",\n          fullRange: true\n        }));\n      } else {\n        setPriceRangeState((prevState) => ({\n          ...prevState,\n          minPrice: void 0,\n          maxPrice: void 0,\n          fullRange: false\n        }));\n      }\n    },\n    [setPriceRangeState]\n  );\n  const segmentedControlRangeOptions = [\n    {\n      display: <RangeControl value={t(`common.fullRange`)} active={priceRangeState.fullRange} />,\n      value: \"FULL\" /* FULL */\n    },\n    {\n      display: <RangeControl value={t(`common.customRange`)} active={!priceRangeState.fullRange} />,\n      value: \"CUSTOM\" /* CUSTOM */\n    }\n  ];\n  const rangeSelectionInputValues = useMemo(() => {\n    return [\n      ticksAtLimit[isSorted ? 0 : 1] ? \"0\" : prices?.[0]?.toSignificant(8) ?? \"\",\n      ticksAtLimit[isSorted ? 1 : 0] ? \"\\u221E\" : prices?.[1]?.toSignificant(8) ?? \"\"\n    ];\n  }, [isSorted, prices, ticksAtLimit]);\n  const handleChartRangeInput = useCallback(\n    (input, value) => {\n      if (priceRangeState.fullRange) {\n        return;\n      } else if (input === 0 /* MIN */) {\n        setPriceRangeState((prev) => ({ ...prev, minPrice: value, fullRange: false }));\n      } else {\n        setPriceRangeState((prev) => ({ ...prev, maxPrice: value, fullRange: false }));\n      }\n    },\n    [priceRangeState.fullRange, setPriceRangeState]\n  );\n  const invalidState = onDisableContinue || invalidPrice || invalidRange || derivedPositionInfo.creatingPoolOrPair && (!priceRangeState.initialPrice || priceRangeState.initialPrice.length === 0);\n  if (derivedPositionInfo.protocolVersion === ProtocolVersion.V2) {\n    return <Container {...rest}><InitialPriceInput /><Button\n      flex={1}\n      py=\"$spacing16\"\n      px=\"$spacing20\"\n      backgroundColor=\"$accent3\"\n      hoverStyle={{\n        backgroundColor: void 0,\n        opacity: 0.8\n      }}\n      pressStyle={{\n        backgroundColor: void 0\n      }}\n      onPress={onContinue}\n      disabled={invalidState}\n    ><Text variant=\"buttonLabel1\" color=\"$surface1\"><Trans i18nKey=\"common.button.continue\" /></Text></Button></Container>;\n  }\n  const showIncrementButtons = !!derivedPositionInfo.pool && !priceRangeState.fullRange;\n  return <Container {...rest}>{creatingPoolOrPair && <InitialPriceInput />}<Flex gap=\"$gap20\"><Flex row alignItems=\"center\"><Text flex={1} variant=\"subheading1\"><Trans i18nKey=\"position.setRange\" /></Text><SegmentedControl\n    options={controlOptions}\n    selectedOption={baseCurrency?.symbol ?? \"\"}\n    onSelectOption={handleSelectToken}\n  /></Flex><SegmentedControl\n    options={segmentedControlRangeOptions}\n    selectedOption={priceRangeState.fullRange ? \"FULL\" /* FULL */ : \"CUSTOM\" /* CUSTOM */}\n    onSelectOption={handleSelectRange}\n    fullWidth\n    size=\"large\"\n  /><Text variant=\"body3\" color=\"$neutral2\">{priceRangeState.fullRange ? t(\"position.provide.liquidityDescription\") : t(\"position.provide.liquidityDescription.custom\")}</Text><Flex gap=\"$gap4\"><Flex\n    backgroundColor=\"$surface2\"\n    p=\"$padding16\"\n    gap=\"$gap12\"\n    borderTopLeftRadius=\"$rounded20\"\n    borderTopRightRadius=\"$rounded20\"\n    $lg={{\n      px: \"$spacing8\"\n    }}\n  ><DisplayCurrentPrice price={price} />{!creatingPoolOrPair && !isPriceRangeInputV2Enabled && <LiquidityChartRangeInput\n    currencyA={baseCurrency ?? void 0}\n    currencyB={quoteCurrency ?? void 0}\n    feeAmount={fee.feeAmount}\n    ticksAtLimit={{\n      LOWER: ticksAtLimit[0],\n      UPPER: ticksAtLimit[1]\n    }}\n    price={price ? parseFloat(price.toSignificant(8)) : void 0}\n    priceLower={pricesAtTicks?.[0]}\n    priceUpper={pricesAtTicks?.[1]}\n    onLeftRangeInput={(text) => handleChartRangeInput(0 /* MIN */, text)}\n    onRightRangeInput={(text) => handleChartRangeInput(1 /* MAX */, text)}\n    interactive={true}\n    protocolVersion={derivedPositionInfo.protocolVersion}\n    tickSpacing={derivedPositionInfo.pool?.tickSpacing}\n  />}{isPriceRangeInputV2Enabled && baseCurrency && quoteCurrency && derivedPositionInfo.poolId && <LiquidityRangeInput\n    currency0={quoteCurrency}\n    currency1={baseCurrency}\n    feeTier={fee.feeAmount}\n    tickSpacing={derivedPositionInfo.pool?.tickSpacing}\n    protocolVersion={derivedPositionInfo.protocolVersion}\n    poolId={derivedPositionInfo.poolId}\n    disableBrushInteraction={priceRangeState.fullRange}\n    minPrice={priceRangeState.fullRange ? void 0 : parseFloat(prices?.[0]?.toSignificant(8) ?? \"0\")}\n    maxPrice={priceRangeState.fullRange ? void 0 : parseFloat(prices?.[1]?.toSignificant(8) ?? \"0\")}\n    setMinPrice={(minPrice) => {\n      handleChartRangeInput(0 /* MIN */, minPrice?.toString());\n    }}\n    setMaxPrice={(maxPrice) => {\n      handleChartRangeInput(1 /* MAX */, maxPrice?.toString());\n    }}\n  />}</Flex><Flex row gap=\"$gap4\" $lg={{ row: false }}><RangeInput\n    input={0 /* MIN */}\n    decrement={isSorted ? getDecrementLower : getIncrementUpper}\n    increment={isSorted ? getIncrementLower : getDecrementUpper}\n    value={rangeSelectionInputValues[0]}\n    showIncrementButtons={showIncrementButtons}\n    isInvalid={invalidRange}\n  /><RangeInput\n    input={1 /* MAX */}\n    decrement={isSorted ? getDecrementUpper : getIncrementLower}\n    increment={isSorted ? getIncrementUpper : getDecrementLower}\n    value={rangeSelectionInputValues[1]}\n    showIncrementButtons={showIncrementButtons}\n    isInvalid={invalidRange}\n  /></Flex></Flex>{(invalidPrice || invalidRange) && <Flex row alignItems=\"center\" px=\"$padding16\" gap=\"$gap4\"><AlertTriangleFilled size=\"$icon.16\" color=\"$statusCritical\" /><Text color=\"$statusCritical\" variant=\"body3\">{invalidRange ? t(\"position.create.invalidRange\") : t(\"position.create.invalidPrice\")}</Text></Flex>}</Flex><Button\n    flex={1}\n    py=\"$spacing16\"\n    px=\"$spacing20\"\n    backgroundColor=\"$accent3\"\n    hoverStyle={{\n      backgroundColor: void 0,\n      opacity: 0.8\n    }}\n    pressStyle={{\n      backgroundColor: void 0\n    }}\n    onPress={onContinue}\n    disabled={invalidState}\n  ><Text variant=\"buttonLabel1\" color=\"$surface1\">{t(`common.button.continue`)}</Text></Button></Container>;\n};\n"],"names":["_ref","params","deadlineInMinutes","rest","_objectWithoutProperties2","default","_excluded","queryKey","TRADING_API_CACHE_KEY","uniswapUrls","tradingApiPaths","createLp","deadline","getTradeSettingsDeadline","paramsWithDeadline","Object","assign","useQuery","queryFn","_asyncToGenerator2","createLpPosition","skipToken","_reactQuery","require","_urls","_TradingApiClient","_getTradeSettingsDeadline","PoolProgressIndicator","steps","assert","length","Flex","width","borderRadius","py","borderColor","borderWidth","p","map","step","index","Fragment","row","gap","alignItems","onPress","ClickableTamaguiStyle","height","backgroundColor","active","justifyContent","Text","variant","color","userSelect","Trans","i18nKey","values","number","label","ml","my","SUPPORTED_V2POOL_CHAIN_IDS","keys","V2_ROUTER_ADDRESSES","chainId","parseInt","useNetworkSupportsV2","useAccount","includes","BaseQuoteFiatAmount","price","base","quote","formatCurrencyAmount","formatPrice","useFormatter","quoteCurrencyAmount","tryParseCurrencyAmount","toFixed","quoteCurrency","usdPrice","useUSDCValue","symbol","type","NumberType","TokenTx","amount","FiatTokenPrice","FeeTierPercentInput","styled","StyledPercentInput","FeeTierSearchModal","useMultichainContext","positionState","fee","selectedFee","protocolVersion","hook","derivedPositionInfo","setPositionState","feeTierSearchModalOpen","setFeeTierSearchModalOpen","setDynamicFeeTierSpeedbumpData","useCreatePositionContext","onClose","setCreateFeeValue","setCreateModeEnabled","t","useTranslation","trace","useTrace","searchValue","setSearchValue","useState","createFeeValue","createModeEnabled","formatNumberOrString","formatPercent","useLocalizationContext","autoDecrementing","setAutoDecrementing","autoIncrementing","setAutoIncrementing","holdDuration","setHoldDuration","hiddenObserver","useResizeObserver","withDynamicFeeTier","Boolean","feeTierData","hasExistingFeeTiers","useAllFeeTierPoolData","currencies","showCreateModal","useEffect","interval","holdTimeout","baseInterval","currentInterval","setTimeout","prev","ms","setInterval","newValue","parseFloat","clearInterval","clearTimeout","feeHundredthsOfBips","Math","round","Modal","name","ModalName","FeeTierSearch","isDismissible","isModalOpen","BackArrow","size","flexGrow","textAlign","pl","CloseIcon","data-testid","onClick","px","onPressIn","onPressOut","isNaN","mb","grow","maxWidth","centered","value","onUserInput","input","placeholder","maxDecimals","maxLength","$width","NumericalInputSymbolContainer","showPlaceholder","NumericalInputMimic","ref","Button","flex","hoverStyle","opacity","pressStyle","disabled","prevState","feeAmount","tickSpacing","calculateTickSpacingFromFeeAmount","sendAnalyticsEvent","LiquidityEventName","SELECT_LIQUIDITY_POOL_FEE_TIER","action","FeePoolSelectAction","SEARCH","fee_tier","is_new_fee_tier","Search","AmountInput","autoFocus","alignSelf","fontFamily","fontSize","placeholderTextColor","onChangeText","indexOf","numericInputRegex","test","slice","maxHeight","overflow","filter","data","formattedFee","id","pool","isDynamicFeeTier","open","wishFeeData","totalLiquidityUsd","FiatTokenStats","created","percentage","CheckCircleFilled","theme","icon","Plus","DynamicFeeTierSpeedbump","dynamicFeeTierSpeedbumpData","handleCancel","Dialog","InfoCircleFilled","isVisible","title","description","onCancel","buttonsConfig","left","right","CreatePositionContextProvider","children","initialState","DEFAULT_POSITION_STATE","setStep","PositionFlowStep","SELECT_TOKENS_AND_FEE_TIER","useDerivedPositionInfo","reset","useCallback","CreatePositionContext","Provider","PriceRangeContextProvider","priceRangeState","setPriceRangeState","DEFAULT_PRICE_RANGE_STATE","creatingPoolOrPair","fullRange","minPrice","maxPrice","priceInverted","derivedPriceRangeInfo","useDerivedPriceRangeInfo","PriceRangeContext","DepositContextProvider","depositState","setDepositState","DEFAULT_DEPOSIT_STATE","derivedDepositInfo","useDerivedDepositInfo","DepositContext","CreateTxContextProvider","approvalCalldata","createCalldata","account","useAccountMeta","useDepositContext","usePriceRangeContext","swapSettings","useTransactionSettingsContext","hasError","error","addLiquidityApprovalParams","useMemo","generateAddLiquidityApprovalParams","approvalError","isLoading","approvalLoading","refetch","approvalRefetch","useCheckLpApprovalQuery","staleTime","ONE_SECOND_MS","enabled","gasFeeToken0USD","useUSDCurrencyAmountOfGasFee","gasFeeToken0Approval","gasFeeToken1USD","gasFeeToken1Approval","createCalldataQueryParams","generateCreateCalldataQueryParams","createError","createRefetch","useCreateLpPositionCalldataQuery","customDeadline","refetchInterval","actualGasFee","gasFee","calculatedGasFee","useTransactionGasFee","create","increaseGasFeeUsd","totalGasFee","reduce","total","add","validatedValue","txInfo","generateCreatePositionTxRequest","gasFeeEstimateUSD","CreateTxContext","Edit","AnimatedEdit","createIcon","getIcon","props","Svg","viewBox","fill","Path","d","EditStep","Container","$md","iconSizes","icon20","display","EditSelectTokensStep","token0","token1","resetPriceRangeState","resetDepositState","versionLabel","getProtocolVersionLabel","screenSize","useScreenSize","handleEdit","DoubleCurrencyLogo","sm","icon32","icon44","flexDirection","LiquidityPositionInfoBadges","v4hook","feeTier","EditRangeSelectionStep","baseCurrency","getInvertedTuple","isMobile","useIsMobile","PRICE_RANGE","formattedPrices","isFullRange","formatPrices","liquidityRangeChartProps","getLiquidityRangeChartProps","positionInfo","priceRangeInfo","flexBasis","LiquidityPositionRangeChart","ArrowsLeftRight","icon16","StyledGroup","g","neutral2","Axis","axisGenerator","yScale","axis","select","call","remove","selectAll","attr","yCoordinate","AxisRight","offset","min","current","max","formatNumber","tickValues","minCoordinate","maxCoordinate","currentCoordinate","abs","transform","axisRight","tickFormat","TokenQuantityStats","compare","a","b","aNorm","y","bNorm","every","v","i","toYScale","extent","toPriceExtent","selection","invert","normalizeExtent","Brush2","interactive","brushExtent","setBrushExtent","hideHandles","colors","useSporeColors","brushRef","useRef","brushBehavior","localBrushExtent","setLocalBrushExtent","previousBrushExtent","usePrevious","brushInProgress","setBrushInProgress","normalizedExtent","scaledExtent","brushY","handleSize","event","target","classList","contains","on","priceExtent","mode","transition","move","normalizedBrushExtent","flipNorthHandle","flipSouthHandle","showNorthArrow","showSouthArrow","southHandleInView","northHandleInView","defs","linearGradient","x1","y1","x2","y2","stop","stopColor","accent1","val","clipPath","rect","x","cursor","pointerEvents","path","stroke","brushHandlePathV2","strokeWidth","strokeLinecap","brushHandleAccentPathV2","OffScreenHandleV2","text","alignmentBaseline","Bar","HorizontalArea","series","xScale","xValue","yValue","brushDomain","selectedFill","containerHeight","containerWidth","isInDomain","rx","ry","StyledLine","line","strokeDasharray","HorizontalLine","lineStyle","lineStart","TickTooltip","hoverY","hoveredTick","currentPrice","currentTick","contentWidth","axisLabelPaneWidth","currency0","currency1","amount0LockedUSD","amount0Locked","amount1LockedUSD","amount1Locked","position","top","minWidth","price0","tick","Percent","quotient","xAccessor","activeLiquidity","yAccessor","priceDataCache","Map","findClosestElementBinarySearch","has","toString","get","mid","floor","set","closest","Infinity","nextClosest","closestElement","scaleToInteger","precision","scaleFactor","pow","ActiveLiquidityChart2","dimensions","onBrushDomainChange","disableBrushInteraction","showDiffIndicators","svgRef","setHoverY","activeEntries","scaleLinear","domain","range","getMax","min2","max2","svg","onMouseMove","getBoundingClientRect","clientY","clientX","onMouseLeave","mask","opacify","neutral1","desktopSizes","rightAxisWidth","chartContainerWidth","liquidityChartWidth","interChartPadding","chartHeight","bottomAxisHeight","loadedPriceChartWidth","CHART_CONTAINER_WIDTH","mobileSizes","HorizontalDensityChart","AnimatedHorizontalDensityChart","SearchMinus","AnimatedSearchMinus","fillRule","clipRule","SearchPlus","AnimatedSearchPlus","LiquidityRangeInput","poolId","setMinPrice","setMaxPrice","currency1MaybeWrapped","containerRef","priceData","timePeriodOptions","chainInfo","getChainInfo","sortedCurrencies","getSortedCurrenciesTupleWithWrap","isReversed","getCurrencyWithWrap","equals","selectedHistoryDuration","setSelectedHistoryDuration","HistoryDuration","Month","usePoolPriceChartData","addressOrId","chain","backendChain","duration","isV4","ProtocolVersion","V4","isV3","V3","isV2","getCurrencyAddressWithWrap","boundaryPrices","setBoundaryPrices","zoomFactor","setZoomFactor","dataMin","dataMax","dataMin2","dataMax2","getCandlestickPriceBounds","entries","midPrice","setMidPrice","setShowDiffIndicators","scrollIncrement","minVisiblePrice","maxVisiblePrice","mostRecentPrice","newRange","sizes","parentWidth","clientWidth","isMobileWeb","priceChartParams","stale","dataQuality","DataQuality","STALE","PriceChartType","LINE","currentPriceLineColor","showXAxis","disableExtendedTimeScale","allowScrollInteractions","priceScaleMargins","bottom","formattedData","liquidityDataLoading","useDensityChartData","currencyA","currencyB","invertPrices","version","Number","sortedFormattedData","sort","options","Day","Week","Year","Max","timePeriod","verboseDisplay","selected","createDropdownOpen","setCreateDropdownOpen","showChartErrorView","loading","container","lastCall","throttleDelayMs","listener","preventDefault","stopPropagation","now","Date","deltaY","prevMidPrice","addEventListener","removeEventListener","onMouseEnter","ChartErrorView","Shine","zIndex","LoadingPriceCurve","Chart","Model","LPPriceChartModel","$lg","DropdownSelector","containerStyle","menuLabel","find","RotatableChevron","direction","buttonStyle","dropdownStyle","internalMenuItems","hideChevron","isOpen","toggleOpen","SegmentedControl","selectedOption","onSelectOption","option","animation","borderTopLeftRadius","borderBottomLeftRadius","prevZoomFactor","borderTopRightRadius","borderBottomRightRadius","RotateLeft","DisplayCurrentPrice","InitialPriceInput","initialPriceBaseToken","initialPriceQuoteToken","initialPrice","initialPriceInverted","controlOptions","handleSelectInitialPriceBaseToken","shrink","fonts","heading3","fontWeight","lineHeight","neutral3","flexShrink","symbolA","symbolB","areCurrenciesEqual","RangeControl","numericInputEnforcerWithInfinity","RangeInput","decrement","increment","showIncrementButtons","isInvalid","typedValue","setTypedValue","displayUserTypedValue","setDisplayUserTypedValue","handlePriceRangeInput","input2","value2","handleDecrement","handleIncrement","decimals","onBlur","inputEnforcer","subheading2","Minus","SelectPriceRangeStepV2","onContinue","SelectPriceRangeStep","onDisableContinue","ticks","pricesAtTicks","prices","isPriceRangeInputV2Enabled","useFeatureFlag","FeatureFlags","PriceRangeInputV2","handleSelectToken","isSorted","ticksAtLimit","invalidPrice","invalidRange","V2","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","useRangeHopCallbacks","tickLower","tickUpper","handleSelectRange","segmentedControlRangeOptions","rangeSelectionInputValues","toSignificant","handleChartRangeInput","invalidState","fullWidth","LiquidityChartRangeInput","LOWER","UPPER","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","AlertTriangleFilled"],"sourceRoot":""}