{"version":3,"file":"static/js/9161.93cfca24.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/chevron-up.js","components/earn/styled.tsx","pages/App/AppBody.tsx","components/PositionCard/Sushi.tsx","components/PositionCard/V2.tsx","pages/MigrateV2/index.tsx"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ChevronUp=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"polyline\",{points:\"18 15 12 9 6 15\"}))}));ChevronUp.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ChevronUp.displayName=\"ChevronUp\";export default ChevronUp;","\"use strict\";\nimport uImage from \"assets/images/big_unicorn.png\";\nimport noise from \"assets/images/noise.png\";\nimport xlUnicorn from \"assets/images/xl_uni.png\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport styled from \"lib/styled-components\";\nexport const DataCard = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`;\nexport const CardBGImage = styled.span`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`;\nexport const CardBGImageSmaller = styled.span`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`;\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`;\nexport const CardSection = styled(AutoColumn)`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && \"0.4\"};\n`;\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`;\n","\"use strict\";\nimport styled from \"lib/styled-components\";\nimport { Z_INDEX } from \"theme/zIndex\";\nexport const BodyWrapper = styled.main`\n  position: relative;\n  margin-top: ${({ $margin }) => $margin ?? \"0px\"};\n  max-width: ${({ $maxWidth }) => $maxWidth ?? \"420px\"};\n  width: 100%;\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: ${Z_INDEX.default};\n`;\nexport default function AppBody(props) {\n  return <BodyWrapper {...props} />;\n}\n","\"use strict\";\nimport Badge, { BadgeVariant } from \"components/Badge/Badge\";\nimport { ButtonEmpty } from \"components/Button/buttons\";\nimport { LightCard } from \"components/Card/cards\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { FixedHeightRow } from \"components/PositionCard\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow, RowFixed } from \"components/deprecated/Row\";\nimport { CardNoise } from \"components/earn/styled\";\nimport { Dots } from \"components/swap/styled\";\nimport { useColor } from \"hooks/useColor\";\nimport styled from \"lib/styled-components\";\nimport { transparentize } from \"polished\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nconst StyledPositionCard = styled(LightCard)`\n  border: none;\n  background: ${({ theme, bgColor }) => `radial-gradient(91.85% 100% at 1.84% 0%, ${transparentize(0.8, bgColor)} 0%, ${theme.surface2} 100%) `};\n  position: relative;\n  overflow: hidden;\n`;\nexport default function SushiPositionCard({ tokenA, tokenB, liquidityToken, border }) {\n  const currency0 = unwrappedToken(tokenA);\n  const currency1 = unwrappedToken(tokenB);\n  const backgroundColor = useColor(tokenA);\n  return <StyledPositionCard border={border} bgColor={backgroundColor}><CardNoise /><AutoColumn gap=\"md\"><FixedHeightRow><AutoRow gap=\"8px\"><DoubleCurrencyLogo currencies={[currency0, currency1]} size={20} /><Text fontWeight={535} fontSize={20}>{!currency0 || !currency1 ? <Dots><Trans i18nKey=\"common.loading\" /></Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text><Badge variant={BadgeVariant.WARNING}>Sushi</Badge></AutoRow><RowFixed gap=\"8px\"><ButtonEmpty\n    padding=\"0px 35px 0px 0px\"\n    $borderRadius=\"12px\"\n    width=\"fit-content\"\n    as={Link}\n    to={`/migrate/v2/${liquidityToken.address}`}\n  ><Trans i18nKey=\"common.migrate\" /></ButtonEmpty></RowFixed></FixedHeightRow></AutoColumn></StyledPositionCard>;\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { ButtonEmpty, ButtonPrimary, ButtonSecondary } from \"components/Button/buttons\";\nimport { LightCard } from \"components/Card/cards\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow, RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { CardNoise } from \"components/earn/styled\";\nimport { Dots } from \"components/swap/styled\";\nimport { BIG_INT_ZERO } from \"constants/misc\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useColor } from \"hooks/useColor\";\nimport { useTotalSupply } from \"hooks/useTotalSupply\";\nimport JSBI from \"jsbi\";\nimport styled from \"lib/styled-components\";\nimport { transparentize } from \"polished\";\nimport { useState } from \"react\";\nimport { ChevronDown, ChevronUp } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { useTokenBalance } from \"state/connection/hooks\";\nimport { currencyId } from \"utils/currencyId\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nimport { FixedHeightRow } from \".\";\nconst StyledPositionCard = styled(LightCard)`\n  border: none;\n  background: ${({ theme, bgColor }) => `radial-gradient(91.85% 100% at 1.84% 0%, ${transparentize(0.8, bgColor)} 0%, ${theme.surface2} 100%) `};\n  position: relative;\n  overflow: hidden;\n`;\nexport default function MigrateV2PositionCard({ pair, border, stakedBalance }) {\n  const account = useAccount();\n  const currency0 = unwrappedToken(pair.token0);\n  const currency1 = unwrappedToken(pair.token1);\n  const [showMore, setShowMore] = useState(false);\n  const userDefaultPoolBalance = useTokenBalance(account.address, pair.liquidityToken);\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken);\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance;\n  const poolTokenPercentage = !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient) ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient) : void 0;\n  const [token0Deposited, token1Deposited] = !!pair && !!totalPoolTokens && !!userPoolBalance && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient) ? [\n    pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n    pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false)\n  ] : [void 0, void 0];\n  const backgroundColor = useColor(pair?.token0);\n  return <StyledPositionCard border={border} bgColor={backgroundColor}><CardNoise /><AutoColumn gap=\"md\"><FixedHeightRow><AutoRow gap=\"8px\"><DoubleCurrencyLogo currencies={[currency0, currency1]} size={20} /><Text fontWeight={535} fontSize={20}>{!currency0 || !currency1 ? <Dots><Trans i18nKey=\"common.loading\" /></Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text></AutoRow><RowFixed gap=\"8px\"><ButtonEmpty\n    padding=\"6px 8px\"\n    $borderRadius=\"12px\"\n    width=\"fit-content\"\n    onClick={() => setShowMore(!showMore)}\n  >{showMore ? <><Trans i18nKey=\"common.manage\" /><ChevronUp size=\"20\" style={{ marginLeft: \"10px\" }} /></> : <><Trans i18nKey=\"common.manage\" /><ChevronDown size=\"20\" style={{ marginLeft: \"10px\" }} /></>}</ButtonEmpty></RowFixed></FixedHeightRow>{showMore && <AutoColumn gap=\"sm\"><FixedHeightRow><Text fontSize={16} fontWeight={535}><Trans i18nKey=\"pool.totalTokens\" /></Text><Text fontSize={16} fontWeight={535}>{userPoolBalance ? userPoolBalance.toSignificant(4) : \"-\"}</Text></FixedHeightRow>{stakedBalance && <FixedHeightRow><Text fontSize={16} fontWeight={535}><Trans i18nKey=\"pool.rewardsPool.label\" /></Text><Text fontSize={16} fontWeight={535}>{stakedBalance.toSignificant(4)}</Text></FixedHeightRow>}<FixedHeightRow><RowFixed><Text fontSize={16} fontWeight={535}><Trans i18nKey=\"removeLiquidity.pooled\" values={{ symbol: currency0.symbol }} /></Text></RowFixed>{token0Deposited ? <RowFixed><Text fontSize={16} fontWeight={535} marginLeft=\"6px\">{token0Deposited?.toSignificant(6)}</Text><CurrencyLogo size={20} style={{ marginLeft: \"8px\" }} currency={currency0} /></RowFixed> : \"-\"}</FixedHeightRow><FixedHeightRow><RowFixed><Text fontSize={16} fontWeight={535}><Trans i18nKey=\"pool.pooled\" values={{ sym: currency1.symbol }} /></Text></RowFixed>{token1Deposited ? <RowFixed><Text fontSize={16} fontWeight={535} marginLeft=\"6px\">{token1Deposited?.toSignificant(6)}</Text><CurrencyLogo size={20} style={{ marginLeft: \"8px\" }} currency={currency1} /></RowFixed> : \"-\"}</FixedHeightRow><FixedHeightRow><Text fontSize={16} fontWeight={535}><Trans i18nKey=\"pool.share.label\" /></Text><Text fontSize={16} fontWeight={535}>{poolTokenPercentage ? (poolTokenPercentage.toFixed(2) === \"0.00\" ? \"<0.01\" : poolTokenPercentage.toFixed(2)) + \"%\" : \"-\"}</Text></FixedHeightRow>{userDefaultPoolBalance && JSBI.greaterThan(userDefaultPoolBalance.quotient, BIG_INT_ZERO) && <RowBetween marginTop=\"10px\"><ButtonPrimary\n    padding=\"8px\"\n    $borderRadius=\"8px\"\n    as={Link}\n    to={`/migrate/v2/${pair.liquidityToken.address}`}\n    width=\"64%\"\n  ><Trans i18nKey=\"common.migrate\" /></ButtonPrimary><ButtonSecondary\n    padding=\"8px\"\n    $borderRadius=\"8px\"\n    as={Link}\n    width=\"32%\"\n    to={`/remove/v2/${currencyId(currency0)}/${currencyId(currency1)}`}\n  ><Trans i18nKey=\"common.remove.label\" /></ButtonSecondary></RowBetween>}</AutoColumn>}</AutoColumn></StyledPositionCard>;\n}\n","\"use strict\";\nimport { getCreate2Address } from \"@ethersproject/address\";\nimport { keccak256, pack } from \"@ethersproject/solidity\";\nimport { Token, V2_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { LightCard } from \"components/Card/cards\";\nimport MigrateSushiPositionCard from \"components/PositionCard/Sushi\";\nimport MigrateV2PositionCard from \"components/PositionCard/V2\";\nimport QuestionHelper from \"components/QuestionHelper\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow } from \"components/deprecated/Row\";\nimport { Dots } from \"components/swap/styled\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { PairState, useV2Pairs } from \"hooks/useV2Pairs\";\nimport { useRpcTokenBalancesWithLoadingIndicator } from \"lib/hooks/useCurrencyBalance\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { BodyWrapper } from \"pages/App/AppBody\";\nimport { useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate, useNavigationType } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { toV2LiquidityToken, useTrackedTokenPairs } from \"state/user/hooks\";\nimport { BackArrowIcon, StyledInternalLink, ThemedText } from \"theme/components\";\nimport { Button } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal } from \"uniswap/src/features/telemetry/constants\";\nexport const MigrateHeader = styled(ThemedText.H1Small)`\n  font-weight: 535;\n`;\nfunction EmptyState({ message }) {\n  return <AutoColumn style={{ minHeight: 200, justifyContent: \"center\", alignItems: \"center\" }}><ThemedText.DeprecatedBody>{message}</ThemedText.DeprecatedBody></AutoColumn>;\n}\nconst computeSushiPairAddress = ({ tokenA, tokenB }) => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n  return getCreate2Address(\n    \"0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac\",\n    keccak256([\"bytes\"], [pack([\"address\", \"address\"], [token0.address, token1.address])]),\n    \"0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303\"\n  );\n};\nfunction toSushiLiquidityToken([tokenA, tokenB]) {\n  return new Token(tokenA.chainId, computeSushiPairAddress({ tokenA, tokenB }), 18, \"SLP\", \"SushiSwap LP Token\");\n}\nexport default function MigrateV2() {\n  const theme = useTheme();\n  const account = useAccount();\n  const navigate = useNavigate();\n  const navigationType = useNavigationType();\n  const v2FactoryAddress = account.chainId ? V2_FACTORY_ADDRESSES[account.chainId] : void 0;\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => {\n      const sushiLiquidityToken = account.chainId === 1 ? toSushiLiquidityToken(tokens) : null;\n      return {\n        v2liquidityToken: v2FactoryAddress ? toV2LiquidityToken(tokens) : void 0,\n        sushiLiquidityToken,\n        tokens\n      };\n    }),\n    [trackedTokenPairs, account.chainId, v2FactoryAddress]\n  );\n  const allLiquidityTokens = useMemo(() => {\n    const v2 = tokenPairsWithLiquidityTokens.map(({ v2liquidityToken }) => v2liquidityToken);\n    const sushi = tokenPairsWithLiquidityTokens.map(({ sushiLiquidityToken }) => sushiLiquidityToken).filter((token) => !!token);\n    return [...v2, ...sushi];\n  }, [tokenPairsWithLiquidityTokens]);\n  const [pairBalances, fetchingPairBalances] = useRpcTokenBalancesWithLoadingIndicator(\n    account.address,\n    allLiquidityTokens\n  );\n  const tokenPairsWithV2Balance = useMemo(() => {\n    if (fetchingPairBalances) {\n      return [];\n    }\n    return tokenPairsWithLiquidityTokens.filter(({ v2liquidityToken }) => v2liquidityToken && pairBalances[v2liquidityToken.address]?.greaterThan(0)).map((tokenPairsWithLiquidityTokens2) => tokenPairsWithLiquidityTokens2.tokens);\n  }, [fetchingPairBalances, tokenPairsWithLiquidityTokens, pairBalances]);\n  const tokenPairsWithSushiBalance = useMemo(() => {\n    if (fetchingPairBalances) {\n      return [];\n    }\n    return tokenPairsWithLiquidityTokens.filter(\n      ({ sushiLiquidityToken }) => !!sushiLiquidityToken && pairBalances[sushiLiquidityToken.address]?.greaterThan(0)\n    );\n  }, [fetchingPairBalances, tokenPairsWithLiquidityTokens, pairBalances]);\n  const v2Pairs = useV2Pairs(tokenPairsWithV2Balance);\n  const v2IsLoading = fetchingPairBalances || v2Pairs.some(([pairState]) => pairState === PairState.LOADING);\n  const networkSupportsV2 = useNetworkSupportsV2();\n  if (!networkSupportsV2) {\n    return <V2Unsupported />;\n  }\n  return <Trace logImpression page={InterfacePageNameLocal.MigrateV2}><BodyWrapper style={{ padding: 24 }}><AutoColumn gap=\"16px\"><AutoRow style={{ alignItems: \"center\", justifyContent: \"space-between\" }} gap=\"8px\"><Button\n    theme=\"secondary\"\n    onPress={() => {\n      if (navigationType === \"POP\") {\n        navigate(\"/pools\");\n        return;\n      }\n      navigate(-1);\n    }}\n    backgroundColor=\"$transparent\"\n    size=\"small\"\n  ><BackArrowIcon /></Button><MigrateHeader><Trans i18nKey=\"migrate.v2Title\" /></MigrateHeader><div><QuestionHelper text={<Trans i18nKey=\"migrate.v2Subtitle\" />} /></div></AutoRow><ThemedText.DeprecatedBody style={{ marginBottom: 8, fontWeight: 485 }}><Trans i18nKey=\"migrate.v2Instruction\" /></ThemedText.DeprecatedBody>{!account ? <LightCard padding=\"40px\"><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Trans i18nKey=\"migrate.connectWallet\" /></ThemedText.DeprecatedBody></LightCard> : v2IsLoading ? <LightCard padding=\"40px\"><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Dots><Trans i18nKey=\"common.loading\" /></Dots></ThemedText.DeprecatedBody></LightCard> : v2Pairs.filter(([, pair]) => !!pair).length > 0 ? <>{v2Pairs.filter(([, pair]) => !!pair).map(([, pair]) => <MigrateV2PositionCard key={pair.liquidityToken.address} pair={pair} />)}{tokenPairsWithSushiBalance.map(({ sushiLiquidityToken, tokens }) => {\n    return <MigrateSushiPositionCard\n      key={sushiLiquidityToken.address}\n      tokenA={tokens[0]}\n      tokenB={tokens[1]}\n      liquidityToken={sushiLiquidityToken}\n    />;\n  })}</> : <EmptyState message={<Trans i18nKey=\"migrate.noV2Liquidity\" />} />}<AutoColumn justify=\"center\" gap=\"md\"><Text textAlign=\"center\" fontSize={14} style={{ padding: \".5rem 0 .5rem 0\" }}><Trans\n    i18nKey=\"migrate.missingV2Position\"\n    components={{\n      link: <StyledInternalLink id=\"import-pool-link\" to=\"/pools/v2/find\" />\n    }}\n  /></Text></AutoColumn></AutoColumn></BodyWrapper><SwitchLocaleLink /></Trace>;\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","displayName","DataCard","styled","AutoColumn","CardBGImage","span","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","disabled","Break","div","BodyWrapper","main","$margin","$maxWidth","theme","surface1","surface3","Z_INDEX","default","AppBody","props","StyledPositionCard","LightCard","bgColor","transparentize","surface2","SushiPositionCard","tokenA","tokenB","liquidityToken","border","currency0","unwrappedToken","currency1","backgroundColor","useColor","gap","FixedHeightRow","AutoRow","DoubleCurrencyLogo","currencies","Text","fontWeight","fontSize","symbol","Dots","Trans","i18nKey","Badge","variant","BadgeVariant","WARNING","RowFixed","ButtonEmpty","padding","$borderRadius","as","Link","to","address","MigrateV2PositionCard","pair","stakedBalance","userDefaultPoolBalance","token0Deposited","token1Deposited","account","useAccount","token0","token1","showMore","setShowMore","useState","useTokenBalance","totalPoolTokens","useTotalSupply","userPoolBalance","add","poolTokenPercentage","JSBI","quotient","Percent","getLiquidityValue","onClick","style","marginLeft","ChevronDown","toSignificant","values","CurrencyLogo","currency","sym","toFixed","BIG_INT_ZERO","RowBetween","marginTop","ButtonPrimary","ButtonSecondary","currencyId","MigrateHeader","ThemedText","H1Small","EmptyState","message","minHeight","justifyContent","alignItems","DeprecatedBody","computeSushiPairAddress","sortsBefore","getCreate2Address","keccak256","pack","MigrateV2","useTheme","navigate","useNavigate","navigationType","useNavigationType","v2FactoryAddress","chainId","V2_FACTORY_ADDRESSES","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","map","tokens","sushiLiquidityToken","Token","toSushiLiquidityToken","v2liquidityToken","toV2LiquidityToken","allLiquidityTokens","filter","token","pairBalances","fetchingPairBalances","useRpcTokenBalancesWithLoadingIndicator","tokenPairsWithV2Balance","greaterThan","tokenPairsWithLiquidityTokens2","tokenPairsWithSushiBalance","v2Pairs","useV2Pairs","v2IsLoading","some","pairState","PairState","LOADING","useNetworkSupportsV2","Trace","logImpression","page","InterfacePageNameLocal","Button","onPress","BackArrowIcon","QuestionHelper","text","marginBottom","neutral3","textAlign","MigrateSushiPositionCard","justify","components","link","StyledInternalLink","id","SwitchLocaleLink","V2Unsupported"],"sourceRoot":""}