{"version":3,"file":"static/js/4790.d9b478a6.chunk.js","mappings":"mNACO,SAASA,EAAKC,GACnB,OAAO,SAACC,MAAAA,CAAIC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,gCAAiCN,E,UAAO,SAACO,OAAAA,CAChHC,SAAS,UACTC,SAAS,UACTC,EAAE,moBACFL,KAAML,EAAMK,MAAQ,WAExB,C,uRCMA,MAAMM,GAAgBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAQ,CACnCC,KAAM,SACNC,aAAc,GACdC,SAAU,EACVC,SAAU,UACVC,WAAY,SACZf,OAAQ,GACRgB,WAAY,CACVC,OAAQ,sBAGL,SAASC,IACd,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,mBACR,cAAEC,EAAa,gBAAEC,EAAe,QAAEC,EAAO,WAAEC,IAAeC,EAAAA,EAAAA,KAC1DC,GAAcC,EAAAA,EAAAA,KACdC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KACVC,EAAgBX,EAAcY,cAC9BC,EAAkBX,IAAYY,EAAAA,EAAkB,MAAQZ,EACxDa,EAAYZ,IAAca,EAAAA,EAAAA,6BAA4Bb,IACtD,GAAEc,IAAOC,EAAAA,EAAAA,KACTC,GAAeC,EAAAA,EAAAA,aAAY,W,WAC/B,UAAOC,GACDZ,EAAQa,SAAWb,EAAQa,UAAYrB,UACnCI,EAAYJ,IAEpBM,EAASc,EACX,E,+LALOA,G,gCADwB,GAO/B,CAACZ,EAASR,EAAiBI,EAAaE,IAEpCgB,EAAO,CACX,CACEC,MAAO1B,EAAE,oBACTuB,KAAM,gBAAgBV,oBAAgCE,IACtDY,MAAM,SAACC,EAAAA,EAAcA,CAAC7C,KAAK,kBAE7B,CACE2C,MAAO1B,EAAE,qBACTuB,KAAM,eAAeV,mBAA+BE,IACpDY,MAAM,SAAClD,EAAIA,CAACM,KAAK,kBAEnB,CACE2C,MAAO1B,EAAE,sBACTuB,KAAM,eAAeV,mBAA+BE,IACpDY,MAAM,SAACE,EAAAA,EAAIA,CAAC9C,KAAK,mBAGrB,OAAO,SAAC+C,EAAAA,EAAIA,CAACC,KAAG,EAACC,eAAe,SAASC,IAAI,YAAYrD,MAAM,O,SAAQ6C,EAAKS,KAAKC,IAAQ,SAAC9C,EAAAA,CAExF+C,QAAS,IAAMf,EAAac,EAAIZ,MAChCc,gBAAiBhC,EACjBR,WAAY,CAAEwC,gBAAiBhC,GAC/BiC,WAAY,CAAED,gBAAiBhC,GAC/BkC,MAAOtB,E,UACR,SAACuB,EAAAA,GAAIA,CAACD,MAAOtB,E,UAAW,UAACa,EAAAA,EAAIA,CAACC,KAAG,EAACE,IAAI,YAAYQ,WAAW,S,UAAUtB,GAAMgB,EAAIR,KAAMQ,EAAIT,YANrFS,EAAIT,UAOb,C,kHCpDA,MAAMgB,EAAqB,G,yBCR3B,MAAMC,EAAiB,CAACC,EAAAA,GAAeC,YAChC,SAASC,GAAuB,QACrCtB,EAAO,eACPuB,IAEA,MAAMC,GAAaC,EAAAA,EAAAA,cAAaC,EAAAA,IAC1BC,GAAgBF,EAAAA,EAAAA,cAAaG,EAAAA,IAC7BC,GAAYC,EAAAA,EAAAA,UAChB,KAAO,CAAEC,OAAQP,EAAYQ,cAAeL,EAAgBM,EAAAA,GAAeC,IAAMD,EAAAA,GAAeE,QAChG,CAACR,EAAeH,KAEZ,MAAEY,EAAK,QAAEC,EAAO,QAAEC,EAAO,QAAEC,EAAO,SAAEC,GDFrC,SAAkCC,EAAcZ,EAAW7B,G,IAgH5D0C,EACAC,EACAC,EAsDFF,EACAC,EACAC,EAzKF,MAAM,eAAEC,IAAmBC,EAAAA,EAAAA,oBACrBC,GAAQC,EAAAA,EAAAA,gBAAehD,GAAW6C,GAClCI,GAAkBC,EAAAA,EAAAA,gBAAeC,EAAAA,aAAaC,SAElDf,QAASgB,EACTC,MAAOC,EACPC,KAAMZ,EACNa,UAAWC,IACTC,EAAAA,EAAAA,oBAAmB,CACrBC,UAAW,CACTC,MAAO3C,EACPuB,eACAM,SAEFe,MAAOb,KAGPZ,QAAS0B,EACTT,MAAOf,EACPiB,KAAMb,EACNc,UAAWO,IACTC,EAAAA,EAAAA,oBAAmB,CACrBL,UAAW,CACTC,MAAO3C,EACPuB,eACAM,YAIFV,QAAS6B,EACTZ,MAAOhB,EACPkB,KAAMd,EACNe,UAAWU,IACTC,EAAAA,EAAAA,oBAAmB,CACrBR,UAAW,CACTC,MAAO3C,EACPuB,eACAM,SAEFe,MAAO9D,IAEHqC,EAAUgB,GAAaJ,GAAmBc,GAAaG,EACvDG,GAAgBC,EAAAA,EAAAA,SAAO,GACvBC,GAAgBD,EAAAA,EAAAA,SAAO,GACvBE,GAAgBF,EAAAA,EAAAA,SAAO,GACvBG,GAAUH,EAAAA,EAAAA,QAAOpD,GACjBsB,GAAW1C,EAAAA,EAAAA,cACf,EAAG4E,iB,IAUW9B,EAAAA,EAAAA,EAAAA,EAkBAD,EAAAA,EAAAA,EAAAA,EAkBAD,EAAAA,EAAAA,EAAAA,EA7CR2B,EAAcM,SAAW1B,GAAmBsB,EAAcI,SAAWH,EAAcG,UAGvFN,EAAcM,SAAU,EACxBJ,EAAcI,SAAU,EACxBH,EAAcG,SAAU,EACxBF,EAAQE,SAAWzD,EACnBwC,EAAY,CACVE,UAAW,CACTgB,OAAQhC,QAAAA,EAAAA,SAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAQiC,kBAARjC,IAAAA,GAAkD,QAAlDA,EAAAA,EAAqBA,EAAOiC,WAAWC,OAAS,UAAhDlC,IAAAA,GAAkE,QAAlEA,EAAAA,EAAoDmC,sBAApDnC,IAAAA,OAAAA,EAAAA,EAAoEoC,OAE9EC,YAAa,CAACC,GAAQC,sBACpB,IAAKA,IAAoBD,IAASE,OAAOC,KAAKH,GAAMJ,OAClD,OAAOI,E,IAGPR,EADGH,EAAcI,SAAYH,EAAcG,SAC3CD,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,IAEF,MAAMY,EAAa,CACjBT,WAAY,KAAKK,EAAKL,YAAc,IAAIU,YAAaJ,EAAgBN,YAAc,IAAIU,UAGzF,OADAlB,EAAcM,SAAU,EACjBW,CAAU,IAGrBtB,EAAY,CACVJ,UAAW,CACTgB,OAAQjC,QAAAA,EAAAA,SAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAQ6C,kBAAR7C,IAAAA,GAAkD,QAAlDA,EAAAA,EAAqBA,EAAO6C,WAAWV,OAAS,UAAhDnC,IAAAA,GAAkE,QAAlEA,EAAAA,EAAoDoC,sBAApDpC,IAAAA,OAAAA,EAAAA,EAAoEqC,OAE9EC,YAAa,CAACC,GAAQC,sBACpB,IAAKA,IAAoBD,IAASE,OAAOC,KAAKH,GAAMJ,OAClD,OAAOI,E,IAGPR,EADGF,EAAcG,SAAYN,EAAcM,SAC3CD,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,IAEF,MAAMY,EAAa,CACjBE,WAAY,KAAKN,EAAKM,YAAc,IAAID,YAAaJ,EAAgBK,YAAc,IAAID,UAGzF,OADAhB,EAAcI,SAAU,EACjBW,CAAU,IAGrBnB,EAAY,CACVP,UAAW,CACTgB,OAAQlC,QAAAA,EAAAA,SAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAQ+C,kBAAR/C,IAAAA,GAAkD,QAAlDA,EAAAA,EAAqBA,EAAO+C,WAAWX,OAAS,UAAhDpC,IAAAA,GAAkE,QAAlEA,EAAAA,EAAoDqC,sBAApDrC,IAAAA,OAAAA,EAAAA,EAAoEsC,OAE9EC,YAAa,CAACC,GAAQC,sBACpB,IAAKA,IAAoBD,IAASE,OAAOC,KAAKH,GAAMJ,OAClD,OAAOI,E,IAGPR,EADGH,EAAcI,SAAYN,EAAcM,SAC3CD,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,IAEF,MAAMY,EAAa,CACjBG,WAAY,KAAKP,EAAKO,YAAc,IAAIF,YAAaJ,EAAgBM,YAAc,IAAIF,UAGzF,OADAf,EAAcG,SAAU,EACjBW,CAAU,IAEnB,GAEJ,CACE5C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ+C,WACR9C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6C,WACR5C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQiC,WACRV,EACAH,EACAN,EACAT,IAGJ,OAAOnB,EAAAA,EAAAA,UAAQ,K,IACwBc,EAAAA,EAelBD,EAAAA,EAcAD,EAAAA,EA7BnB,MAAMmC,EAAa5B,GAAkBL,QAAAA,EAAAA,SAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAQiC,kBAARjC,IAAAA,OAAAA,EAAAA,EAAoBlC,KAAKgF,I,IAKrDA,EACMA,EACAA,EACuBA,EAAuBA,EACvCA,EAAuBA,EAG5BA,EAXf,MAAO,CACLC,KAAMD,EAAKE,OACXC,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbC,IAAwB,QAAnBL,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,MAC1BgB,UAAyB,QAAdN,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAC3BiB,UAAyB,QAAdP,EAAAA,EAAKO,iBAALP,IAAAA,OAAAA,EAAAA,EAAgBV,MAC3BkB,YAAYC,EAAAA,EAAAA,IAAoC,QAAdT,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAA0B,QAAnBU,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,OAC9EoB,KAAKC,EAAAA,EAAAA,IAA2B,QAAdX,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAA0B,QAAnBU,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,MAAOU,EAAKY,SAC1EA,QAASZ,EAAKY,QACdC,gBAAiBb,EAAKa,gBACtBC,YAAsB,QAATd,EAAAA,EAAKe,YAALf,IAAAA,OAAAA,EAAAA,EAAW9G,QACzB,MACG,GAAK,GACL4G,GAAa7C,QAAAA,EAAAA,SAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAQ6C,kBAAR7C,IAAAA,OAAAA,EAAAA,EAAoBjC,KAAKgF,I,IAKnCA,EACMA,EACAA,EACuBA,EAAuBA,EACvCA,EAAuBA,EAR3C,MAAO,CACLC,KAAMD,EAAK9G,QACXiH,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbC,IAAwB,QAAnBL,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,MAC1BgB,UAAyB,QAAdN,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAC3BiB,UAAyB,QAAdP,EAAAA,EAAKO,iBAALP,IAAAA,OAAAA,EAAAA,EAAgBV,MAC3BkB,YAAYC,EAAAA,EAAAA,IAAoC,QAAdT,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAA0B,QAAnBU,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,OAC9EoB,KAAKC,EAAAA,EAAAA,IAA2B,QAAdX,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAA0B,QAAnBU,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,MAAOU,EAAKY,SAC1EA,QAASZ,EAAKY,QACdC,gBAAiBb,EAAKa,gBACvB,MACG,GACAd,GAAa/C,QAAAA,EAAAA,SAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAQ+C,kBAAR/C,IAAAA,OAAAA,EAAAA,EAAoBhC,KAAKgF,I,IAKnCA,EACMA,EACAA,EACuBA,EAAuBA,EACvCA,EAAuBA,EAR3C,MAAO,CACLC,KAAMD,EAAK9G,QACXiH,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbC,IAAwB,QAAnBL,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,MAC1BgB,UAAyB,QAAdN,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAC3BiB,UAAyB,QAAdP,EAAAA,EAAKO,iBAALP,IAAAA,OAAAA,EAAAA,EAAgBV,MAC3BkB,YAAYC,EAAAA,EAAAA,IAAoC,QAAdT,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAA0B,QAAnBU,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,OAC9EoB,KAAKC,EAAAA,EAAAA,IAA2B,QAAdX,EAAAA,EAAKM,iBAALN,IAAAA,OAAAA,EAAAA,EAAgBV,MAA0B,QAAnBU,EAAAA,EAAKX,sBAALW,IAAAA,OAAAA,EAAAA,EAAqBV,MAAO0B,EAAAA,IACrEJ,QAASI,EAAAA,GACTH,gBAAiBb,EAAKa,gBACvB,MACG,GACAnE,GAAQuE,EAAAA,EAAAA,IAAU,IAAI9B,KAAeW,KAAeC,GAAa5D,GAAW0D,MAAM,EAAGd,EAAQE,SACnG,MAAO,CAAEtC,UAASC,UAASC,UAASgB,UAASnB,QAAOI,WAAU,GAC7D,CACDE,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ+C,WACR9C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6C,WACR5C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQiC,WACRvC,EACAC,EACAgB,EACAf,EACAH,EACAR,EACAoB,GAEJ,CCjLyD2D,CACrDrF,EAAe3C,QACfiD,EACA7B,GAEI6G,EAAgBvE,GAAWC,EAAU,IAAIuE,EAAAA,GAAY,CACzDC,aAAc,gDAAgDxF,EAAe3C,qBAAqBoB,WAC/F,EACCgH,EAAsB3E,IAAYD,EAAM0C,QAC9CmC,EAAAA,EAAAA,IAAsB,CAAEjH,UAASuC,UAASD,YAC1C,MAAM4E,GAAkBC,EAAAA,EAAAA,cAAazF,EAAAA,IAC/B0F,GAAqBD,EAAAA,EAAAA,cAAavF,EAAAA,IAKxC,OAJAyF,EAAAA,EAAAA,YAAU,KACRH,IACAE,GAAoB,GACnB,CAACA,EAAoBF,KACjB,SAACI,MAAAA,CAAIC,cAAa,mBAAmBhG,EAAe3C,QAAQU,gB,UAAiB,SAACkI,EAAAA,GAAUA,CAC7FpF,MAAOA,EACPC,QAAS2E,EACT1D,MAAOuD,EACPY,UAAW,IACXC,cAAevG,EACfqB,SAAUA,KAEd,C,2DClCWmF,EAAwC,CAACC,IAClDA,EAA2B,IAAI,MAC/BA,EAA4B,KAAI,OACzBA,GAH0C,CAIhDD,GAAwB,CAAC,GAC5B,MAAME,EAAmC,G,yDCUzC,MAAMC,GAAmBhK,EAAAA,EAAAA,GAAOkD,EAAAA,GAAM,CACpC+G,QAAS,eACTC,SAAU,GACVC,QAAS,QACTlH,MAAO,eACJmH,EAAAA,KAECC,IAAerK,EAAAA,EAAAA,GAAOwC,EAAAA,EAAM,CAChC8H,SAAU,WACVC,UAAW,MAEN,SAASC,IAAkB,QAAEtI,EAAO,eAAEuB,IAC3C,MAAMgH,GAAsBC,EAAAA,EAAAA,uBACtB,aAAEC,EAAY,gBAAEC,IAAoBC,EAAAA,EAAAA,OACnCC,EAAmBC,IAAqBC,EAAAA,EAAAA,aAAYC,IAAOA,IAAG,GAC/DC,GAAkB1E,EAAAA,EAAAA,QAAO,OACxBhG,EAAQ2K,IAAcC,EAAAA,EAAAA,UAAS,CAACvB,EAAqBwB,IAAKxB,EAAqByB,QAChF,aAAEC,EAAY,QAAEhH,EAAO,SAAEG,EAAQ,QAAEF,EAAO,QAAEC,GD1B7C,SAA8B3D,EAASoB,EAAS1B,EAAS,CAAC,MAAiB,S,IAoF7EoE,EAAAA,EAA+BC,EAAAA,EAuBtBD,EAAAA,EAA+BC,EAAAA,EA1G3C,MAAM,eAAEE,IAAmBC,EAAAA,EAAAA,qBAEzBU,KAAMb,EACNN,QAAS0B,EACTN,UAAWO,EACXV,MAAOf,IACL+G,EAAAA,EAAAA,6BAA4B,CAC9B1F,UAAW,CACThF,QAASA,EAAQU,cACjByD,OAAOC,EAAAA,EAAAA,gBAAehD,GAAW6C,GACjCgB,MAAOgE,MAITrE,KAAMd,EACNL,QAAS6B,EACTZ,MAAOhB,EACPmB,UAAWU,IACToF,EAAAA,EAAAA,6BAA4B,CAC9B3F,UAAW,CACThF,QAASA,EAAQU,cACjBuE,MAAOgE,EACP9E,OAAOC,EAAAA,EAAAA,gBAAehD,MAGpBuE,GAAgBD,EAAAA,EAAAA,SAAO,GACvBE,GAAgBF,EAAAA,EAAAA,SAAO,GACvBkF,GAAelF,EAAAA,EAAAA,QAAOuD,GACtBrF,GAAW1C,EAAAA,EAAAA,cACf,EAAG4E,iB,IASW/B,EAAgCA,EAAhCA,EAAAA,EAAAA,EAuBAD,EAAgCA,EAAhCA,EAAAA,EAAAA,EA/BR6B,EAAcI,SAAWH,EAAcG,UAG3CJ,EAAcI,SAAU,EACxBH,EAAcG,SAAU,EACxB6E,EAAa7E,SAAWkD,EACxB7D,EAAY,CACVJ,UAAW,CACTgB,OAAQjC,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ8G,aAAR9G,IAAAA,GAA6B,QAA7BA,EAAAA,EAAe+G,sBAAf/G,IAAAA,GAAwE,QAAxEA,EAAAA,GAA4C,QAAZA,EAAAA,EAAO8G,aAAP9G,IAAAA,OAAAA,EAAAA,EAAc+G,eAAe5E,QAAS,UAAtEnC,IAAAA,OAAAA,EAAAA,EAA0EgH,WAEpF1E,YAAa,CAACC,GAAQC,sB,IAUZD,EAAAA,EACGA,EAAAA,EACaA,EAAqCC,EAP3DT,EAJF,IAAKS,EACH,OAAOD,EAEJV,EAAcG,SACjBD,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,IAEF,MAAMY,EAAa,CACjBmE,MAAO,IACFvE,EAAKuE,MACRG,IAAI1E,QAAAA,EAAAA,SAAAA,IAAAA,GAAW,QAAXA,EAAAA,EAAMuE,aAANvE,IAAAA,OAAAA,EAAAA,EAAa0E,KAAM,GACvB7G,OAAOmC,QAAAA,EAAAA,SAAAA,IAAAA,GAAW,QAAXA,EAAAA,EAAMuE,aAANvE,IAAAA,OAAAA,EAAAA,EAAanC,QAAS8G,EAAAA,MAAMC,SACnCJ,eAAgB,KAAc,QAAVxE,EAAAA,EAAKuE,aAALvE,IAAAA,OAAAA,EAAAA,EAAYwE,iBAAkB,OAA4B,QAArBvE,EAAAA,EAAgBsE,aAAhBtE,IAAAA,OAAAA,EAAAA,EAAuBuE,iBAAkB,MAItG,OADAnF,EAAcI,SAAU,EACjBW,CAAU,IAGrBnB,EAAY,CACVP,UAAW,CACTgB,OAAQlC,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ+G,aAAR/G,IAAAA,GAA6B,QAA7BA,EAAAA,EAAeqH,sBAAfrH,IAAAA,GAAwE,QAAxEA,EAAAA,GAA4C,QAAZA,EAAAA,EAAO+G,aAAP/G,IAAAA,OAAAA,EAAAA,EAAcqH,eAAejF,QAAS,UAAtEpC,IAAAA,OAAAA,EAAAA,EAA0EiH,WAEpF1E,YAAa,CAACC,GAAQC,sB,IAUZD,EAAAA,EACGA,EAAAA,EACaA,EAAqCC,EAP3DT,EAJF,IAAKS,EACH,OAAOD,EAEJX,EAAcI,SACjBD,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,IAEF,MAAMY,EAAa,CACjBmE,MAAO,IACFvE,EAAKuE,MACRG,IAAI1E,QAAAA,EAAAA,SAAAA,IAAAA,GAAW,QAAXA,EAAAA,EAAMuE,aAANvE,IAAAA,OAAAA,EAAAA,EAAa0E,KAAM,GACvB7G,OAAOmC,QAAAA,EAAAA,SAAAA,IAAAA,GAAW,QAAXA,EAAAA,EAAMuE,aAANvE,IAAAA,OAAAA,EAAAA,EAAanC,QAAS8G,EAAAA,MAAMC,SACnCC,eAAgB,KAAc,QAAV7E,EAAAA,EAAKuE,aAALvE,IAAAA,OAAAA,EAAAA,EAAY6E,iBAAkB,OAA4B,QAArB5E,EAAAA,EAAgBsE,aAAhBtE,IAAAA,OAAAA,EAAAA,EAAuB4E,iBAAkB,MAItG,OADAvF,EAAcG,SAAU,EACjBW,CAAU,IAEnB,GAEJ,CAAC5C,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ+G,aAAR/G,IAAAA,OAAAA,EAAAA,EAAeqH,eAAgBpH,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ8G,aAAR9G,IAAAA,OAAAA,EAAAA,EAAe+G,eAAgBvF,EAAaH,IAExEqF,GAAevH,EAAAA,EAAAA,UACnB,K,IACKa,EAAAA,EAAAA,EAQAD,EAAAA,EAAAA,E,MATC,KACDC,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ8G,aAAR9G,IAAAA,GAA6B,QAA7BA,EAAAA,EAAe+G,sBAAf/G,IAAAA,OAAAA,EAAAA,EAA+BrE,QAAQ0L,I,IAKzBC,EAJf,IAAKD,EACH,OAAO,EAET,MACME,GAA+B,QAAtBD,GADQE,WAAWH,EAAGI,gBAAkB,EAAIJ,EAAGnE,OAASmE,EAAGlE,QAC5ClH,eAAfqL,IAAAA,OAAAA,EAAAA,EAAwB3K,iBAAkBV,EAAQU,cACjE,OAAO0K,EAAGK,OAASC,EAAAA,oBAAoBC,MAAQjM,EAAOkM,SAASN,EAAS,OAAoB,MAAa,MACrG,OACHxH,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ+G,aAAR/G,IAAAA,GAA6B,QAA7BA,EAAAA,EAAeqH,sBAAfrH,IAAAA,OAAAA,EAAAA,EAA+BpE,QAAQ0L,I,IAKzBC,EAJf,IAAKD,EACH,OAAO,EAET,MACME,GAA+B,QAAtBD,GADQE,WAAWH,EAAGI,gBAAkB,EAAIJ,EAAGnE,OAASmE,EAAGlE,QAC5ClH,eAAfqL,IAAAA,OAAAA,EAAAA,EAAwB3K,iBAAkBV,EAAQU,cACjE,OAAO0K,EAAGK,OAASC,EAAAA,oBAAoBC,MAAQjM,EAAOkM,SAASN,EAAS,OAAoB,MAAa,MACrG,IACNO,MACA,CAACC,EAAGC,K,IAAMD,EAAgBC,EAA2CD,E,OAA3DA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAGf,aAAagB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAGhB,WAAYgB,EAAEhB,UAAYe,EAAEf,UAA6B,QAAjBe,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAGf,YAAsB,EAAI,CAAC,IACnGpE,MAAM,EAAGiE,EAAa7E,QAAQ,GAChC,CAAC/F,EAAS8D,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ+G,aAAR/G,IAAAA,OAAAA,EAAAA,EAAeqH,eAAgBpH,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAQ8G,aAAR9G,IAAAA,OAAAA,EAAAA,EAAe+G,eAAgBpL,IAE1E,OAAOwD,EAAAA,EAAAA,UAAQ,KACN,CACLuH,eACAhH,QAAS0B,GAAaG,EACtB1B,WACAF,UACAC,aAED,CAAC8G,EAActF,EAAWG,EAAW1B,EAAUF,EAASC,GAC7D,CC5FgEqI,CAC5DrJ,EAAe3C,QACfoB,EACA1B,GAEIuI,EAAgBvE,GAAWC,EAAU,IAAIuE,EAAAA,GAAY,CACzDC,aAAc,wDAAwDxF,EAAe3C,qBAAqBoB,WACvG,EACCgH,EAAsB3E,IAAYgH,EAAavE,QACrDmC,EAAAA,EAAAA,IAAsB,CAAEjH,UAASuC,UAASD,YAC1C,MAAMuI,GAA0BC,EAAAA,EAAAA,IAAY9K,EAASuB,GAC/CiC,GAAO1B,EAAAA,EAAAA,UACX,IAAMuH,EAAa3I,KAAKqK,IACtB,MAAMC,EAAW,CACfpM,QAASmM,EAAYlF,OAAOjH,QAC5BqM,OAAQF,EAAYlF,OAAOoF,OAC3BC,OAAQf,WAAWY,EAAYX,gBAC/BX,MAAOsB,EAAYlF,QAEfsF,EAAW,CACfvM,QAASmM,EAAYjF,OAAOlH,QAC5BqM,OAAQF,EAAYjF,OAAOmF,OAC3BC,OAAQf,WAAWY,EAAYK,gBAC/B3B,MAAOsB,EAAYjF,QAEfuF,EAAoBlB,WAAWY,EAAYX,gBAAkB,EACnE,MAAO,CACLzE,KAAMoF,EAAYpF,KAClBgE,UAAWoB,EAAYpB,UACvB2B,MAAOD,EAAoBL,EAAWG,EACtCI,OAAQF,EAAoBF,EAAWH,EACvCQ,SAAUT,EAAYS,SAASxG,MAC/ByG,aAAcV,EAAY5L,QAC3B,KAEH,CAACkK,IAEGqC,EAAsB1E,KAAyBH,EAC/C8E,GAAU7J,EAAAA,EAAAA,UAAQ,KACtB,MAAM8J,GAAeC,EAAAA,EAAAA,MACrB,MAAO,CACLD,EAAaE,UAAUvL,GAAQA,GAAK,CAClCqJ,GAAI,YACJmC,OAAQ,KAAM,SAACC,EAAAA,EAAIA,CAACC,SAAU,IAAKzL,eAAe,aAAa0L,MAAI,E,UAAC,UAAC5L,EAAAA,EAAIA,CAACC,KAAG,EAACE,IAAI,QAAQQ,WAAW,S,WAAS,SAACkL,EAAAA,GAAWA,CAACC,UAAWnK,EAAAA,GAAeE,QAAQ,SAACkK,EAAAA,GAAcA,CAACC,QAAM,E,UAAC,SAACC,EAAAA,MAAKA,CAACC,QAAQ,uBACnMC,KAAOlM,I,IACaA,EAAAA,EACaA,EAAAA,E,OAFlB,SAACyL,EAAAA,EAAIA,CAAC3J,QAASqJ,EAAqBO,SAAU,IAAKzL,eAAe,aAAa0L,MAAI,E,UAAC,SAACQ,EAAAA,GAAaA,CAC/G/C,UAAWgD,OAAmB,QAAZpM,GAAAA,EAAAA,GAAIqM,gBAAJrM,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAiBoJ,WACnCkD,MAAMC,EAAAA,EAAAA,iBAAgB9M,EAAqB,QAAZO,GAAAA,EAAAA,GAAIqM,gBAAJrM,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAiBoF,KAAMoH,EAAAA,iBAAiBC,gB,IAG3EpB,EAAaE,UAAUvL,GAAQA,EAAIgL,OAAO3M,SAAS,CACjDgL,GAAI,YACJmC,OAAQ,KAAM,SAACC,EAAAA,EAAIA,CAACC,SAAU,GAAIzL,eAAe,aAAa0L,MAAI,E,UAAC,UAACe,EAAAA,GAAeA,CACjFC,UAAWtE,EACXhI,QAASiI,EACT5H,WAAW,SACXkM,IAAKnE,E,WACN,SAACoE,EAAAA,EAAMA,CACNC,WAAYjI,OAAOkI,OAAO3F,GAC1B4F,aAAcjP,EACd2K,WAAYA,EACZuE,OAAQ5E,EACRC,kBAAmBA,EACnB4E,UAAWzE,KACX,SAAChI,EAAAA,GAAIA,CAACiH,QAAQ,QAAQlH,MAAM,Y,UAAY,SAACwL,EAAAA,MAAKA,CAACC,QAAQ,6BACzDC,KAAOiB,I,IACgBA,EAAAA,EAArB,MAAMC,EAAQC,OAAkC,QAA3BF,GAAAA,EAAAA,GAAmBd,gBAAnBc,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,IAAiCpO,gBAAkBiC,EAAe3C,QAAQU,cAC/F,OAAO,SAAC0M,EAAAA,EAAIA,CAAC3J,QAASqJ,EAAqBO,SAAU,GAAIzL,eAAe,aAAa0L,MAAI,E,UAAC,SAAClL,EAAAA,GAAIA,CAACiH,QAAQ,QAAQlH,MAAO4M,EAAQ,iBAAmB,kB,SAAoBA,GAAQ,SAACpB,EAAAA,MAAKA,CAACC,QAAQ,sBAAwB,SAACD,EAAAA,MAAKA,CAACC,QAAQ,yB,IAGxOZ,EAAaE,UACVvL,I,IAAQA,E,OAAiB,QAAjBA,EAAAA,EAAI+K,MAAM1M,eAAV2B,IAAAA,OAAAA,EAAAA,EAAmBjB,iBAAkBiC,EAAe3C,QAAQU,cAAgBiB,EAAI+K,MAAMJ,OAAS3K,EAAIgL,OAAOL,MAAM,GACzH,CACEtB,GAAI,mBACJmC,OAAQ,KAAM,SAACC,EAAAA,EAAIA,CAACC,SAAU,IAAKzL,eAAe,W,UAAW,UAACQ,EAAAA,GAAIA,CAACiH,QAAQ,QAAQlH,MAAM,Y,UAAY,IAC7F8J,EAAwBI,YAChCwB,KAAOoB,I,IACWA,EAAAA,E,OADU,SAAC7B,EAAAA,EAAIA,CAAC3J,QAASqJ,EAAqBO,SAAU,IAAKzL,eAAe,W,UAAW,SAACQ,EAAAA,GAAIA,CAACiH,QAAQ,QAAQlH,MAAM,Y,SAAa0H,EAAa,CAC7J6C,MAAOwC,KAAKC,IAA6B,QAAzBF,GAAAA,EAAAA,GAAiBjB,gBAAjBiB,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,KAAkC,O,IAIxDjC,EAAaE,UACVvL,I,IAC6BA,EAA5B,MAAMyN,GAAuC,QAAjBzN,EAAAA,EAAI+K,MAAM1M,eAAV2B,IAAAA,OAAAA,EAAAA,EAAmBjB,iBAAkBiC,EAAe3C,QAAQU,cAAgBiB,EAAIgL,OAAShL,EAAI+K,MACzH,OAAO,UAAChL,EAAAA,EAAIA,CAACC,KAAG,EAACE,IAAI,QAAQD,eAAe,W,WAAW,SAACsH,EAAAA,C,SAAkBW,EAAa,CACrF6C,MAAOwC,KAAKC,IAAIC,EAAoB9C,SAAW,OAC3B,SAAC+C,EAAAA,GAAaA,CAACxE,MAAOuE,EAAoBvE,U,GAElE,CACEG,GAAI,uBACJmC,OAAQ,KAAM,SAACC,EAAAA,EAAIA,CAACC,SAAU,IAAKzL,eAAe,W,UAAW,SAACQ,EAAAA,GAAIA,CAACiH,QAAQ,QAAQlH,MAAM,Y,UAAY,SAACwL,EAAAA,MAAKA,CAACC,QAAQ,mBACpHC,KAAOyB,I,IAA6FA,EAAAA,E,OAA9E,SAAClC,EAAAA,EAAIA,CAAC3J,QAASqJ,EAAqBO,SAAU,IAAKzL,eAAe,W,SAA+B,QAAnB0N,GAAAA,EAAAA,GAAWtB,gBAAXsB,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,I,IAGxGtC,EAAaE,UAAUvL,GAAQA,EAAIiL,UAAU,CAC3C5B,GAAI,aACJmC,OAAQ,KAAM,SAACC,EAAAA,EAAIA,CAACC,SAAU,IAAKzL,eAAe,W,UAAW,SAACF,EAAAA,EAAIA,CAACC,KAAG,EAACE,IAAI,QAAQD,eAAe,W,UAAW,SAAC6L,EAAAA,GAAcA,C,SAAE9D,QAC9HkE,KAAO0B,I,IAAwJA,EAAAA,E,OAA/I,SAACnC,EAAAA,EAAIA,CAAC3J,QAASqJ,EAAqBO,SAAU,IAAKzL,eAAe,W,UAAW,SAACQ,EAAAA,GAAIA,CAACiH,QAAQ,QAAQlH,MAAM,Y,SAAa2H,EAAgB,CAAE0F,MAAoB,QAAbD,GAAAA,EAAAA,GAAKvB,gBAALuB,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,Q,IAEjKvC,EAAaE,UAAUvL,GAAQA,EAAIkL,cAAc,CAC/C7B,GAAI,gBACJmC,OAAQ,KAAM,SAACC,EAAAA,EAAIA,CAACC,SAAU,IAAKzL,eAAe,W,UAAW,SAACQ,EAAAA,GAAIA,CAACiH,QAAQ,QAAQlH,MAAM,Y,UAAY,SAACwL,EAAAA,MAAKA,CAACC,QAAQ,4BACpHC,KAAOhB,I,IAAiJA,EAAAA,EAAsEA,EAAAA,E,OAAtM,SAACO,EAAAA,EAAIA,CAAC3J,QAASqJ,EAAqBO,SAAU,IAAKzL,eAAe,W,UAAW,SAAC6N,EAAAA,GAAkBA,CAACtO,MAAM+M,EAAAA,EAAAA,iBAAgB9M,EAA8B,QAArByL,GAAAA,EAAAA,GAAamB,gBAAbnB,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAA2BsB,EAAAA,iBAAiBuB,S,UAAWC,EAAAA,EAAAA,gBAAoC,QAArB9C,GAAAA,EAAAA,GAAamB,gBAAbnB,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,O,IAEjO,GACA,CACDC,EACA1L,EACA4I,EACAtK,EACAiD,EAAe3C,QACfiM,EAAwBI,OACxBxC,EACAF,EACAG,IAEF,OAAO,SAACP,GAAAA,C,UAAa,SAACqG,EAAAA,EAAKA,CACzB7C,QAASA,EACTnI,KAAMA,EACNnB,QAAS2E,EACT1D,MAAOuD,EACPrE,SAAUA,EACViF,UAAW,OAEf,CC7JA,MAAMgH,IAAY3Q,EAAAA,EAAAA,GAAOwC,EAAAA,EAAM,CAC7BlD,MAAO,SAEHsR,IAAM5Q,EAAAA,EAAAA,GAAOkD,EAAAA,GAAM,CACvBD,MAAO,YACPkH,QAAS,cACN0G,EAAAA,KAOE,SAASC,KACd,MAAQC,QAAStN,EAAc,QAAEvB,IAAYlB,EAAAA,EAAAA,KAAgBgQ,UACtDC,EAAgBC,IAAqB9F,EAAAA,EAAAA,UAAS,GACrD,OAAK3H,GAGE,UAACkN,GAAAA,CAAUlH,cAAY,iC,WAAiC,UAACjH,EAAAA,EAAIA,CAACC,KAAG,EAACE,IAAI,aAAawO,GAAG,aAAarF,GAAG,kB,WAAkB,SAAC8E,GAAAA,CAC9H3N,MAA0B,IAAnBgO,EAAiC,YAAc,YACtDnO,QAAS,IAAMoO,EAAkB,G,UAClC,SAACzC,EAAAA,MAAKA,CAACC,QAAQ,2BAA8B,SAACkC,GAAAA,CAC7C3N,MAA0B,IAAnBgO,EAAmC,YAAc,YACxDnO,QAAS,IAAMoO,EAAkB,G,UAClC,SAACzC,EAAAA,MAAKA,CAACC,QAAQ,sBAAkD,IAAnBuC,IAAkC,SAACzG,GAAiBA,CAACtI,QAASA,EAASuB,eAAgBA,IAAuC,IAAnBwN,IAAoC,SAACzN,EAAsBA,CAACtB,QAASA,EAASuB,eAAgBA,OAR/O,IASX,C,gECnBA,MAAM2N,GAAepR,GAAAA,GAAOwJ,GAAG;WACpB,EAAG6H,WAAYA,EAAMC;;;;;;;kCAOEC,GAAAA,GAAYC;;;EAIxCC,GAAiBzR,GAAAA,GAAOwJ,GAAG;;;EAI3BkI,GAAa1R,GAAAA,GAAOwJ,GAAG;;;;;EAMvBmI,GAAc3R,GAAAA,GAAOwJ,GAAG;;;EAIxBoI,GAA0B5R,GAAAA,GAAOwJ,GAAG;;;;;;;IAOtC,EAAGqI,gBAAiBA,GAAc;EAKhCC,GAAU,EACdd,WACA9O,UAAU6P,GAAAA,gBAAgBC,QAC1BC,aACAC,aAAY,EACZC,c,IAKSF,EAIAA,EAAAA,EAMEA,EAAAA,EAAAA,EAbX,MAAM,aAAEtH,IAAiBE,EAAAA,EAAAA,MACnBuH,GAAapO,EAAAA,EAAAA,UAAQ,IAAM,CAACgN,IAAW,CAACA,IACxCqB,EAAsB1H,EAAa,CACvC6C,MAAOyE,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAYK,SACnB/F,KAAMgG,EAAAA,GAAWC,aAEbC,EAAuB9H,EAAa,CACxC6C,MAAOyE,QAAAA,EAAAA,SAAAA,IAAAA,GAA4B,QAA5BA,EAAAA,EAAYS,wBAAZT,IAAAA,OAAAA,EAAAA,EAA8B/K,MACrCqF,KAAMgG,EAAAA,GAAWI,mBAEnB,OAAO,UAACjB,GAAAA,CAAWS,QAASA,E,WAAS,SAACS,GAAAA,EAAaA,CACjDR,WAAYA,EACZlQ,QAASA,EACT2Q,OAAQ,CAACZ,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAYtG,aAAZsG,IAAAA,GAA0B,QAA1BA,EAAAA,EAAmBa,eAAnBb,IAAAA,OAAAA,EAAAA,EAA4Bc,SACrC7S,KAAM,MACN,UAAC0R,GAAAA,CAAwBC,WAAYK,E,WAAW,SAACP,GAAAA,C,UAAY,SAACqB,GAAAA,EAAWC,YAAW,C,SAAER,OAA4D,SAACd,GAAAA,C,UAAY,SAACqB,GAAAA,EAAWE,cAAa,C,SAAEb,W,EAEjLc,GAA0B,EACrCC,mBACAlB,aAAY,M,IAMmKlB,EAJ/K,IAAKoC,IAAqBA,EAAiBzH,MACzC,OAAO,KAET,MAAMqF,GAAWqC,EAAAA,EAAAA,IAAcD,EAAiBzH,OAChD,OAAO,UAAC8F,GAAAA,C,WAAe,SAACuB,GAAAA,EAAWM,cAAa,CAACrQ,MAAM,W,UAAW,SAACwL,EAAAA,MAAKA,CAACC,QAAQ,gCAAwD,SAACoD,GAAAA,CAAQd,SAAUA,EAAU9O,QAAS8O,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU9O,QAAS+P,WAAYmB,EAAkBlB,UAAWA,M,EAEvOqB,GAA4B,EAChCC,qBACAC,0BAEA,MAAMtS,GAAWC,EAAAA,EAAAA,OACX,eAAE2D,IAAmBC,EAAAA,EAAAA,oBAC3B,OAAKwO,EAAmBxM,QAGjB,UAACyK,GAAAA,C,UAAgBgC,GAAsB,SAACT,GAAAA,EAAWU,eAAc,C,UAAC,SAACjF,EAAAA,MAAKA,CAACC,QAAQ,mC,SAAmC,yBAAwD,SAACsE,GAAAA,EAAWM,cAAa,C,UAAC,SAAC7E,EAAAA,MAAKA,CAACC,QAAQ,0C,SAA0C,gCAA8D8E,EAAmB5Q,KAAK+Q,IAC1V,MAAM3C,EAAW2C,EAAQhI,QAAS0H,EAAAA,EAAAA,IAAcM,EAAQhI,OAClDzJ,GAAWyR,EAAQhI,QAASiI,EAAAA,EAAAA,IAA6BD,EAAQhI,MAAM1G,SAAWF,EACxF,OAAO,SAAC+M,GAAAA,CAENd,SAAUA,EACV9O,QAASA,EACT+P,WAAY0B,EACZxB,QAAS,K,IAEIwB,EACFA,E,OAHIxS,GACb0S,EAAAA,EAAAA,IAAmB,CACjB/S,QAAsB,QAAb6S,EAAAA,EAAQhI,aAARgI,IAAAA,OAAAA,EAAAA,EAAe7S,QACxBmE,OAAoB,QAAb0O,EAAAA,EAAQhI,aAARgI,IAAAA,OAAAA,EAAAA,EAAe1O,QAAS8G,EAAAA,MAAMC,WACvC,GARG2H,EAAQ7H,GAAE,OANV,I,EAmBI,SAASgI,K,IAGGC,EAFzB,MAAM1S,GAAUC,EAAAA,EAAAA,MACV,cAAEV,EAAa,cAAEmT,IAAkB/S,EAAAA,EAAAA,KACnCoS,EAA+C,QAA5BW,EAAAA,EAAcnT,UAAdmT,IAAAA,OAAAA,EAAAA,EAA8BJ,QACjDH,EAAqB,GAC3B,IAAK,MAAOQ,EAAK9M,KAAUI,OAAO2M,QAAQF,GAAgB,C,IAC3B7M,EAAzB8M,IAAQpT,QAAoC,KAAnBsG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOyM,UAClCH,EAAmBU,KAAKhN,EAAMyM,QAElC,CACA,MAAMQ,EAAcf,GAAoBgB,QAAQZ,EAAmBxM,QACnE,OAAK3F,EAAQgT,aAAgBF,GAGtB,UAAC/C,GAAAA,C,WAAa,SAAC+B,GAAAA,CAAwBC,iBAAkBA,KAAoB,SAACG,GAAAA,CAA0BC,mBAAoBA,EAAoBC,sBAAuBL,OAFrK,IAGX,C,kDC/HO,MAAMkB,GAASlV,IAAU,SAACC,MAAAA,CAC/BC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACN6U,OAAO,iBACHnV,E,UACL,SAACO,OAAAA,CACAG,EAAE,0vBACFL,KAAML,EAAMK,MAAQ,c,gHCStB,MAAM+U,IAAmBxU,EAAAA,EAAAA,GAAOwC,EAAAA,EAAM,CACpCG,IAAK,SACLrD,MAAO,OACPmV,IAAK,CACH9R,IAAK,MAGH+R,IAAe1U,EAAAA,EAAAA,GAAOwC,EAAAA,EAAM,CAChCC,KAAK,EACLE,IAAK,QACLrD,MAAO,SAEHqV,IAAiB3U,EAAAA,EAAAA,GAAO0U,GAAc,CAC1CE,SAAU,SAENC,IAAkB7U,EAAAA,EAAAA,GAAOkD,EAAAA,GAAM,CACnCiH,QAAS,eACTF,QAAS,OACT6K,cAAe,MACf3R,WAAY,SACZR,IAAK,QACLoS,GAAI,YACJC,GAAI,aACJ7U,aAAc,aACd4C,gBAAiB,YACjBzD,MAAO,iBACJuR,EAAAA,GACH5N,MAAO,cAEHgS,IAA4BjV,EAAAA,EAAAA,GAAOkD,EAAAA,GAAM,CAC7CiH,QAAS,QACTlH,MAAO,YACPiH,SAAU,OACVP,UAAW,iBACRS,EAAAA,GACH8K,WAAY,WACZC,WAAY,KAERC,IAA+BpV,EAAAA,EAAAA,GAAOqV,GAAAA,EAAW,CACrD/U,WAAY,QACZgV,SAAU,CACRC,QAAS,CACPC,KAAM,CACJvL,QAAS,UAEXwL,MAAO,CACLxL,QAAS,YAKXyL,GAA2B,IAC1B,SAASC,K,IAIoCC,EAAAA,EAHlD,MAAM,EAAElV,IAAMC,EAAAA,EAAAA,mBACR,QAAEG,EAAO,SAAEkQ,EAAQ,WAAE4E,IAAe5U,EAAAA,EAAAA,MACpC,SAAEsQ,IAAauE,EAAAA,GAAAA,aACf,YAAEC,EAAW,YAAEC,EAAW,YAAEC,IAA+B,QAAfJ,EAAAA,EAAWlQ,YAAXkQ,IAAAA,GAAsB,QAAtBA,EAAAA,EAAiBjK,aAAjBiK,IAAAA,OAAAA,EAAAA,EAAwB9C,UAAW,CAAC,EAChFmD,GAAcjH,EAAAA,EAAAA,iBAClBgC,EAAS9O,QACTpB,EACAkQ,EAASkF,SAAWjH,EAAAA,iBAAiBkH,OAASlH,EAAAA,iBAAiBmH,QAE1DC,EAAUC,IAAaC,EAAAA,GAAAA,KACxBC,GAAOxU,EAAAA,EAAAA,cAAY,KACvBsU,EAAUxV,EAAQ,GACjB,CAACA,EAASwV,KACNG,EAAwBC,IAAgC1L,EAAAA,EAAAA,aAAY2L,IAAOA,IAAG,GAC/EC,GAAuBC,EAAAA,GAAAA,IAAoBf,GAAe,GAAIJ,IAC9DoB,IAAmBhB,GAAeA,EAAY9O,OAAS0O,GACvDqB,EAA2BD,GAAkBL,GAC3CO,SAAUC,EAASC,UAAWC,IAAWC,EAAAA,GAAAA,GAAatW,EAASA,EAASkQ,EAAS9O,UACnF,cAAEmV,IAAkBxM,EAAAA,EAAAA,OACpB,cAAEyM,EAAa,aAAEC,GAAiB,CACtCD,cAAeD,EAAcJ,GAC7BM,aAAcF,EAAcF,IAExBK,EAASpD,QAAQ/H,WAAWiL,KAAmBlD,QAAQ/H,WAAW8K,EAAOM,QAAQ,KACjFC,EAAUJ,IAAkBC,EAClC,OAAO,UAAC/C,GAAAA,CAAiB/K,cAAY,6B,WAA6B,SAACvG,EAAAA,GAAIA,CAACiH,QAAQ,W,UAAW,SAACsE,EAAAA,MAAKA,CAACC,QAAQ,yBAA6B,UAACiG,GAAAA,CAAelL,cAAY,2B,WAA6BuH,EAASkF,WAAY,SAACyB,GAAAA,GAAOA,CAACC,UAAU,SAAS1X,KAAM2X,GAAAA,GAAYC,IAAKC,KAAM1B,EAAU2B,KAAMtX,EAAE,iB,UAAkB,UAACmU,GAAAA,CAAgB/R,QAAS0T,E,WAAM,SAACyB,GAAAA,EAAIA,CAAC3Y,MAAM,OAAOC,OAAO,OAAO0D,MAAOqO,KAAab,EAAAA,EAAAA,gBAAeO,EAASlQ,eAAsC,SAACoX,EAAAA,GAAYA,CAACjW,KAAMgU,E,UAAa,UAACpB,GAAAA,C,WAAgB,SAACsD,GAAAA,EAAaA,CAAC7Y,MAAM,OAAOC,OAAO,OAAOE,KAAM6R,IAAaN,EAAS9O,UAAY6P,GAAAA,gBAAgBC,SAAU,SAACvD,EAAAA,MAAKA,CAACC,QAAQ,sBAAwB,SAACD,EAAAA,MAAKA,CAACC,QAAQ,yBAAuDqH,IAAe,SAACmC,EAAAA,GAAYA,CAACjW,KAAM8T,E,UAAa,UAAClB,GAAAA,C,WAAgB,SAACP,GAAKA,CAAChV,MAAM,OAAOC,OAAO,OAAOE,KAAM6R,KAAY,SAAC7C,EAAAA,MAAKA,CAACC,QAAQ,wBAAsDsH,IAAe,SAACkC,EAAAA,GAAYA,CAACjW,KAAM,iBAAiB+T,I,UAAe,UAACnB,GAAAA,C,WAAgB,SAACuD,GAAAA,EAAYA,CAAC9Y,MAAM,OAAOC,OAAO,OAAOE,KAAM6R,KAAY,SAAC7C,EAAAA,MAAKA,CAACC,QAAQ,4BAAsE,UAACuG,GAAAA,C,WAA4Ba,IAAe,SAACuC,GAAAA,GAAeA,C,UAAC,SAAC5J,EAAAA,MAAKA,CAACC,QAAQ,0BAA4CoH,IAAe,sB,WAAE,SAACV,GAAAA,CAA6B3L,cAAY,yBAAyB8L,SAAUwB,E,SAA2BjB,KAA2C,SAACV,GAAAA,CAA6B3L,cAAY,8BAA8B8L,QAASwB,E,SAA2BH,OAAyDE,IAAkB,SAAC5T,EAAAA,GAAIA,CACpkD+G,QAAQ,OACRhH,MAAM,WACN3C,WAAW,MACX6J,QAAQ,QACRmO,GAAG,QACHC,IAAK,CAAEpH,GAAI,QACXrO,QAAS4T,KACL7F,EAAAA,GACJpH,cAAY,qC,SACZgN,GAAyB,SAAChI,EAAAA,MAAKA,CAACC,QAAQ,4BAA8B,SAACD,EAAAA,MAAKA,CAACC,QAAQ,4BAA6D8I,IAAU,SAACgB,GAAAA,GAAgBA,CAC7KZ,UAAU,OACV1X,KAAM2X,GAAAA,GAAYY,MAClBT,MAAM,SAAChF,GAAAA,EAAW0F,QAAO,CAACzV,MAAM,W,UAAW,SAAC0V,GAAAA,GAAiBA,CAAAA,K,UAC9D,SAACnW,EAAAA,EAAIA,CAACG,IAAI,Q,SAAS+U,GAAU,UAAC1E,GAAAA,EAAWC,YAAW,C,UAAEjC,EAAS7D,OAAO,QACzD,SAACsB,EAAAA,MAAKA,CAACC,QAAQ,oBAAoB,QAC3B4I,MAA0C,sB,WAAE,UAACtE,GAAAA,EAAWC,YAAW,C,UAAEjC,EAAS7D,OAAO,QAC3F,SAACsB,EAAAA,MAAKA,CAACC,QAAQ,wBAAwB,QAC/B6I,KAAuC,KAAI,UAACvE,GAAAA,EAAWC,YAAW,C,UAAEjC,EAAS7D,OAAO,QAC5F,SAACsB,EAAAA,MAAKA,CAACC,QAAQ,yBAAyB,QAChC4I,KAAwC,aAClE,C,mJC/FO,MAAMsB,GAAqB,K,IAaKhD,EAAAA,EAKiE5E,EAAkBA,EAjBxH,MAAM,QAAElQ,EAAO,SAAEkQ,EAAQ,WAAE4E,IAAe5U,EAAAA,EAAAA,MACpC,EAAEN,IAAMC,EAAAA,EAAAA,kBACRkY,GAASC,EAAAA,GAAAA,KAETC,GADQC,EAAAA,GAAAA,MACeC,IACtBC,EAAiBC,IAAqB/N,EAAAA,EAAAA,WAAS,GAChDgO,EAAkBpI,EAAS7D,QAAUzM,EAAE,sBACvCuV,GAAcjH,EAAAA,EAAAA,iBAClBgC,EAAS9O,QACTpB,EACAkQ,EAASkF,SAAWjH,EAAAA,iBAAiBkH,OAASlH,EAAAA,iBAAiBmH,QAE3D,YAAEL,EAAW,YAAEC,IAA+B,QAAfJ,EAAAA,EAAWlQ,YAAXkQ,IAAAA,GAAsB,QAAtBA,EAAAA,EAAiBjK,aAAjBiK,IAAAA,OAAAA,EAAAA,EAAwB9C,UAAW,CAAC,EACnEuG,EAAarD,GAAe,iBAAiBA,KAC5CsD,IAAgBC,EAAAA,GAAAA,mBACjBC,EAAS,GAAGF,EAAapZ,KAAO,EAAI,IAAM,sCAAsCuZ,GAAAA,YAAc,SAAW,QACzGC,EAAkBC,OAAOC,SAAS3X,KAAOuX,EACzCK,EAAmB7I,EAAS8I,MAAQ9I,EAAS7D,OAAS,GAAG6D,EAAS8I,SAAS9I,EAAS7D,WAAY6D,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU8I,QAAQ9I,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU7D,SAAU,IACrIkJ,EAAUC,IAAaC,EAAAA,GAAAA,KACxBwD,GAAgB/V,EAAAA,EAAAA,UAAQ,IACrB,CACL,CACEgW,MAAOtZ,EAAE,mBACT2B,KAAM2O,EAAS9O,UAAY6P,GAAAA,gBAAgBC,SAAU,SAACmG,GAAAA,EAAaA,CAAC7Y,MAAM,OAAOC,OAAO,OAAOE,KAAMoZ,EAAOvH,SAAS2I,OAAU,SAACC,GAAAA,EAAYA,CAAC5a,MAAM,OAAOC,OAAO,OAAOE,KAAMoZ,EAAOvH,SAAS2I,MAC9LnX,QAAS,IAAM6W,OAAOQ,KAAKlE,EAAa,UACxC8B,OAAQ9B,GAEV,CACE+D,MAAOtZ,EAAE,kBACT2B,MAAM,SAACiS,GAAKA,CAAChV,MAAM,OAAOC,OAAO,OAAOE,KAAMoZ,EAAOvH,SAAS2I,MAC9DnX,QAAS,IAAM6W,OAAOQ,KAAKpE,EAAa,UACxCgC,OAAQhC,GAEV,CACEiE,MAAOtZ,EAAE,kBACT2B,MAAM,SAAC+V,GAAAA,EAAYA,CAAC9Y,MAAM,OAAOC,OAAO,OAAOE,KAAMoZ,EAAOvH,SAAS2I,MACrEnX,QAAS,IAAM6W,OAAOQ,KAAKd,EAAY,UACvCtB,OAAQsB,GAEV,CACEW,MAAkBtZ,EAAX2V,EAAa,gBAAqB,0BACzChU,KAAMgU,GAAW,SAAC+D,GAAAA,MAAKA,CAACla,KAAM,GAAIma,EAAG,EAAGpX,MAAO4V,EAAOyB,cAAcL,OAAU,SAACM,GAAAA,EAAIA,CAACra,KAAM,GAAI+C,MAAO4V,EAAOvH,SAAS2I,MACrHnX,QAAS,IAAMwT,EAAUoD,GACzB3B,KAAMgB,GAER,CACEiB,MAAOtZ,EAAE,+BACT2B,MAAM,SAACmY,GAAAA,EAASA,CAAC/a,KAAMoZ,EAAOvH,SAAS2I,IAAK3a,MAAO,GAAIC,OAAQ,KAC/DuD,QAAS,KAAM2X,EAAAA,GAAAA,GAAqBZ,GACpC9B,KAAMgB,KAGT,CACD9C,EACAF,EACAsD,EACArI,EAAS9O,QACT2W,EACAnY,EACA2V,EACAC,EACAoD,EACAX,EACAc,IAEF,OAAO,sB,WAAE,UAACa,GAAAA,GAAaA,C,WAAC,SAAC9H,GAAAA,EAAaA,CAACR,WAAY,CAACpB,GAAW9O,QAAS8O,EAAS9O,QAAShC,KAAM,MAAM,UAACsC,EAAAA,EAAIA,CAACC,KAAG,EAACE,IAAI,QAAQQ,WAAW,SAASwX,SAAS,S,WAAS,SAACzX,EAAAA,GAAIA,CAACiH,QAAQ,WAAWgE,SAAU,MAAQ/D,EAAAA,G,SAAuB4G,EAAS8I,MAAQpZ,EAAE,uBAA2B,SAACwC,EAAAA,GAAIA,CAACiH,QAAQ,WAAWyQ,cAAc,YAAY3X,MAAM,YAAYsV,IAAK,CAAEtO,QAAS,Q,SAAWmP,UAA+CL,GAAiB,UAACvW,EAAAA,EAAIA,C,WAAC,SAACU,EAAAA,GAAIA,CAACJ,QAAS,IAAMqW,GAAkB,MAAW0B,GAAAA,G,UAAmB,SAACC,GAAAA,EAAcA,CAAC5a,KAAM6a,GAAU,UAAAC,OAAQ/X,MAAO4V,EAAOoC,SAAShB,SAAc,SAACiB,GAAAA,eAAcA,CAACxL,OAAQqJ,GAAkBG,EAAiBiC,QAAS,IAAMhC,GAAkB,G,UAAQ,SAAC3W,EAAAA,EAAIA,CAACG,IAAI,YAAYwO,GAAG,a,SAAc4I,EAAcnX,KAChuBwY,GAAWA,EAAOrD,OAAQ,UAACvV,EAAAA,EAAIA,CAC9BC,KAAG,EAEHnD,MAAM,OACNqD,IAAI,aACJqS,GAAG,YACHD,GAAI,GACJ5R,WAAW,SACX5C,WAAY,CAAEwC,gBAAiB,aAC/B+D,OAAO,UACP3G,aAAa,YACb2C,QAAS,KACPqW,GAAkB,GAClBiC,EAAOtY,SAAS,E,UAElBsY,EAAO/Y,MAAK,SAACa,EAAAA,GAAIA,CAACiH,QAAQ,Q,SAASiR,EAAOpB,UAbrCoB,EAAOpB,iBAcoB,UAACxX,EAAAA,EAAIA,CAACC,KAAG,EAACE,IAAI,QAAQQ,WAAW,S,UAAU4W,EAAcnX,KAC1FwY,GAAWA,EAAOrD,OAAQ,SAACS,GAAAA,GAAgBA,CAAoBR,KAAMoD,EAAOpB,MAAOpC,UAAU,MAAM1X,KAAM2X,GAAAA,GAAYC,I,UAAK,SAAC5U,EAAAA,GAAIA,CAACJ,QAASsY,EAAOtY,WAAa+X,GAAAA,G,SAAoBO,EAAO/Y,QAAvI+Y,EAAOpB,UACzD,SAACqB,GAAAA,EAAWA,CAACvB,KAAMD,EAAkByB,UAAU,mB,qMCtEnD,MAAMC,IAAcC,EAAAA,GAAAA,IAAiBC,GAAAA,GAAG;;;kCAGN,EAAGpK,WAAYA,EAAMqK,WAAWzC;;;;EAKlE,SAAS0C,KACP,MAAM,QAAE7a,EAAO,SAAEkQ,EAAQ,cAAEpQ,IAAkBI,EAAAA,EAAAA,KAC7C,OAAO,UAAC4a,EAAAA,GAAsBA,CAACC,aAAW,iB,WAAiB,UAACC,EAAAA,GAAiBA,CAACC,GAAI,YAAYnb,EAAcY,gB,WAAiB,SAACiN,EAAAA,MAAKA,CAACC,QAAQ,mBAAmB,KAAC,SAACsN,GAAAA,EAAYA,CAAC9b,KAAM,SAA0B,UAAC4b,EAAAA,GAAiBA,CAACC,GAAI,mBAAmBnb,EAAcY,gB,WAAiB,SAACiN,EAAAA,MAAKA,CAACC,QAAQ,kBAAkB,KAAC,SAACsN,GAAAA,EAAYA,CAAC9b,KAAM,SAA0B,SAAC+b,EAAAA,GAAqBA,CAACnb,QAASA,EAASkQ,SAAUA,MAC5Z,CACA,SAASkL,GAAsBlL,GAC7B,OAAKA,EAGDA,EAASmL,QACJnL,EAASlQ,QAEXY,EAAAA,EALE,EAMX,CAUA,SAAS0a,KACP,MAAM,QAAEtb,EAAO,SAAEkQ,EAAQ,gBAAEnQ,EAAe,QAAEwb,IAAYrb,EAAAA,EAAAA,KAClDsb,GAAyBlX,EAAAA,EAAAA,gBAAeC,EAAAA,aAAakX,iBACrDpb,GAAWC,EAAAA,EAAAA,MACXob,GAAeC,EAAAA,GAAAA,kBAAgBC,EAAAA,GAAAA,YAAW1L,IAC1C2L,GAAuB3a,EAAAA,EAAAA,cAC1B4a,I,IAGqFA,EACEA,EAHtF,MAAMC,EAA0BX,GAAsBU,EAAOE,eACvDC,EAA2Bb,GAAsBU,EAAOI,gBACxDC,GAAkBC,EAAAA,GAAAA,GAAuBL,EAAyB/b,KAAgC,QAApB8b,EAAAA,EAAOE,qBAAPF,IAAAA,OAAAA,EAAAA,EAAsB1a,WAAYrB,EAChHsc,GAAmBD,EAAAA,GAAAA,GAAuBH,EAA0Bjc,KAAiC,QAArB8b,EAAAA,EAAOI,sBAAPJ,IAAAA,OAAAA,EAAAA,EAAuB1a,WAAYrB,EACzH,GAAIoc,GAAmBE,EACrB,OAEF,MAAMC,EAAkBR,EAAOI,gBAAkBJ,EAAOE,cACxD,IAAKM,EACH,OAEF,MAAMC,ECjFL,SAA2Bvc,EAASoB,EAASgU,EAAUoH,GAC5D,MAAMC,GAAcC,EAAAA,GAAAA,mBAAkBtb,IAAWub,EAAAA,GAAAA,cAAavb,GAASwb,sBAAwB,WAAa,WACtGC,GAAqBC,EAAAA,EAAAA,WAAU9c,GACrC,OAAIoB,IAAW2b,EAAAA,GAAAA,QAAO3b,IAAYpB,KAAYgd,EAAAA,GAAAA,eAAc5b,GAAS6O,QAAQjQ,QACpEid,GAAAA,UAELJ,EACK,uEAAuEJ,YAAsBI,aAE7FL,QAAa,CAExB,CDsE+BU,CACvBZ,EAAgBrM,QAAQjQ,QACxBsc,EAAgBlb,QAChBkb,EAAgBlH,UAEZ+H,GAAMpK,EAAAA,EAAAA,IAAmB,CAE7B/S,QAASsc,EAAgBlH,SAAW,KAAOkH,EAAgBtc,QAC3DmE,OAAOC,EAAAA,EAAAA,iBAAesY,EAAAA,GAAAA,mBAAkBJ,EAAgBlb,SAAWkb,EAAgBlb,QAAUrB,GAC7Fqd,aAGEtB,EAAOE,eAAiBF,EAAOE,gBAAkBM,EAAkBP,EAA0B,OAGjG1b,EAAS8c,EAAK,CAAEE,MAAO,CAAEd,qBAAqB,GAEhD,CAACvc,EAASD,EAAiBM,IAEvBid,EA9CR,WACE,MAAM,SAAEpN,IAAahQ,EAAAA,EAAAA,MACf,qBAAEqd,IAAyBC,EAAAA,GAAAA,iBAC3BC,EAAWF,IACXG,GAAoBxa,EAAAA,EAAAA,UAAQ,IACS,kBAA3Bua,EAASzB,cAA6ByB,EAASzB,cAAgB9L,EAASkF,cAAW,GAASuI,EAAAA,GAAAA,kBAAiBzN,EAAS9O,UACnI,CAAC8O,EAAS9O,QAAS8O,EAASkF,SAAUqI,EAASzB,gBAClD,OAAO4B,EAAAA,GAAAA,IAAYF,EAAmBxN,EAAS9O,QACjD,CAsC+Byc,IACtBC,EAAkBC,IAAuBzT,EAAAA,EAAAA,WAAS,GACnD0T,GAAoB9c,EAAAA,EAAAA,cAAY,IAAM6c,GAAoB,IAAQ,IACxE,OAAO,UAACrc,EAAAA,EAAIA,CAACG,IAAI,S,WAAS,SAAC8J,GAAAA,GAAIA,CAC7BsS,cAAc,EACd7c,QAAS8O,EAAS9O,QAClBkc,qBAAsBA,EACtBY,sBAAuBhO,EACvBiO,iBAAkBtC,EAClBuC,SAAO,IACN5C,GAAyB,sB,WAAE,SAAC6C,GAAAA,iBAAgBA,CAAC3C,aAAcA,EAAc1Z,QAAS,IAAM+b,GAAoB,KAAUrC,IACzH,SAAC4C,GAAAA,QAAiBA,CAChBC,cAAe7C,EACf8C,mBAAiB,EACjBC,UAAWX,EACXY,eAAgBV,EAChBW,cAAeX,OACRzC,IAAW,SAACqD,EAAAA,EAAkBA,CAAC/a,aAAc7D,EAASub,QAASA,MAC1E,CACA,SAASsD,IAAa,SAAEC,IACtB,MAAM,QAAE9e,EAAO,SAAEkQ,IAAahQ,EAAAA,EAAAA,KAC9B,OAAO,SAAC6e,GAAAA,QAAKA,CACXC,eAAa,EACbC,KAAMC,EAAAA,GAAkBC,mBACxBC,WAAY,CACVvb,aAAc7D,EACdqf,YAAanP,EAAS7D,OACtBiT,UAAWpP,EAAS8I,KACpB5X,QAAS8O,EAAS9O,S,SAEpB0d,GACJ,CACe,SAASS,K,IAECzK,EACE7B,EAFzB,MAAM,QAAEjT,EAAO,SAAEkQ,EAAQ,WAAE4E,EAAU,cAAEhV,EAAa,cAAEmT,IAAkB/S,EAAAA,EAAAA,KAClEsf,EAAgC,QAAf1K,EAAAA,EAAWlQ,YAAXkQ,IAAAA,OAAAA,EAAAA,EAAiBjK,MAClCyH,EAA+C,QAA5BW,EAAAA,EAAcnT,UAAdmT,IAAAA,OAAAA,EAAAA,EAA8BJ,SAC/C4M,GAAIC,IAAmB1e,EAAAA,EAAAA,MACvBwM,UAAWmS,IAAoBC,EAAAA,GAAAA,KACjCC,GAAgBC,EAAAA,GAAAA,KACtB,OAAO,SAACjB,GAAAA,C,UAAa,UAACkB,GAAAA,GAAkBA,C,WAAC,UAACC,GAAAA,GAASA,C,WAAC,SAACnF,GAAAA,CAAAA,IAAgB,SAACoF,GAAAA,GAAkBA,CAACtX,cAAY,uB,UAAuB,SAACmP,GAAkBA,CAAAA,MAAwB,SAACoI,GAAAA,GAAYA,CAAAA,IAAKR,KAAoBpN,IAAoB,SAAC5Q,EAAAA,EAAIA,CAACye,GAAG,a,UAAa,SAAC9N,GAAuBA,CAACC,iBAAkBA,EAAkBlB,WAAS,OAAW,SAACgP,GAAAA,GAAYA,CAAChf,QAAS8O,EAAS9O,QAASpB,QAASA,EAASwf,eAAgBA,KAAkB,SAAC/E,GAAAA,CAAAA,IAAc,SAACzK,GAAeA,CAAAA,OAAe,UAACqQ,GAAAA,EAAUA,C,UAAEX,IAAkB,sB,WAAE,SAACpE,GAAAA,CAAAA,IAAmB,SAACtI,GAAcA,CAAAA,OAAO,SAAC6B,GAAgBA,CAAAA,OAAgB,SAACyL,EAAAA,EAAeA,CAACC,KAAMV,GAAiBF,IAAoBa,GAAAA,EAAgBC,K,UAI1oB,SAAC/X,MAAAA,CAAIC,cAAY,wB,UAAwB,SAAChJ,EAAaA,CAAAA,WAC1D,CEtJA,IAAI+gB,GACJ,SAASC,KAAa,OAAOA,GAAWna,OAAOoa,OAASpa,OAAOoa,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAU9a,OAAQ6a,IAAK,CAAE,IAAInhB,EAAIohB,UAAUD,GAAI,IAAK,IAAIE,KAAKrhB,GAAG,CAAG,GAAEshB,eAAeC,KAAKvhB,EAAGqhB,KAAOH,EAAEG,GAAKrhB,EAAEqhB,GAAK,CAAE,OAAOH,CAAG,EAAGH,GAASS,MAAM,KAAMJ,UAAY,CAEnR,SAASK,GAAOC,EAAMC,GACpB,IAAI,MACFrI,EAAK,QACLsI,KACGljB,GACDgjB,EACJ,OAAoB,gBAAoB,MAAOX,GAAS,CACtD/hB,MAAO,6BACPJ,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACN4P,IAAKgT,EACL,kBAAmBC,GAClBljB,GAAQ4a,EAAqB,gBAAoB,QAAS,CAC3DlO,GAAIwW,GACHtI,GAAS,KAAMwH,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3E1hB,EAAG,2tBACHL,KAAM,kBAEV,CACA,MAAM8iB,GAA0B,aAAiBJ,IAClC,I,uCCdf,MAAMK,GAA0BxiB,GAAAA,GAAOwJ,GAAG;;;;;EAMpCiZ,GAAqBziB,GAAAA,GAAO0iB,IAAI;;;;;;WAM3B,EAAGrR,WAAYA,EAAM4J;;;;EAK1B0H,IAAqB3iB,EAAAA,GAAAA,IAAO4iB,GAAAA,GAAc;;;;;WAKrC,EAAGvR,WAAYA,EAAMC;;;EAIjB,SAASuR,IAAoB,YAC1CC,EAAW,iBACXC,IAEA,MAAM,QAAE7gB,IAAYZ,EAAAA,EAAAA,KACd0hB,GAAmBC,EAAAA,GAAAA,IAAsB/gB,GACzCghB,GAAuBD,EAAAA,GAAAA,IAAsBH,GAC7C3hB,GAAWC,EAAAA,EAAAA,MACX+hB,GAAcC,EAAAA,GAAAA,KACdC,GAAsBN,GAAoBD,IAAgB5gB,EAC1DohB,EAAsBN,GAAmBO,EAAAA,EAAAA,eAAcrhB,QAAW,EACxE,OAAO,UAACsgB,GAAAA,C,WAAwB,SAACgB,GAAOA,CAAAA,GAAIT,GAAoBM,GAAqB,sB,WAAE,SAACZ,GAAAA,C,UAAmB,SAAChU,EAAAA,MAAKA,CAACC,QAAQ,kCAAoD,SAACiU,GAAAA,CAAmBxQ,QAAS,IAAMhR,EAAS,W,UAAY,SAAC6R,GAAAA,EAAWyQ,UAAS,C,UAAC,SAAChV,EAAAA,MAAKA,CAACC,QAAQ,iCAA2E,sB,UAAG4U,IAAuB,SAACb,GAAAA,C,UAAmB,SAAChU,EAAAA,MAAKA,CAACC,QAAQ,sCAAsCc,OAAQ,CAAEkU,QAASJ,QAA+C,SAACX,GAAAA,CAAmBxQ,QAAS,IAAMgR,EAAYL,G,UAAc,SAAC9P,GAAAA,EAAWyQ,UAAS,C,UAAC,SAAChV,EAAAA,MAAKA,CACllBC,QAAQ,yCACRc,OAAQ,CAAEkU,QAASR,GAAuBK,EAAAA,EAAAA,eAAcT,GAAe,eAE3E,C,wCCjDO,SAASa,GAAkBjjB,EAAGsQ,EAAU9O,G,IAC3B8O,EACEA,EADpB,MAAMoP,EAAYpP,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU8I,KACtBqG,EAAcnP,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU7D,OACxByW,EAAYljB,EAAE,qBACpB,IAAK0f,IAAcD,EACjB,OAAOyD,EAET,MAAMC,EAAc3hB,GAAWA,IAAY6P,GAAAA,gBAAgBC,QAAU,QAAOuR,EAAAA,EAAAA,eAAcrhB,KAAa,GACvG,OAAKke,GAAaD,EACT,GAAGA,IAAc0D,MAAgBD,IAEtCxD,IAAcD,EACT,GAAGC,IAAYyD,MAAgBD,IAEjC,GAAGxD,MAAcD,KAAe0D,MAAgBD,GACzD,CACO,MAAME,GAA0B,CAAC9S,EAAU9O,K,IAC1B8O,EAAkBA,EAAsBA,EAAmBA,EAAsBA,EAAkBA,EAEzH,MAAO,wBAFeA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU8I,QAAQ9I,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU7D,QAAS,GAAG6D,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU8I,SAAS9I,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU7D,WAAY6D,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU8I,QAAQ9I,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU7D,SAAU,WACzHjL,GAAWA,IAAY6P,GAAAA,gBAAgBC,QAAU,QAAOuR,EAAAA,EAAAA,eAAcrhB,KAAa,2DACW,E,gECepH,SAAS6hB,GAAenO,EAAYjR,EAAc9D,EAAiBqV,G,IAWlCN,EAV/B,MAAM,QAAE1T,IAAYZ,EAAAA,EAAAA,KACd0iB,EAAa9hB,GAAW6P,GAAAA,gBAAgBC,QACxCiS,GAAgBjgB,EAAAA,EAAAA,UAAQ,K,IAIxB4R,EAHJ,OAAIM,GACK4H,EAAAA,GAAAA,eAAcjd,IAEJ,QAAf+U,EAAAA,EAAWlQ,YAAXkQ,IAAAA,OAAAA,EAAAA,EAAiBjK,QACZ0H,EAAAA,EAAAA,IAAcuC,EAAWlQ,KAAKiG,YADvC,CAGa,GACZ,CAACuK,EAAUrV,EAAgC,QAAf+U,EAAAA,EAAWlQ,YAAXkQ,IAAAA,OAAAA,EAAAA,EAAiBjK,QAC1CuY,EAAmB9P,QAAQ6P,IAAkBpjB,IAAoBmjB,EACjEG,EArBR,SAAyBrjB,EAASoB,EAAS8D,G,IAER2F,EADjC,MAAMA,GAAQ+S,EAAAA,GAAAA,IAAa1Y,OAAiB,EAAVlF,EAAkBoB,GACpD,OAAI8D,IAASlF,GAAW6K,IAASA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOwB,UAAWiX,EAAAA,OACjD,EAEOzY,CAEX,CAcuB0Y,CAAgB1f,EAAc9D,EAAiBqjB,GAGpE,MAAO,CAAElT,SAFQiT,GAAiBE,EAEfG,2BADgBL,EAErC,CAuBA,SAASM,K,IAuBmB3O,EAAAA,EAAAA,EAGxBA,EAAAA,EAAgCA,EAAAA,EAAAA,EAzBlC,MAAM,aAAEjR,IAAiB6f,EAAAA,EAAAA,KACzB,IAAK7f,EACH,MAAM,IAAI8f,MAAM,qEAElB,MAAMC,GAAoBjH,EAAAA,GAAAA,eAAakH,EAAAA,GAAAA,OAA4B5S,GAAAA,gBAAgBC,SAC7EkE,EAAWvR,IAAiBjD,EAAAA,EAC5BkjB,EAAiB1O,GAAW2O,EAAAA,GAAAA,GAAwBH,EAAkBI,aAAa7f,OAASN,EAC5FiR,GAAamP,EAAAA,EAAAA,kBAAiB,CAClCjf,UAAW,CAAEhF,QAAS8jB,EAAgB3f,MAAOyf,EAAkBI,aAAa7f,OAC5E+f,YAAa,QAETC,GAAaC,EAAAA,GAAAA,IAAuBN,EAAgBF,EAAkBI,aAAa7f,OACnF8O,EAnCR,SAA0B6B,G,IAoBpBuP,EAA0BvP,EAAAA,EAAAA,EAnB9B,MAAQlQ,KAAMyf,IAAiBC,EAAAA,GAAAA,MAC/B,OAAOphB,EAAAA,EAAAA,UAAQ,K,IACSmhB,EAAAA,EAAAA,EACKvP,EAAAA,EAAAA,EAD3B,MAAMyP,EAAgBF,QAAAA,EAAAA,SAAAA,IAAAA,GAAwB,QAAxBA,EAAAA,EAAcG,kBAAdH,IAAAA,GAA6B,QAA7BA,EAAAA,EAA2B,UAA3BA,IAAAA,OAAAA,EAAAA,EAA+BE,cAC/CE,EAAoC,QAAf3P,EAAAA,EAAWlQ,YAAXkQ,IAAAA,GAAsB,QAAtBA,EAAAA,EAAiBjK,aAAjBiK,IAAAA,GAA+B,QAA/BA,EAAAA,EAAwB9C,eAAxB8C,IAAAA,OAAAA,EAAAA,EAAiCgH,OAC5D,OAAK2I,EAGEA,EAAmBC,QAAO,CAAC5iB,EAAKiE,KACrC,GAAIA,EAAS,C,IAMMwe,EALZziB,EAAIiE,EAAQ5B,SACfrC,EAAIiE,EAAQ5B,OAAS,CAAC,GAExB,MAAMwgB,EAAS7iB,EAAIiE,EAAQ5B,QAAU,CAAC,EACtCwgB,EAAO3kB,QAAU+F,EAAQ/F,QACzB2kB,EAAO9R,QAAU0R,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAeK,MAAMC,I,IAAiBA,EAAAA,E,OAAAA,QAAAA,EAAAA,SAAAA,IAAAA,GAAmB,QAAnBA,EAAAA,EAAcha,aAAdga,IAAAA,OAAAA,EAAAA,EAAqB7Z,MAAOjF,EAAQiF,EAAE,IAC7FlJ,EAAIiE,EAAQ5B,OAASwgB,CACvB,CACA,OAAO7iB,CAAG,GACT,CAAC,GAbK,CAAC,CAaJ,GACL,CAACuiB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAcG,WAA2B,QAAf1P,EAAAA,EAAWlQ,YAAXkQ,IAAAA,GAAsB,QAAtBA,EAAAA,EAAiBjK,aAAjBiK,IAAAA,GAA+B,QAA/BA,EAAAA,EAAwB9C,eAAxB8C,IAAAA,OAAAA,EAAAA,EAAiCgH,QACjE,CAcwBgJ,CAAiBhQ,IACjC,SAAE5E,EAAQ,0BAAEsT,GAA8BP,GAC9CnO,EACAjR,EACA+f,EAAkB5Y,GAClBoK,GAEImG,GAAUwJ,EAAAA,GAAAA,IAAgBlhB,EAAc+f,EAAkB5Y,IAC1DuF,GAAQwE,EAAAA,GAAAA,aACR,iBAAEwH,IAAqByI,EAAAA,EAAAA,MAAc3H,OAAS,CAAC,EAC/C4H,GAAmC,QAAfnQ,EAAAA,EAAWlQ,YAAXkQ,IAAAA,GAAsB,QAAtBA,EAAAA,EAAiBjK,aAAjBiK,IAAAA,GAA+B,QAA/BA,EAAAA,EAAwB9C,eAAxB8C,IAAAA,OAAAA,EAAAA,EAAiC7C,UAAWsK,EAChEtc,GAAailB,EAAAA,GAAAA,GACjBD,GACe,QAAfnQ,EAAAA,EAAWlQ,YAAXkQ,IAAAA,GAAsB,QAAtBA,EAAAA,EAAiBjK,aAAjBiK,IAAAA,OAAAA,EAAAA,EAAwBkE,QAAuB,QAAflE,EAAAA,EAAWlQ,YAAXkQ,IAAAA,GAAsB,QAAtBA,EAAAA,EAAiBjK,aAAjBiK,IAAAA,GAA+B,QAA/BA,EAAAA,EAAwB9C,eAAxB8C,IAAAA,OAAAA,EAAAA,EAAiCkE,MACjEzI,EAAM4U,UACNllB,iBAAc,EAChB,OAAOiD,EAAAA,EAAAA,UAAQ,K,IAMDgN,EAAuCA,EALnD,MAAO,CACLA,WACApQ,cAAe8jB,EAAkBI,aAAa7f,MAC9CpE,gBAAiB6jB,EAAkB5Y,GAEnChL,UAAUkQ,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkF,UAAWxU,EAAAA,EAAkBsP,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUlQ,UAAY6D,EACvE2f,4BACA1O,aACAqP,aACA5I,UACAtI,gBACAhT,aACD,GACA,CACDiQ,EACA0T,EAAkBI,aAAa7f,MAC/Byf,EAAkB5Y,GAClBnH,EACA2f,EACA1O,EACAqP,EACA5I,EACAtI,EACAhT,GAEJ,CACe,SAASmlB,K,IAMCtQ,EAQgC0K,EAAsBA,EAb7E,MAAM,EAAE5f,IAAMC,EAAAA,EAAAA,kBAERmiB,GADUxhB,EAAAA,EAAAA,KACYY,SAAW6P,GAAAA,gBAAgBC,QACjDmU,EAAe5B,MACf,WAAExjB,EAAU,QAAED,EAAO,SAAEkQ,EAAQ,cAAEpQ,EAAa,gBAAEC,EAAe,WAAE+U,GAAeuQ,EAChF7F,EAAgC,QAAf1K,EAAAA,EAAWlQ,YAAXkQ,IAAAA,OAAAA,EAAAA,EAAiBjK,MAClCya,GAAoBpiB,EAAAA,EAAAA,UAAQ,K,IAEKsc,EAAwBA,EACiCtP,EAF9F,MAAO,CACLgJ,OAAOqM,EAAAA,GAAAA,GAA4B/F,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAgBnT,OAAQmT,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAgBxG,MAC3EwM,MAAO3M,OAAOC,SAAS2M,OAAS,qBAAuB3lB,EAAcY,cAAgB,MAAOwP,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkF,WAAW2O,EAAAA,GAAAA,GAAwBjkB,GAAiBE,GAC1Jmd,IAAKtE,OAAOC,SAAS3X,KACrB6T,YAAagO,GAAwB9S,EAAUnQ,GAChD,GACA,CAACC,EAASkQ,EAAUpQ,EAAeC,EAAiByf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAgBxG,KAAMwG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAgBnT,SACvFqZ,GAAWC,EAAAA,GAAAA,GAAmBL,GACpC,OAAO,UAACM,GAAAA,GAAaA,CAACC,QAAS5lB,QAAc,E,WAAQ,UAAC6lB,GAAAA,OAAMA,C,WAAC,SAAC5M,QAAAA,C,SAAO2J,GAAkBjjB,EAAGsQ,EAAUnQ,KAA0B2lB,EAAS5jB,KAAI,CAACikB,EAAKC,KAAU,SAACC,OAAAA,IAAqBF,GAAXC,QAChK9V,GACK,SAACgW,EAAAA,EAAWA,CAACb,aAAcA,E,UAAc,SAAC9F,GAAYA,CAAAA,KAE3DzK,EAAWrR,SACN,SAAC0iB,GAAAA,GAAwBA,CAAAA,IAEzB,SAACpE,GAAmBA,CAACC,YAAaA,EAAaC,mBAAmBnF,EAAAA,EAAAA,WAAU9c,OAGzF,C,kBC9JO,SAASulB,EAA4BlZ,EAAQ2M,GAClD,OAAI3M,EACK,OAASA,EAAS,cAEvB2M,EACK,OAASA,EAAO,cAElB,uBACT,CACO,SAASoN,EAA+BpN,EAAMqN,EAAgBC,GACnE,OAAItN,IAGAqN,GAAkBC,EACbD,EAAiB,KAAOC,EAE7BA,EACK,UAAYA,EAEd,sBACT,C","sources":["components/Icons/Sell.tsx","components/NavBar/MobileBottomBar/TDPActionTabs.tsx","graphql/data/pools/usePoolsFromTokenAddress.ts","components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable.tsx","graphql/data/useTokenTransactions.ts","components/Tokens/TokenDetails/tables/TransactionsTable.tsx","components/Tokens/TokenDetails/ActivitySection.tsx","components/Tokens/TokenDetails/BalanceSummary.tsx","components/Icons/Globe.tsx","components/Tokens/TokenDetails/TokenDescription.tsx","components/Tokens/TokenDetails/TokenDetailsHeader.tsx","components/Tokens/TokenDetails/index.tsx","utils/getInitialLogoURL.ts","assets/svg/eye.svg","components/Tokens/TokenDetails/InvalidTokenDetails.tsx","pages/TokenDetails/utils.ts","pages/TokenDetails/index.tsx","shared-cloud/metatags.ts"],"sourcesContent":["\"use strict\";\nexport function Sell(props) {\n  return <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    d=\"M1.28516 11.9999C1.28516 6.08243 6.08194 1.28564 11.9994 1.28564C17.9169 1.28564 22.7137 6.08243 22.7137 11.9999C22.7137 17.9174 17.9169 22.7142 11.9994 22.7142C6.08194 22.7142 1.28516 17.9174 1.28516 11.9999ZM10.9816 7.49994C10.9816 6.9378 11.4373 6.48209 11.9995 6.48209C12.5616 6.48209 13.0173 6.9378 13.0173 7.49994V14.0426L15.7798 11.2802C16.1772 10.8827 16.8217 10.8827 17.2192 11.2802C17.6167 11.6777 17.6167 12.3222 17.2192 12.7197L12.7192 17.2197C12.3217 17.6172 11.6772 17.6172 11.2798 17.2197L6.77975 12.7197C6.38225 12.3222 6.38225 11.6777 6.77975 11.2802C7.17725 10.8827 7.82172 10.8827 8.21922 11.2802L10.9816 14.0426V7.49994Z\"\n    fill={props.fill || \"white\"}\n  /></svg>;\n}\n","\"use strict\";\nimport { CreditCardIcon } from \"components/Icons/CreditCard\";\nimport { Sell } from \"components/Icons/Sell\";\nimport { Send } from \"components/Icons/Send\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Flex, styled, Text } from \"ui/src\";\nimport { getContrastPassingTextColor } from \"uniswap/src/utils/colors\";\nconst TDPActionPill = styled(Button, {\n  size: \"medium\",\n  borderRadius: 50,\n  flexGrow: 1,\n  fontSize: \"$medium\",\n  fontWeight: \"$large\",\n  height: 48,\n  hoverStyle: {\n    filter: \"brightness(0.85)\"\n  }\n});\nexport function TDPActionTabs() {\n  const { t } = useTranslation();\n  const { currencyChain, currencyChainId, address, tokenColor } = useTDPContext();\n  const switchChain = useSwitchChain();\n  const navigate = useNavigate();\n  const account = useAccount();\n  const chainUrlParam = currencyChain.toLowerCase();\n  const addressUrlParam = address === NATIVE_CHAIN_ID ? \"ETH\" : address;\n  const textColor = tokenColor && getContrastPassingTextColor(tokenColor);\n  const { xs } = useScreenSize();\n  const toActionLink = useCallback(\n    async (href) => {\n      if (account.chainId && account.chainId !== currencyChainId) {\n        await switchChain(currencyChainId);\n      }\n      navigate(href);\n    },\n    [account, currencyChainId, switchChain, navigate]\n  );\n  const tabs = [\n    {\n      label: t(\"common.buy.label\"),\n      href: `/swap/?chain=${chainUrlParam}&outputCurrency=${addressUrlParam}`,\n      icon: <CreditCardIcon fill=\"currentColor\" />\n    },\n    {\n      label: t(\"common.sell.label\"),\n      href: `/swap?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Sell fill=\"currentColor\" />\n    },\n    {\n      label: t(\"common.send.button\"),\n      href: `/send?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Send fill=\"currentColor\" />\n    }\n  ];\n  return <Flex row justifyContent=\"center\" gap=\"$spacing8\" width=\"100%\">{tabs.map((tab) => <TDPActionPill\n    key={tab.label}\n    onPress={() => toActionLink(tab.href)}\n    backgroundColor={tokenColor}\n    hoverStyle={{ backgroundColor: tokenColor }}\n    pressStyle={{ backgroundColor: tokenColor }}\n    color={textColor}\n  ><Text color={textColor}><Flex row gap=\"$spacing8\" alignItems=\"center\">{xs && tab.icon}{tab.label}</Flex></Text></TDPActionPill>)}</Flex>;\n}\n","\"use strict\";\nimport {\n  V2_BIPS,\n  calculate1DVolOverTvl,\n  calculateApr,\n  sortPools\n} from \"graphql/data/pools/useTopPools\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  useTopV2PairsQuery,\n  useTopV3PoolsQuery,\n  useTopV4PoolsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nconst DEFAULT_QUERY_SIZE = 20;\nexport function usePoolsFromTokenAddress(tokenAddress, sortState, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const chain = toGraphQLChain(chainId ?? defaultChainId);\n  const isV4DataEnabled = useFeatureFlag(FeatureFlags.V4Data);\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4,\n    fetchMore: fetchMoreV4\n  } = useTopV4PoolsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    },\n    skip: !isV4DataEnabled\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useTopV3PoolsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    }\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useTopV2PairsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    },\n    skip: !chainId\n  });\n  const loading = loadingV4 && isV4DataEnabled || loadingV3 || loadingV2;\n  const loadingMoreV4 = useRef(false);\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const sizeRef = useRef(DEFAULT_QUERY_SIZE);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV4.current && isV4DataEnabled || loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV4.current = true;\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      sizeRef.current += DEFAULT_QUERY_SIZE;\n      fetchMoreV4({\n        variables: {\n          cursor: dataV4?.topV4Pools?.[dataV4.topV4Pools.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV4Pools: [...(prev.topV4Pools ?? []).slice(), ...(fetchMoreResult.topV4Pools ?? []).slice()]\n          };\n          loadingMoreV4.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.topV3Pools?.[dataV3.topV3Pools.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            return prev;\n          }\n          if (!loadingMoreV2.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV3Pools: [...(prev.topV3Pools ?? []).slice(), ...(fetchMoreResult.topV3Pools ?? []).slice()]\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.topV2Pairs?.[dataV2.topV2Pairs.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV2Pairs: [...(prev.topV2Pairs ?? []).slice(), ...(fetchMoreResult.topV2Pairs ?? []).slice()]\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [\n      dataV2?.topV2Pairs,\n      dataV3?.topV3Pools,\n      dataV4?.topV4Pools,\n      fetchMoreV2,\n      fetchMoreV3,\n      fetchMoreV4,\n      isV4DataEnabled\n    ]\n  );\n  return useMemo(() => {\n    const topV4Pools = isV4DataEnabled ? dataV4?.topV4Pools?.map((pool) => {\n      return {\n        hash: pool.poolId,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, pool.feeTier),\n        feeTier: pool.feeTier,\n        protocolVersion: pool.protocolVersion,\n        hookAddress: pool.hook?.address\n      };\n    }) ?? [] : [];\n    const topV3Pools = dataV3?.topV3Pools?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, pool.feeTier),\n        feeTier: pool.feeTier,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const topV2Pairs = dataV2?.topV2Pairs?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, V2_BIPS),\n        feeTier: V2_BIPS,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const pools = sortPools([...topV4Pools, ...topV3Pools, ...topV2Pairs], sortState).slice(0, sizeRef.current);\n    return { loading, errorV2, errorV3, errorV4, pools, loadMore };\n  }, [\n    dataV2?.topV2Pairs,\n    dataV3?.topV3Pools,\n    dataV4?.topV4Pools,\n    errorV2,\n    errorV3,\n    errorV4,\n    loadMore,\n    loading,\n    sortState,\n    isV4DataEnabled\n  ]);\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { PoolsTable, sortAscendingAtom, sortMethodAtom } from \"components/Pools/PoolTable/PoolTable\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { usePoolsFromTokenAddress } from \"graphql/data/pools/usePoolsFromTokenAddress\";\nimport { PoolSortFields } from \"graphql/data/pools/useTopPools\";\nimport { OrderDirection } from \"graphql/data/util\";\nimport { useAtomValue, useResetAtom } from \"jotai/utils\";\nimport { useEffect, useMemo } from \"react\";\nconst HIDDEN_COLUMNS = [PoolSortFields.VolOverTvl];\nexport function TokenDetailsPoolsTable({\n  chainId,\n  referenceToken\n}) {\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const sortState = useMemo(\n    () => ({ sortBy: sortMethod, sortDirection: sortAscending ? OrderDirection.Asc : OrderDirection.Desc }),\n    [sortAscending, sortMethod]\n  );\n  const { pools, loading, errorV2, errorV3, loadMore } = usePoolsFromTokenAddress(\n    referenceToken.address,\n    sortState,\n    chainId\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Pools for token ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !pools.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const resetSortMethod = useResetAtom(sortMethodAtom);\n  const resetSortAscending = useResetAtom(sortAscendingAtom);\n  useEffect(() => {\n    resetSortMethod();\n    resetSortAscending();\n  }, [resetSortAscending, resetSortMethod]);\n  return <div data-testid={`tdp-pools-table-${referenceToken.address.toLowerCase()}`}><PoolsTable\n    pools={pools}\n    loading={allDataStillLoading}\n    error={combinedError}\n    maxHeight={600}\n    hiddenColumns={HIDDEN_COLUMNS}\n    loadMore={loadMore}\n  /></div>;\n}\n","\"use strict\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  Chain,\n  PoolTransactionType,\n  useV2TokenTransactionsQuery,\n  useV3TokenTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nexport var TokenTransactionType = /* @__PURE__ */ ((TokenTransactionType2) => {\n  TokenTransactionType2[\"BUY\"] = \"Buy\";\n  TokenTransactionType2[\"SELL\"] = \"Sell\";\n  return TokenTransactionType2;\n})(TokenTransactionType || {});\nconst TokenTransactionDefaultQuerySize = 25;\nexport function useTokenTransactions(address, chainId, filter = [\"Buy\" /* BUY */, \"Sell\" /* SELL */]) {\n  const { defaultChainId } = useEnabledChains();\n  const {\n    data: dataV3,\n    loading: loadingV3,\n    fetchMore: fetchMoreV3,\n    error: errorV3\n  } = useV3TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      chain: toGraphQLChain(chainId ?? defaultChainId),\n      first: TokenTransactionDefaultQuerySize\n    }\n  });\n  const {\n    data: dataV2,\n    loading: loadingV2,\n    error: errorV2,\n    fetchMore: fetchMoreV2\n  } = useV2TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      first: TokenTransactionDefaultQuerySize,\n      chain: toGraphQLChain(chainId)\n    }\n  });\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const querySizeRef = useRef(TokenTransactionDefaultQuerySize);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      querySizeRef.current += TokenTransactionDefaultQuerySize;\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.token?.v3Transactions?.[dataV3.token?.v3Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n          if (!loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v3Transactions: [...prev.token?.v3Transactions ?? [], ...fetchMoreResult.token?.v3Transactions ?? []]\n            }\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.token?.v2Transactions?.[dataV2.token?.v2Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n          if (!loadingMoreV3.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v2Transactions: [...prev.token?.v2Transactions ?? [], ...fetchMoreResult.token?.v2Transactions ?? []]\n            }\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [dataV2?.token?.v2Transactions, dataV3?.token?.v3Transactions, fetchMoreV2, fetchMoreV3]\n  );\n  const transactions = useMemo(\n    () => [\n      ...dataV3?.token?.v3Transactions?.filter((tx) => {\n        if (!tx) {\n          return false;\n        }\n        const tokenBeingSold = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n        const isSell = tokenBeingSold.address?.toLowerCase() === address.toLowerCase();\n        return tx.type === PoolTransactionType.Swap && filter.includes(isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */);\n      }) ?? [],\n      ...dataV2?.token?.v2Transactions?.filter((tx) => {\n        if (!tx) {\n          return false;\n        }\n        const tokenBeingSold = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n        const isSell = tokenBeingSold.address?.toLowerCase() === address.toLowerCase();\n        return tx.type === PoolTransactionType.Swap && filter.includes(isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */);\n      }) ?? []\n    ].sort(\n      (a, b) => a?.timestamp && b?.timestamp ? b.timestamp - a.timestamp : a?.timestamp === null ? -1 : 1\n    ).slice(0, querySizeRef.current),\n    [address, dataV2?.token?.v2Transactions, dataV3?.token?.v3Transactions, filter]\n  );\n  return useMemo(() => {\n    return {\n      transactions,\n      loading: loadingV3 || loadingV2,\n      loadMore,\n      errorV2,\n      errorV3\n    };\n  }, [transactions, loadingV3, loadingV2, loadMore, errorV2, errorV3]);\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport {\n  FilterHeaderRow,\n  HeaderArrow,\n  HeaderSortText,\n  StyledExternalLink,\n  TimestampCell,\n  TokenLinkCell\n} from \"components/Table/styled\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { TokenTransactionType, useTokenTransactions } from \"graphql/data/useTokenTransactions\";\nimport { OrderDirection, unwrapToken } from \"graphql/data/util\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { EllipsisTamaguiStyle } from \"theme/components\";\nimport { Flex, Text, styled } from \"ui/src\";\nimport { useAppFiatCurrency } from \"uniswap/src/features/fiatCurrency/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst StyledSwapAmount = styled(Text, {\n  display: \"inline-block\",\n  maxWidth: 75,\n  variant: \"body2\",\n  color: \"$neutral1\",\n  ...EllipsisTamaguiStyle\n});\nconst TableWrapper = styled(Flex, {\n  position: \"relative\",\n  minHeight: 158\n});\nexport function TransactionsTable({ chainId, referenceToken }) {\n  const activeLocalCurrency = useAppFiatCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([TokenTransactionType.BUY, TokenTransactionType.SELL]);\n  const { transactions, loading, loadMore, errorV2, errorV3 } = useTokenTransactions(\n    referenceToken.address,\n    chainId,\n    filter\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Transactions for token: ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !transactions.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const unwrappedReferenceToken = unwrapToken(chainId, referenceToken);\n  const data = useMemo(\n    () => transactions.map((transaction) => {\n      const swapLeg0 = {\n        address: transaction.token0.address,\n        symbol: transaction.token0.symbol,\n        amount: parseFloat(transaction.token0Quantity),\n        token: transaction.token0\n      };\n      const swapLeg1 = {\n        address: transaction.token1.address,\n        symbol: transaction.token1.symbol,\n        amount: parseFloat(transaction.token1Quantity),\n        token: transaction.token1\n      };\n      const token0IsBeingSold = parseFloat(transaction.token0Quantity) > 0;\n      return {\n        hash: transaction.hash,\n        timestamp: transaction.timestamp,\n        input: token0IsBeingSold ? swapLeg0 : swapLeg1,\n        output: token0IsBeingSold ? swapLeg1 : swapLeg0,\n        usdValue: transaction.usdValue.value,\n        makerAddress: transaction.account\n      };\n    }),\n    [transactions]\n  );\n  const showLoadingSkeleton = allDataStillLoading || !!combinedError;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        header: () => <Cell minWidth={120} justifyContent=\"flex-start\" grow><Flex row gap=\"$gap4\" alignItems=\"center\"><HeaderArrow direction={OrderDirection.Desc} /><HeaderSortText active><Trans i18nKey=\"common.time\" /></HeaderSortText></Flex></Cell>,\n        cell: (row) => <Cell loading={showLoadingSkeleton} minWidth={120} justifyContent=\"flex-start\" grow><TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chainId, row.getValue?.().hash, ExplorerDataType.TRANSACTION)}\n        /></Cell>\n      }),\n      columnHelper.accessor((row) => row.output.address, {\n        id: \"swap-type\",\n        header: () => <Cell minWidth={75} justifyContent=\"flex-start\" grow><FilterHeaderRow\n          clickable={filterModalIsOpen}\n          onPress={toggleFilterModal}\n          alignItems=\"center\"\n          ref={filterAnchorRef}\n        ><Filter\n          allFilters={Object.values(TokenTransactionType)}\n          activeFilter={filter}\n          setFilters={setFilters}\n          isOpen={filterModalIsOpen}\n          toggleFilterModal={toggleFilterModal}\n          anchorRef={filterAnchorRef}\n        /><Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.type.label\" /></Text></FilterHeaderRow></Cell>,\n        cell: (outputTokenAddress) => {\n          const isBuy = String(outputTokenAddress.getValue?.()).toLowerCase() === referenceToken.address.toLowerCase();\n          return <Cell loading={showLoadingSkeleton} minWidth={75} justifyContent=\"flex-start\" grow><Text variant=\"body2\" color={isBuy ? \"$statusSuccess\" : \"$statusCritical\"}>{isBuy ? <Trans i18nKey=\"common.buy.label\" /> : <Trans i18nKey=\"common.sell.label\" />}</Text></Cell>;\n        }\n      }),\n      columnHelper.accessor(\n        (row) => row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.input.amount : row.output.amount,\n        {\n          id: \"reference-amount\",\n          header: () => <Cell minWidth={100} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral2\">\n                ${unwrappedReferenceToken.symbol}</Text></Cell>,\n          cell: (inputTokenAmount) => <Cell loading={showLoadingSkeleton} minWidth={100} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral1\">{formatNumber({\n            input: Math.abs(inputTokenAmount.getValue?.()) || 0\n          })}</Text></Cell>\n        }\n      ),\n      columnHelper.accessor(\n        (row) => {\n          const nonReferenceSwapLeg = row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.output : row.input;\n          return <Flex row gap=\"$gap8\" justifyContent=\"flex-end\"><StyledSwapAmount>{formatNumber({\n            input: Math.abs(nonReferenceSwapLeg.amount) || 0\n          })}</StyledSwapAmount><TokenLinkCell token={nonReferenceSwapLeg.token} /></Flex>;\n        },\n        {\n          id: \"non-reference-amount\",\n          header: () => <Cell minWidth={160} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.for\" /></Text></Cell>,\n          cell: (swapOutput) => <Cell loading={showLoadingSkeleton} minWidth={160} justifyContent=\"flex-end\">{swapOutput.getValue?.()}</Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.usdValue, {\n        id: \"fiat-value\",\n        header: () => <Cell minWidth={125} justifyContent=\"flex-end\"><Flex row gap=\"$gap4\" justifyContent=\"flex-end\"><HeaderSortText>{activeLocalCurrency}</HeaderSortText></Flex></Cell>,\n        cell: (fiat) => <Cell loading={showLoadingSkeleton} minWidth={125} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral1\">{formatFiatPrice({ price: fiat.getValue?.() })}</Text></Cell>\n      }),\n      columnHelper.accessor((row) => row.makerAddress, {\n        id: \"maker-address\",\n        header: () => <Cell minWidth={150} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.wallet.label\" /></Text></Cell>,\n        cell: (makerAddress) => <Cell loading={showLoadingSkeleton} minWidth={150} justifyContent=\"flex-end\"><StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}>{shortenAddress(makerAddress.getValue?.())}</StyledExternalLink></Cell>\n      })\n    ];\n  }, [\n    showLoadingSkeleton,\n    chainId,\n    filterModalIsOpen,\n    filter,\n    referenceToken.address,\n    unwrappedReferenceToken.symbol,\n    formatNumber,\n    activeLocalCurrency,\n    formatFiatPrice\n  ]);\n  return <TableWrapper><Table\n    columns={columns}\n    data={data}\n    loading={allDataStillLoading}\n    error={combinedError}\n    loadMore={loadMore}\n    maxHeight={600}\n  /></TableWrapper>;\n}\n","\"use strict\";\nimport { TokenDetailsPoolsTable } from \"components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable\";\nimport { TransactionsTable } from \"components/Tokens/TokenDetails/tables/TransactionsTable\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, styled, Text } from \"ui/src\";\nconst Container = styled(Flex, {\n  width: \"100%\"\n});\nconst Tab = styled(Text, {\n  color: \"$neutral1\",\n  variant: \"heading3\",\n  ...ClickableTamaguiStyle\n});\nvar ActivityTab = /* @__PURE__ */ ((ActivityTab2) => {\n  ActivityTab2[ActivityTab2[\"Txs\"] = 0] = \"Txs\";\n  ActivityTab2[ActivityTab2[\"Pools\"] = 1] = \"Pools\";\n  return ActivityTab2;\n})(ActivityTab || {});\nexport function ActivitySection() {\n  const { wrapped: referenceToken, chainId } = useTDPContext().currency;\n  const [activityInView, setActivityInView] = useState(0 /* Txs */);\n  if (!referenceToken) {\n    return null;\n  }\n  return <Container data-testid=\"token-details-activity-section\"><Flex row gap=\"$spacing24\" mb=\"$spacing24\" id=\"activity-header\"><Tab\n    color={activityInView === 0 /* Txs */ ? \"$neutral1\" : \"$neutral2\"}\n    onPress={() => setActivityInView(0 /* Txs */)}\n  ><Trans i18nKey=\"common.transactions\" /></Tab><Tab\n    color={activityInView === 1 /* Pools */ ? \"$neutral1\" : \"$neutral2\"}\n    onPress={() => setActivityInView(1 /* Pools */)}\n  ><Trans i18nKey=\"common.pools\" /></Tab></Flex>{activityInView === 0 /* Txs */ && <TransactionsTable chainId={chainId} referenceToken={referenceToken} />}{activityInView === 1 /* Pools */ && <TokenDetailsPoolsTable chainId={chainId} referenceToken={referenceToken} />}</Container>;\n}\n","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { getTokenDetailsURL, gqlToCurrency, supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ThemedText } from \"theme/components\";\nimport { Chain } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst BalancesCard = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  height: fit-content;\n  width: 100%;\n\n  @media screen and (min-width: ${BREAKPOINTS.md}px) {\n    display: flex;\n  }\n`;\nconst BalanceSection = styled.div`\n  height: fit-content;\n  width: 100%;\n`;\nconst BalanceRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-top: 12px;\n`;\nconst BalanceItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BalanceAmountsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-left: 12px;\n  ${({ $alignLeft }) => $alignLeft && `\n    justify-content: start;\n    gap: 8px;\n  `}\n`;\nconst Balance = ({\n  currency,\n  chainId = UniverseChainId.Mainnet,\n  gqlBalance,\n  alignLeft = false,\n  onClick\n}) => {\n  const { formatNumber } = useFormatter();\n  const currencies = useMemo(() => [currency], [currency]);\n  const formattedGqlBalance = formatNumber({\n    input: gqlBalance?.quantity,\n    type: NumberType.TokenNonTx\n  });\n  const formattedUsdGqlValue = formatNumber({\n    input: gqlBalance?.denominatedValue?.value,\n    type: NumberType.PortfolioBalance\n  });\n  return <BalanceRow onClick={onClick}><PortfolioLogo\n    currencies={currencies}\n    chainId={chainId}\n    images={[gqlBalance?.token?.project?.logoUrl]}\n    size={32}\n  /><BalanceAmountsContainer $alignLeft={alignLeft}><BalanceItem><ThemedText.BodyPrimary>{formattedUsdGqlValue}</ThemedText.BodyPrimary></BalanceItem><BalanceItem><ThemedText.BodySecondary>{formattedGqlBalance}</ThemedText.BodySecondary></BalanceItem></BalanceAmountsContainer></BalanceRow>;\n};\nexport const PageChainBalanceSummary = ({\n  pageChainBalance,\n  alignLeft = false\n}) => {\n  if (!pageChainBalance || !pageChainBalance.token) {\n    return null;\n  }\n  const currency = gqlToCurrency(pageChainBalance.token);\n  return <BalanceSection><ThemedText.HeadlineSmall color=\"neutral1\"><Trans i18nKey=\"tdp.balanceSummary.title\" /></ThemedText.HeadlineSmall><Balance currency={currency} chainId={currency?.chainId} gqlBalance={pageChainBalance} alignLeft={alignLeft} /></BalanceSection>;\n};\nconst OtherChainsBalanceSummary = ({\n  otherChainBalances,\n  hasPageChainBalance\n}) => {\n  const navigate = useNavigate();\n  const { defaultChainId } = useEnabledChains();\n  if (!otherChainBalances.length) {\n    return null;\n  }\n  return <BalanceSection>{hasPageChainBalance ? <ThemedText.SubHeaderSmall><Trans i18nKey=\"tdp.balanceSummary.otherNetworks\">On other networks</Trans></ThemedText.SubHeaderSmall> : <ThemedText.HeadlineSmall><Trans i18nKey=\"tdp.balanceSummary.otherNetworksBalance\">Balance on other networks</Trans></ThemedText.HeadlineSmall>}{otherChainBalances.map((balance) => {\n    const currency = balance.token && gqlToCurrency(balance.token);\n    const chainId = (balance.token && supportedChainIdFromGQLChain(balance.token.chain)) ?? defaultChainId;\n    return <Balance\n      key={balance.id}\n      currency={currency}\n      chainId={chainId}\n      gqlBalance={balance}\n      onClick={() => navigate(\n        getTokenDetailsURL({\n          address: balance.token?.address,\n          chain: balance.token?.chain ?? Chain.Ethereum\n        })\n      )}\n    />;\n  })}</BalanceSection>;\n};\nexport default function BalanceSummary() {\n  const account = useAccount();\n  const { currencyChain, multiChainMap } = useTDPContext();\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const otherChainBalances = [];\n  for (const [key, value] of Object.entries(multiChainMap)) {\n    if (key !== currencyChain && value?.balance !== void 0) {\n      otherChainBalances.push(value.balance);\n    }\n  }\n  const hasBalances = pageChainBalance || Boolean(otherChainBalances.length);\n  if (!account.isConnected || !hasBalances) {\n    return null;\n  }\n  return <BalancesCard><PageChainBalanceSummary pageChainBalance={pageChainBalance} /><OtherChainsBalanceSummary otherChainBalances={otherChainBalances} hasPageChainBalance={!!pageChainBalance} /></BalancesCard>;\n}\n","\"use strict\";\nexport const Globe = (props) => <svg\n  width=\"18\"\n  height=\"18\"\n  viewBox=\"0 0 18 18\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  stroke=\"transparent\"\n  {...props}\n><path\n  d=\"M5.12245 9.5625C5.23495 11.8725 6.01495 14.2275 7.37245 16.32C4.19245 15.615 1.76996 12.8925 1.52246 9.5625H5.12245ZM7.37245 1.67999C4.19245 2.38499 1.76996 5.1075 1.52246 8.4375H5.12245C5.23495 6.1275 6.01495 3.77249 7.37245 1.67999ZM9.14997 1.5H8.84995L8.62496 1.82249C7.19996 3.84749 6.36745 6.1725 6.24745 8.4375H11.7525C11.6325 6.1725 10.8 3.84749 9.37496 1.82249L9.14997 1.5ZM6.24745 9.5625C6.36745 11.8275 7.19996 14.1525 8.62496 16.1775L8.84995 16.5H9.14997L9.37496 16.1775C10.8 14.1525 11.6325 11.8275 11.7525 9.5625H6.24745ZM12.8775 9.5625C12.765 11.8725 11.985 14.2275 10.6275 16.32C13.8075 15.615 16.23 12.8925 16.4775 9.5625H12.8775ZM16.4775 8.4375C16.23 5.1075 13.8075 2.38499 10.6275 1.67999C11.985 3.77249 12.765 6.1275 12.8775 8.4375H16.4775Z\"\n  fill={props.fill ?? \"#607BEE\"}\n/></svg>;\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport { FOTTooltipContent } from \"components/swap/SwapLineItem\";\nimport { NoInfoAvailable, truncateDescription } from \"components/Tokens/TokenDetails/shared\";\nimport Tooltip, { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useSwapTaxes } from \"hooks/useSwapTaxes\";\nimport { useTheme } from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useReducer } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ClickableTamaguiStyle, EllipsisTamaguiStyle, ExternalLink, ThemedText } from \"theme/components\";\nimport { Flex, Paragraph, styled, Text } from \"ui/src\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst TokenInfoSection = styled(Flex, {\n  gap: \"$gap16\",\n  width: \"100%\",\n  $xl: {\n    gap: 24\n  }\n});\nconst TokenNameRow = styled(Flex, {\n  row: true,\n  gap: \"$gap8\",\n  width: \"100%\"\n});\nconst TokenButtonRow = styled(TokenNameRow, {\n  flexWrap: \"wrap\"\n});\nconst TokenInfoButton = styled(Text, {\n  variant: \"buttonLabel3\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  gap: \"$gap4\",\n  py: \"$padding8\",\n  px: \"$padding12\",\n  borderRadius: \"$rounded20\",\n  backgroundColor: \"$surface2\",\n  width: \"max-content\",\n  ...ClickableTamaguiStyle,\n  color: \"$neutral1\"\n});\nconst TokenDescriptionContainer = styled(Text, {\n  variant: \"body1\",\n  color: \"$neutral1\",\n  maxWidth: \"100%\",\n  maxHeight: \"fit-content\",\n  ...EllipsisTamaguiStyle,\n  whiteSpace: \"pre-wrap\",\n  lineHeight: 24\n});\nconst DescriptionVisibilityWrapper = styled(Paragraph, {\n  fontWeight: \"$book\",\n  variants: {\n    visible: {\n      true: {\n        display: \"inline\"\n      },\n      false: {\n        display: \"none\"\n      }\n    }\n  }\n});\nconst TRUNCATE_CHARACTER_COUNT = 200;\nexport function TokenDescription() {\n  const { t } = useTranslation();\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { neutral1 } = useTheme();\n  const { description, homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const [isDescriptionTruncated, toggleIsDescriptionTruncated] = useReducer((x) => !x, true);\n  const truncatedDescription = truncateDescription(description ?? \"\", TRUNCATE_CHARACTER_COUNT);\n  const shouldTruncate = !!description && description.length > TRUNCATE_CHARACTER_COUNT;\n  const showTruncatedDescription = shouldTruncate && isDescriptionTruncated;\n  const { inputTax: sellFee, outputTax: buyFee } = useSwapTaxes(address, address, currency.chainId);\n  const { formatPercent } = useFormatter();\n  const { sellFeeString, buyFeeString } = {\n    sellFeeString: formatPercent(sellFee),\n    buyFeeString: formatPercent(buyFee)\n  };\n  const hasFee = Boolean(parseFloat(sellFeeString)) || Boolean(parseFloat(buyFee.toFixed(2)));\n  const sameFee = sellFeeString === buyFeeString;\n  return <TokenInfoSection data-testid=\"token-details-info-section\"><Text variant=\"heading3\"><Trans i18nKey=\"common.info.label\" /></Text><TokenButtonRow data-testid=\"token-details-info-links\">{!currency.isNative && <Tooltip placement=\"bottom\" size={TooltipSize.Max} show={isCopied} text={t(\"common.copied\")}><TokenInfoButton onPress={copy}><Copy width=\"18px\" height=\"18px\" color={neutral1} />{shortenAddress(currency.address)}</TokenInfoButton></Tooltip>}<ExternalLink href={explorerUrl}><TokenInfoButton><EtherscanLogo width=\"18px\" height=\"18px\" fill={neutral1} />{currency.chainId === UniverseChainId.Mainnet ? <Trans i18nKey=\"common.etherscan\" /> : <Trans i18nKey=\"common.explorer\" />}</TokenInfoButton></ExternalLink>{homepageUrl && <ExternalLink href={homepageUrl}><TokenInfoButton><Globe width=\"18px\" height=\"18px\" fill={neutral1} /><Trans i18nKey=\"common.website\" /></TokenInfoButton></ExternalLink>}{twitterName && <ExternalLink href={`https://x.com/${twitterName}`}><TokenInfoButton><TwitterXLogo width=\"18px\" height=\"18px\" fill={neutral1} /><Trans i18nKey=\"common.twitter\" /></TokenInfoButton></ExternalLink>}</TokenButtonRow><TokenDescriptionContainer>{!description && <NoInfoAvailable><Trans i18nKey=\"tdp.noInfoAvailable\" /></NoInfoAvailable>}{description && <><DescriptionVisibilityWrapper data-testid=\"token-description-full\" visible={!showTruncatedDescription}>{description}</DescriptionVisibilityWrapper><DescriptionVisibilityWrapper data-testid=\"token-description-truncated\" visible={showTruncatedDescription}>{truncatedDescription}</DescriptionVisibilityWrapper></>}{shouldTruncate && <Text\n    display=\"flex\"\n    color=\"neutral2\"\n    fontWeight=\"485\"\n    variant=\"body2\"\n    pt=\"0.5em\"\n    $sm={{ mb: \"2rem\" }}\n    onPress={toggleIsDescriptionTruncated}\n    {...ClickableTamaguiStyle}\n    data-testid=\"token-description-show-more-button\"\n  >{isDescriptionTruncated ? <Trans i18nKey=\"common.showMore.button\" /> : <Trans i18nKey=\"common.hide.button\" />}</Text>}</TokenDescriptionContainer>{hasFee && <MouseoverTooltip\n    placement=\"left\"\n    size={TooltipSize.Small}\n    text={<ThemedText.Caption color=\"neutral2\"><FOTTooltipContent /></ThemedText.Caption>}\n  ><Flex gap=\"$gap8\">{sameFee ? <ThemedText.BodyPrimary>{currency.symbol}&nbsp;\n                <Trans i18nKey=\"token.fee.label\" />\n                :&nbsp;{sellFeeString}</ThemedText.BodyPrimary> : <><ThemedText.BodyPrimary>{currency.symbol}&nbsp;\n                  <Trans i18nKey=\"token.fee.buy.label\" />\n                  :&nbsp;{buyFeeString}</ThemedText.BodyPrimary>{\" \"}<ThemedText.BodyPrimary>{currency.symbol}&nbsp;\n                  <Trans i18nKey=\"token.fee.sell.label\" />\n                  :&nbsp;{sellFeeString}</ThemedText.BodyPrimary>{\" \"}</>}</Flex></MouseoverTooltip>}</TokenInfoSection>;\n}\n","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { Share as ShareIcon } from \"components/Icons/Share\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport ShareButton, { openShareTweetWindow } from \"components/Tokens/TokenDetails/ShareButton\";\nimport { TokenNameCell } from \"components/Tokens/TokenDetails/Skeleton\";\nimport { ActionButtonStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo, useState } from \"react\";\nimport { Link, MoreHorizontal } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { EllipsisTamaguiStyle } from \"theme/components\";\nimport { Flex, Text, WebBottomSheet, useMedia, useSporeColors } from \"ui/src\";\nimport { Check } from \"ui/src/components/icons/Check\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nexport const TokenDetailsHeader = () => {\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const media = useMedia();\n  const isMobileScreen = media.sm;\n  const [mobileSheetOpen, toggleMobileSheet] = useState(false);\n  const tokenSymbolName = currency.symbol ?? t(\"tdp.symbolNotFound\");\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const { homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const twitterUrl = twitterName && `https://x.com/${twitterName}`;\n  const [searchParams] = useSearchParams();\n  const utmTag = `${searchParams.size > 0 ? \"&\" : \"?\"}utm_source=share-tdp&utm_medium=${isMobileWeb ? \"mobile\" : \"web\"}`;\n  const currentLocation = window.location.href + utmTag;\n  const twitterShareName = currency.name && currency.symbol ? `${currency.name} (${currency.symbol})` : currency?.name || currency?.symbol || \"\";\n  const [isCopied, setCopied] = useCopyClipboard();\n  const HeaderActions = useMemo(() => {\n    return [\n      {\n        title: t(\"common.explorer\"),\n        icon: currency.chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(explorerUrl, \"_blank\"),\n        show: !!explorerUrl\n      },\n      {\n        title: t(\"common.website\"),\n        icon: <Globe width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(homepageUrl, \"_blank\"),\n        show: !!homepageUrl\n      },\n      {\n        title: t(\"common.twitter\"),\n        icon: <TwitterXLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(twitterUrl, \"_blank\"),\n        show: !!twitterUrl\n      },\n      {\n        title: isCopied ? t(\"common.copied\") : t(\"common.copyLink.button\"),\n        icon: isCopied ? <Check size={16} p={1} color={colors.statusSuccess.val} /> : <Link size={18} color={colors.neutral1.val} />,\n        onPress: () => setCopied(currentLocation),\n        show: isMobileScreen\n      },\n      {\n        title: t(\"common.share.shareToTwitter\"),\n        icon: <ShareIcon fill={colors.neutral1.val} width={18} height={18} />,\n        onPress: () => openShareTweetWindow(twitterShareName),\n        show: isMobileScreen\n      }\n    ];\n  }, [\n    explorerUrl,\n    homepageUrl,\n    twitterUrl,\n    currency.chainId,\n    colors,\n    t,\n    isCopied,\n    setCopied,\n    currentLocation,\n    isMobileScreen,\n    twitterShareName\n  ]);\n  return <><TokenNameCell><PortfolioLogo currencies={[currency]} chainId={currency.chainId} size={32} /><Flex row gap=\"$gap8\" alignItems=\"center\" overflow=\"hidden\"><Text variant=\"heading3\" minWidth={40} {...EllipsisTamaguiStyle}>{currency.name ?? t(\"tdp.nameNotFound\")}</Text><Text variant=\"heading3\" textTransform=\"uppercase\" color=\"$neutral2\" $sm={{ display: \"none\" }}>{tokenSymbolName}</Text></Flex></TokenNameCell>{isMobileScreen ? <Flex><Text onPress={() => toggleMobileSheet(true)} {...ActionButtonStyle}><MoreHorizontal size={iconSizes.icon20} color={colors.neutral2.val} /></Text><WebBottomSheet isOpen={isMobileScreen && mobileSheetOpen} onClose={() => toggleMobileSheet(false)}><Flex gap=\"$spacing8\" mb=\"$spacing16\">{HeaderActions.map(\n    (action) => action.show && <Flex\n      row\n      key={action.title}\n      width=\"100%\"\n      gap=\"$spacing12\"\n      px=\"$spacing8\"\n      py={10}\n      alignItems=\"center\"\n      hoverStyle={{ backgroundColor: \"$surface3\" }}\n      cursor=\"pointer\"\n      borderRadius=\"$rounded8\"\n      onPress={() => {\n        toggleMobileSheet(false);\n        action.onPress();\n      }}\n    >{action.icon}<Text variant=\"body2\">{action.title}</Text></Flex>\n  )}</Flex></WebBottomSheet></Flex> : <Flex row gap=\"$gap8\" alignItems=\"center\">{HeaderActions.map(\n    (action) => action.show && <MouseoverTooltip key={action.title} text={action.title} placement=\"top\" size={TooltipSize.Max}><Text onPress={action.onPress} {...ActionButtonStyle}>{action.icon}</Text></MouseoverTooltip>\n  )}<ShareButton name={twitterShareName} utmSource=\"share-tdp\" /></Flex>}</>;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { MobileBottomBar, TDPActionTabs } from \"components/NavBar/MobileBottomBar\";\nimport TokenSafetyMessage from \"components/TokenSafety/DeprecatedTokenSafetyMessage\";\nimport { ActivitySection } from \"components/Tokens/TokenDetails/ActivitySection\";\nimport BalanceSummary, { PageChainBalanceSummary } from \"components/Tokens/TokenDetails/BalanceSummary\";\nimport ChartSection from \"components/Tokens/TokenDetails/ChartSection\";\nimport { LeftPanel, RightPanel, TokenDetailsLayout, TokenInfoContainer } from \"components/Tokens/TokenDetails/Skeleton\";\nimport StatsSection from \"components/Tokens/TokenDetails/StatsSection\";\nimport { TokenDescription } from \"components/Tokens/TokenDetails/TokenDescription\";\nimport { TokenDetailsHeader } from \"components/Tokens/TokenDetails/TokenDetailsHeader\";\nimport { Hr } from \"components/Tokens/TokenDetails/shared\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport { ScrollDirection, useScroll } from \"hooks/useScroll\";\nimport deprecatedStyled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Flex, useIsTouchDevice } from \"ui/src\";\nimport { getNativeAddress } from \"uniswap/src/constants/addresses\";\nimport { useUrlContext } from \"uniswap/src/contexts/UrlContext\";\nimport { isUniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { TokenWarningCard } from \"uniswap/src/features/tokens/TokenWarningCard\";\nimport TokenWarningModal from \"uniswap/src/features/tokens/TokenWarningModal\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { getInitialLogoUrl } from \"utils/getInitialLogoURL\";\nconst DividerLine = deprecatedStyled(Hr)`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    opacity: 0;\n    margin-bottom: 0;\n  }\n`;\nfunction TDPBreadcrumb() {\n  const { address, currency, currencyChain } = useTDPContext();\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to={`/explore/${currencyChain.toLowerCase()}`}><Trans i18nKey=\"common.explore\" /> <ChevronRight size={14} /></BreadcrumbNavLink><BreadcrumbNavLink to={`/explore/tokens/${currencyChain.toLowerCase()}`}><Trans i18nKey=\"common.tokens\" /> <ChevronRight size={14} /></BreadcrumbNavLink><CurrentPageBreadcrumb address={address} currency={currency} /></BreadcrumbNavContainer>;\n}\nfunction getCurrencyURLAddress(currency) {\n  if (!currency) {\n    return \"\";\n  }\n  if (currency.isToken) {\n    return currency.address;\n  }\n  return NATIVE_CHAIN_ID;\n}\nfunction useSwapInitialInputCurrency() {\n  const { currency } = useTDPContext();\n  const { useParsedQueryString } = useUrlContext();\n  const parsedQs = useParsedQueryString();\n  const inputTokenAddress = useMemo(() => {\n    return typeof parsedQs.inputCurrency === \"string\" ? parsedQs.inputCurrency : currency.isNative ? void 0 : getNativeAddress(currency.chainId);\n  }, [currency.chainId, currency.isNative, parsedQs.inputCurrency]);\n  return useCurrency(inputTokenAddress, currency.chainId);\n}\nfunction TDPSwapComponent() {\n  const { address, currency, currencyChainId, warning } = useTDPContext();\n  const tokenProtectionEnabled = useFeatureFlag(FeatureFlags.TokenProtection);\n  const navigate = useNavigate();\n  const currencyInfo = useCurrencyInfo(currencyId(currency));\n  const handleCurrencyChange = useCallback(\n    (tokens) => {\n      const inputCurrencyURLAddress = getCurrencyURLAddress(tokens.inputCurrency);\n      const outputCurrencyURLAddress = getCurrencyURLAddress(tokens.outputCurrency);\n      const inputEquivalent = addressesAreEquivalent(inputCurrencyURLAddress, address) && tokens.inputCurrency?.chainId === currencyChainId;\n      const outputEquivalent = addressesAreEquivalent(outputCurrencyURLAddress, address) && tokens.outputCurrency?.chainId === currencyChainId;\n      if (inputEquivalent || outputEquivalent) {\n        return;\n      }\n      const newDefaultToken = tokens.outputCurrency ?? tokens.inputCurrency;\n      if (!newDefaultToken) {\n        return;\n      }\n      const preloadedLogoSrc = getInitialLogoUrl(\n        newDefaultToken.wrapped.address,\n        newDefaultToken.chainId,\n        newDefaultToken.isNative\n      );\n      const url = getTokenDetailsURL({\n        // The function falls back to \"NATIVE\" if the address is null\n        address: newDefaultToken.isNative ? null : newDefaultToken.address,\n        chain: toGraphQLChain(isUniverseChainId(newDefaultToken.chainId) ? newDefaultToken.chainId : currencyChainId),\n        inputAddress: (\n          // If only one token was selected before we navigate, then it was the default token and it's being replaced.\n          // On the new page, the *new* default token becomes the output, and we don't have another option to set as the input token.\n          tokens.inputCurrency && tokens.inputCurrency !== newDefaultToken ? inputCurrencyURLAddress : null\n        )\n      });\n      navigate(url, { state: { preloadedLogoSrc } });\n    },\n    [address, currencyChainId, navigate]\n  );\n  const initialInputCurrency = useSwapInitialInputCurrency();\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const closeWarningModal = useCallback(() => setShowWarningModal(false), []);\n  return <Flex gap=\"$gap12\"><Swap\n    syncTabToUrl={false}\n    chainId={currency.chainId}\n    initialInputCurrency={initialInputCurrency}\n    initialOutputCurrency={currency}\n    onCurrencyChange={handleCurrencyChange}\n    compact\n  />{tokenProtectionEnabled ? <><TokenWarningCard currencyInfo={currencyInfo} onPress={() => setShowWarningModal(true)} />{currencyInfo && // Intentionally duplicative with the TokenWarningModal in the swap component; this one only displays when user clicks \"i\" Info button on the TokenWarningCard\n  <TokenWarningModal\n    currencyInfo0={currencyInfo}\n    isInfoOnlyWarning\n    isVisible={showWarningModal}\n    closeModalOnly={closeWarningModal}\n    onAcknowledge={closeWarningModal}\n  />}</> : warning && <TokenSafetyMessage tokenAddress={address} warning={warning} />}</Flex>;\n}\nfunction TDPAnalytics({ children }) {\n  const { address, currency } = useTDPContext();\n  return <Trace\n    logImpression\n    page={InterfacePageName.TOKEN_DETAILS_PAGE}\n    properties={{\n      tokenAddress: address,\n      tokenSymbol: currency.symbol,\n      tokenName: currency.name,\n      chainId: currency.chainId\n    }}\n  >{children}</Trace>;\n}\nexport default function TokenDetails() {\n  const { address, currency, tokenQuery, currencyChain, multiChainMap } = useTDPContext();\n  const tokenQueryData = tokenQuery.data?.token;\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const { lg: showRightPanel } = useScreenSize();\n  const { direction: scrollDirection } = useScroll();\n  const isTouchDevice = useIsTouchDevice();\n  return <TDPAnalytics><TokenDetailsLayout><LeftPanel><TDPBreadcrumb /><TokenInfoContainer data-testid=\"token-info-container\"><TokenDetailsHeader /></TokenInfoContainer><ChartSection />{!showRightPanel && !!pageChainBalance && <Flex mt=\"$spacing40\"><PageChainBalanceSummary pageChainBalance={pageChainBalance} alignLeft /></Flex>}<StatsSection chainId={currency.chainId} address={address} tokenQueryData={tokenQueryData} /><DividerLine /><ActivitySection /></LeftPanel><RightPanel>{showRightPanel && <><TDPSwapComponent /><BalanceSummary /></>}<TokenDescription /></RightPanel><MobileBottomBar hide={isTouchDevice && scrollDirection === ScrollDirection.DOWN}>{\n    /* TODO(WEB-4800): data-testid is not passed to ui/src elements when animation is set */\n  }{\n    /* Remove this extra div when WEB-4800 is fixed */\n  }<div data-testid=\"tdp-mobile-bottom-bar\"><TDPActionTabs /></div></MobileBottomBar></TokenDetailsLayout></TDPAnalytics>;\n}\n","\"use strict\";\nimport { CELO_LOGO } from \"ui/src/assets\";\nimport { isCelo, nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { isUniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { isAddress } from \"utilities/src/addresses\";\nexport function getInitialLogoUrl(address, chainId, isNative, backupImg) {\n  const networkName = isUniverseChainId(chainId) ? getChainInfo(chainId).assetRepoNetworkName ?? \"ethereum\" : \"ethereum\";\n  const checksummedAddress = isAddress(address);\n  if (chainId && isCelo(chainId) && address === nativeOnChain(chainId).wrapped.address) {\n    return CELO_LOGO;\n  }\n  if (checksummedAddress) {\n    return `https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/${networkName}/assets/${checksummedAddress}/logo.png`;\n  } else {\n    return backupImg ?? void 0;\n  }\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgEye(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.75 12C14.75 13.517 13.517 14.75 12 14.75C10.483 14.75 9.25004 13.517 9.25004 12C9.25004 11.651 9.32196 11.32 9.44096 11.012C9.63496 11.166 9.86903 11.272 10.136 11.272C10.763 11.272 11.272 10.763 11.272 10.136C11.272 9.86899 11.166 9.63492 11.012 9.44092C11.32 9.32192 11.651 9.25 12 9.25C13.517 9.25 14.75 10.483 14.75 12ZM20.5921 13.4771C19.3651 15.5311 16.609 19 12 19C7.39104 19 4.635 15.5311 3.408 13.4771C2.864 12.5671 2.864 11.4329 3.408 10.5229C4.635 8.46895 7.39104 5 12 5C16.609 5 19.3651 8.46895 20.5921 10.5229C21.1361 11.4329 21.1361 12.5671 20.5921 13.4771ZM16.25 12C16.25 9.657 14.344 7.75 12 7.75C9.65604 7.75 7.75004 9.657 7.75004 12C7.75004 14.343 9.65604 16.25 12 16.25C14.344 16.25 16.25 14.343 16.25 12Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.0b7e1ea0bf8a719e75d97cfc5cd4e72d.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\nimport { ReactComponent as EyeIcon } from \"assets/svg/eye.svg\";\nimport { ButtonPrimary } from \"components/Button/buttons\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { getChainLabel } from \"uniswap/src/features/chains/utils\";\nconst InvalidDetailsContainer = styled.div`\n  padding-top: 128px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst InvalidDetailsText = styled.span`\n  margin-top: 28px;\n  margin-bottom: 20px;\n\n  text-align: center;\n\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 20px;\n  font-weight: 535;\n  line-height: 28px;\n`;\nconst TokenExploreButton = styled(ButtonPrimary)`\n  width: fit-content;\n  padding: 12px 16px;\n  border-radius: 12px;\n\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 16px;\n  font-weight: 535;\n`;\nexport default function InvalidTokenDetails({\n  pageChainId,\n  isInvalidAddress\n}) {\n  const { chainId } = useAccount();\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  const pageChainIsSupported = useIsSupportedChainId(pageChainId);\n  const navigate = useNavigate();\n  const selectChain = useSelectChain();\n  const isNonExistentToken = !isInvalidAddress && pageChainId === chainId;\n  const connectedChainLabel = isSupportedChain ? getChainLabel(chainId) : void 0;\n  return <InvalidDetailsContainer><EyeIcon />{isInvalidAddress || isNonExistentToken ? <><InvalidDetailsText><Trans i18nKey=\"tdp.invalidTokenPage.title\" /></InvalidDetailsText><TokenExploreButton onClick={() => navigate(\"/tokens\")}><ThemedText.SubHeader><Trans i18nKey=\"common.exploreTokens\" /></ThemedText.SubHeader></TokenExploreButton></> : <>{connectedChainLabel && <InvalidDetailsText><Trans i18nKey=\"tdp.invalidTokenPage.titleWithChain\" values={{ network: connectedChainLabel }} /></InvalidDetailsText>}<TokenExploreButton onClick={() => selectChain(pageChainId)}><ThemedText.SubHeader><Trans\n    i18nKey=\"tdp.invalidTokenPage.switchChainPrompt\"\n    values={{ network: pageChainIsSupported ? getChainLabel(pageChainId) : \"\" }}\n  /></ThemedText.SubHeader></TokenExploreButton></>}</InvalidDetailsContainer>;\n}\n","\"use strict\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { getChainLabel } from \"uniswap/src/features/chains/utils\";\nexport function getTokenPageTitle(t, currency, chainId) {\n  const tokenName = currency?.name;\n  const tokenSymbol = currency?.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!tokenName && !tokenSymbol) {\n    return baseTitle;\n  }\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${getChainLabel(chainId)}` : \"\";\n  if (!tokenName && tokenSymbol) {\n    return `${tokenSymbol}${chainSuffix}: ${baseTitle}`;\n  }\n  if (tokenName && !tokenSymbol) {\n    return `${tokenName}${chainSuffix}: ${baseTitle}`;\n  }\n  return `${tokenName} (${tokenSymbol})${chainSuffix}: ${baseTitle}`;\n}\nexport const getTokenPageDescription = (currency, chainId) => {\n  const tokenPageName = currency?.name && currency?.symbol ? `${currency?.name} (${currency?.symbol})` : currency?.name ?? currency?.symbol ?? \"tokens\";\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${getChainLabel(chainId)}` : \"\";\n  return `Buy, sell, and swap ${tokenPageName}${chainSuffix}. Real-time prices, charts, transaction data, and more.`;\n};\n","\"use strict\";\nimport TokenDetails from \"components/Tokens/TokenDetails\";\nimport { useCreateTDPChartState } from \"components/Tokens/TokenDetails/ChartSection\";\nimport InvalidTokenDetails from \"components/Tokens/TokenDetails/InvalidTokenDetails\";\nimport { TokenDetailsPageSkeleton } from \"components/Tokens/TokenDetails/Skeleton\";\nimport { useTokenWarning } from \"constants/deprecatedTokenSafety\";\nimport { NATIVE_CHAIN_ID, UNKNOWN_TOKEN_SYMBOL } from \"constants/tokens\";\nimport { useTokenBalancesQuery } from \"graphql/data/apollo/AdaptiveTokenBalancesProvider\";\nimport { gqlToCurrency } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSrcColor } from \"hooks/useColor\";\nimport { useTheme } from \"lib/styled-components\";\nimport { TDPProvider } from \"pages/TokenDetails/TDPContext\";\nimport { getTokenPageDescription, getTokenPageTitle } from \"pages/TokenDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useMemo } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { formatTokenMetatagTitleName } from \"shared-cloud/metatags\";\nimport { ThemeProvider } from \"theme\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useTokenWebQuery } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { isAddress } from \"utilities/src/addresses\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { getNativeTokenDBAddress } from \"utils/nativeTokens\";\nfunction useOnChainToken(address, chainId, skip) {\n  const token = useCurrency(!skip ? address : void 0, chainId);\n  if (skip || !address || token && token?.symbol === UNKNOWN_TOKEN_SYMBOL) {\n    return void 0;\n  } else {\n    return token;\n  }\n}\nfunction useTDPCurrency(tokenQuery, tokenAddress, currencyChainId, isNative) {\n  const { chainId } = useAccount();\n  const appChainId = chainId ?? UniverseChainId.Mainnet;\n  const queryCurrency = useMemo(() => {\n    if (isNative) {\n      return nativeOnChain(currencyChainId);\n    }\n    if (tokenQuery.data?.token) {\n      return gqlToCurrency(tokenQuery.data.token);\n    }\n    return void 0;\n  }, [isNative, currencyChainId, tokenQuery.data?.token]);\n  const skipOnChainFetch = Boolean(queryCurrency) || currencyChainId !== appChainId;\n  const onChainToken = useOnChainToken(tokenAddress, currencyChainId, skipOnChainFetch);\n  const currency = queryCurrency ?? onChainToken;\n  const currencyWasFetchedOnChain = !queryCurrency;\n  return { currency, currencyWasFetchedOnChain };\n}\nfunction useMultiChainMap(tokenQuery) {\n  const { data: balanceQuery } = useTokenBalancesQuery();\n  return useMemo(() => {\n    const tokenBalances = balanceQuery?.portfolios?.[0]?.tokenBalances;\n    const tokensAcrossChains = tokenQuery.data?.token?.project?.tokens;\n    if (!tokensAcrossChains) {\n      return {};\n    }\n    return tokensAcrossChains.reduce((map, current) => {\n      if (current) {\n        if (!map[current.chain]) {\n          map[current.chain] = {};\n        }\n        const update = map[current.chain] ?? {};\n        update.address = current.address;\n        update.balance = tokenBalances?.find((tokenBalance) => tokenBalance?.token?.id === current.id);\n        map[current.chain] = update;\n      }\n      return map;\n    }, {});\n  }, [balanceQuery?.portfolios, tokenQuery.data?.token?.project?.tokens]);\n}\nfunction useCreateTDPContext() {\n  const { tokenAddress } = useParams();\n  if (!tokenAddress) {\n    throw new Error(\"Invalid token details route: token address URL param is undefined\");\n  }\n  const currencyChainInfo = getChainInfo(useChainIdFromUrlParam() ?? UniverseChainId.Mainnet);\n  const isNative = tokenAddress === NATIVE_CHAIN_ID;\n  const tokenDBAddress = isNative ? getNativeTokenDBAddress(currencyChainInfo.backendChain.chain) : tokenAddress;\n  const tokenQuery = useTokenWebQuery({\n    variables: { address: tokenDBAddress, chain: currencyChainInfo.backendChain.chain },\n    errorPolicy: \"all\"\n  });\n  const chartState = useCreateTDPChartState(tokenDBAddress, currencyChainInfo.backendChain.chain);\n  const multiChainMap = useMultiChainMap(tokenQuery);\n  const { currency, currencyWasFetchedOnChain } = useTDPCurrency(\n    tokenQuery,\n    tokenAddress,\n    currencyChainInfo.id,\n    isNative\n  );\n  const warning = useTokenWarning(tokenAddress, currencyChainInfo.id);\n  const theme = useTheme();\n  const { preloadedLogoSrc } = useLocation().state ?? {};\n  const extractedColorSrc = tokenQuery.data?.token?.project?.logoUrl ?? preloadedLogoSrc;\n  const tokenColor = useSrcColor(\n    extractedColorSrc,\n    tokenQuery.data?.token?.name ?? tokenQuery.data?.token?.project?.name,\n    theme.surface2\n  ).tokenColor ?? void 0;\n  return useMemo(() => {\n    return {\n      currency,\n      currencyChain: currencyChainInfo.backendChain.chain,\n      currencyChainId: currencyChainInfo.id,\n      // `currency.address` is checksummed, whereas the `tokenAddress` url param may not be\n      address: (currency?.isNative ? NATIVE_CHAIN_ID : currency?.address) ?? tokenAddress,\n      currencyWasFetchedOnChain,\n      tokenQuery,\n      chartState,\n      warning,\n      multiChainMap,\n      tokenColor\n    };\n  }, [\n    currency,\n    currencyChainInfo.backendChain.chain,\n    currencyChainInfo.id,\n    tokenAddress,\n    currencyWasFetchedOnChain,\n    tokenQuery,\n    chartState,\n    warning,\n    multiChainMap,\n    tokenColor\n  ]);\n}\nexport default function TokenDetailsPage() {\n  const { t } = useTranslation();\n  const account = useAccount();\n  const pageChainId = account.chainId ?? UniverseChainId.Mainnet;\n  const contextValue = useCreateTDPContext();\n  const { tokenColor, address, currency, currencyChain, currencyChainId, tokenQuery } = contextValue;\n  const tokenQueryData = tokenQuery.data?.token;\n  const metatagProperties = useMemo(() => {\n    return {\n      title: formatTokenMetatagTitleName(tokenQueryData?.symbol, tokenQueryData?.name),\n      image: window.location.origin + \"/api/image/tokens/\" + currencyChain.toLowerCase() + \"/\" + (currency?.isNative ? getNativeTokenDBAddress(currencyChain) : address),\n      url: window.location.href,\n      description: getTokenPageDescription(currency, currencyChainId)\n    };\n  }, [address, currency, currencyChain, currencyChainId, tokenQueryData?.name, tokenQueryData?.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  return <ThemeProvider accent1={tokenColor ?? void 0}><Helmet><title>{getTokenPageTitle(t, currency, currencyChainId)}</title>{metatags.map((tag, index) => <meta key={index} {...tag} />)}</Helmet>{(() => {\n    if (currency) {\n      return <TDPProvider contextValue={contextValue}><TokenDetails /></TDPProvider>;\n    }\n    if (tokenQuery.loading) {\n      return <TokenDetailsPageSkeleton />;\n    } else {\n      return <InvalidTokenDetails pageChainId={pageChainId} isInvalidAddress={!isAddress(address)} />;\n    }\n  })()}</ThemeProvider>;\n}\n","\"use strict\";\nexport function formatTokenMetatagTitleName(symbol, name) {\n  if (symbol) {\n    return \"Get \" + symbol + \" on Uniswap\";\n  }\n  if (name) {\n    return \"Get \" + name + \" on Uniswap\";\n  }\n  return \"View Token on Uniswap\";\n}\nexport function formatNFTAssetMetatagTitleName(name, collectionName, tokenId) {\n  if (name) {\n    return name;\n  }\n  if (collectionName && tokenId) {\n    return collectionName + \" #\" + tokenId;\n  }\n  if (tokenId) {\n    return \"Asset #\" + tokenId;\n  }\n  return \"View NFT on Uniswap\";\n}\n"],"names":["Sell","props","svg","width","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","TDPActionPill","styled","Button","size","borderRadius","flexGrow","fontSize","fontWeight","hoverStyle","filter","TDPActionTabs","t","useTranslation","currencyChain","currencyChainId","address","tokenColor","useTDPContext","switchChain","useSwitchChain","navigate","useNavigate","account","useAccount","chainUrlParam","toLowerCase","addressUrlParam","NATIVE_CHAIN_ID","textColor","getContrastPassingTextColor","xs","useScreenSize","toActionLink","useCallback","href","chainId","tabs","label","icon","CreditCardIcon","Send","Flex","row","justifyContent","gap","map","tab","onPress","backgroundColor","pressStyle","color","Text","alignItems","DEFAULT_QUERY_SIZE","HIDDEN_COLUMNS","PoolSortFields","VolOverTvl","TokenDetailsPoolsTable","referenceToken","sortMethod","useAtomValue","sortMethodAtom","sortAscending","sortAscendingAtom","sortState","useMemo","sortBy","sortDirection","OrderDirection","Asc","Desc","pools","loading","errorV2","errorV3","loadMore","tokenAddress","dataV2","dataV3","dataV4","defaultChainId","useEnabledChains","chain","toGraphQLChain","isV4DataEnabled","useFeatureFlag","FeatureFlags","V4Data","loadingV4","error","errorV4","data","fetchMore","fetchMoreV4","useTopV4PoolsQuery","variables","first","skip","loadingV3","fetchMoreV3","useTopV3PoolsQuery","loadingV2","fetchMoreV2","useTopV2PairsQuery","loadingMoreV4","useRef","loadingMoreV3","loadingMoreV2","sizeRef","onComplete","current","cursor","topV4Pools","length","totalLiquidity","value","updateQuery","prev","fetchMoreResult","Object","keys","mergedData","slice","topV3Pools","topV2Pairs","pool","hash","poolId","token0","token1","tvl","volume24h","volume30d","volOverTvl","calculate1DVolOverTvl","apr","calculateApr","feeTier","protocolVersion","hookAddress","hook","V2_BIPS","sortPools","usePoolsFromTokenAddress","combinedError","ApolloError","errorMessage","allDataStillLoading","useUpdateManualOutage","resetSortMethod","useResetAtom","resetSortAscending","useEffect","div","data-testid","PoolsTable","maxHeight","hiddenColumns","TokenTransactionType","TokenTransactionType2","TokenTransactionDefaultQuerySize","StyledSwapAmount","display","maxWidth","variant","EllipsisTamaguiStyle","TableWrapper","position","minHeight","TransactionsTable","activeLocalCurrency","useAppFiatCurrency","formatNumber","formatFiatPrice","useFormatter","filterModalIsOpen","toggleFilterModal","useReducer","s","filterAnchorRef","setFilters","useState","BUY","SELL","transactions","useV3TokenTransactionsQuery","useV2TokenTransactionsQuery","querySizeRef","token","v3Transactions","timestamp","id","Chain","Ethereum","v2Transactions","tx","tokenBeingSold","isSell","parseFloat","token0Quantity","type","PoolTransactionType","Swap","includes","sort","a","b","useTokenTransactions","unwrappedReferenceToken","unwrapToken","transaction","swapLeg0","symbol","amount","swapLeg1","token1Quantity","token0IsBeingSold","input","output","usdValue","makerAddress","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","header","Cell","minWidth","grow","HeaderArrow","direction","HeaderSortText","active","Trans","i18nKey","cell","TimestampCell","Number","getValue","link","getExplorerLink","ExplorerDataType","TRANSACTION","FilterHeaderRow","clickable","ref","Filter","allFilters","values","activeFilter","isOpen","anchorRef","outputTokenAddress","isBuy","String","inputTokenAmount","Math","abs","nonReferenceSwapLeg","TokenLinkCell","swapOutput","fiat","price","StyledExternalLink","ADDRESS","shortenAddress","Table","Container","Tab","ClickableTamaguiStyle","ActivitySection","wrapped","currency","activityInView","setActivityInView","mb","BalancesCard","theme","neutral1","BREAKPOINTS","md","BalanceSection","BalanceRow","BalanceItem","BalanceAmountsContainer","$alignLeft","Balance","UniverseChainId","Mainnet","gqlBalance","alignLeft","onClick","currencies","formattedGqlBalance","quantity","NumberType","TokenNonTx","formattedUsdGqlValue","denominatedValue","PortfolioBalance","PortfolioLogo","images","project","logoUrl","ThemedText","BodyPrimary","BodySecondary","PageChainBalanceSummary","pageChainBalance","gqlToCurrency","HeadlineSmall","OtherChainsBalanceSummary","otherChainBalances","hasPageChainBalance","SubHeaderSmall","balance","supportedChainIdFromGQLChain","getTokenDetailsURL","BalanceSummary","multiChainMap","key","entries","push","hasBalances","Boolean","isConnected","Globe","stroke","TokenInfoSection","$xl","TokenNameRow","TokenButtonRow","flexWrap","TokenInfoButton","flexDirection","py","px","TokenDescriptionContainer","whiteSpace","lineHeight","DescriptionVisibilityWrapper","Paragraph","variants","visible","true","false","TRUNCATE_CHARACTER_COUNT","TokenDescription","tokenQuery","useTheme","description","homepageUrl","twitterName","explorerUrl","isNative","NATIVE","TOKEN","isCopied","setCopied","useCopyClipboard","copy","isDescriptionTruncated","toggleIsDescriptionTruncated","x","truncatedDescription","truncateDescription","shouldTruncate","showTruncatedDescription","inputTax","sellFee","outputTax","buyFee","useSwapTaxes","formatPercent","sellFeeString","buyFeeString","hasFee","toFixed","sameFee","Tooltip","placement","TooltipSize","Max","show","text","Copy","ExternalLink","EtherscanLogo","TwitterXLogo","NoInfoAvailable","pt","$sm","MouseoverTooltip","Small","Caption","FOTTooltipContent","TokenDetailsHeader","colors","useSporeColors","isMobileScreen","useMedia","sm","mobileSheetOpen","toggleMobileSheet","tokenSymbolName","twitterUrl","searchParams","useSearchParams","utmTag","isMobileWeb","currentLocation","window","location","twitterShareName","name","HeaderActions","title","val","ExplorerIcon","open","Check","p","statusSuccess","Link","ShareIcon","openShareTweetWindow","TokenNameCell","overflow","textTransform","ActionButtonStyle","MoreHorizontal","iconSizes","icon20","neutral2","WebBottomSheet","onClose","action","ShareButton","utmSource","DividerLine","deprecatedStyled","Hr","breakpoint","TDPBreadcrumb","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","CurrentPageBreadcrumb","getCurrencyURLAddress","isToken","TDPSwapComponent","warning","tokenProtectionEnabled","TokenProtection","currencyInfo","useCurrencyInfo","currencyId","handleCurrencyChange","tokens","inputCurrencyURLAddress","inputCurrency","outputCurrencyURLAddress","outputCurrency","inputEquivalent","addressesAreEquivalent","outputEquivalent","newDefaultToken","preloadedLogoSrc","backupImg","networkName","isUniverseChainId","getChainInfo","assetRepoNetworkName","checksummedAddress","isAddress","isCelo","nativeOnChain","CELO_LOGO","getInitialLogoUrl","url","inputAddress","state","initialInputCurrency","useParsedQueryString","useUrlContext","parsedQs","inputTokenAddress","getNativeAddress","useCurrency","useSwapInitialInputCurrency","showWarningModal","setShowWarningModal","closeWarningModal","syncTabToUrl","initialOutputCurrency","onCurrencyChange","compact","TokenWarningCard","TokenWarningModal","currencyInfo0","isInfoOnlyWarning","isVisible","closeModalOnly","onAcknowledge","TokenSafetyMessage","TDPAnalytics","children","Trace","logImpression","page","InterfacePageName","TOKEN_DETAILS_PAGE","properties","tokenSymbol","tokenName","TokenDetails","tokenQueryData","lg","showRightPanel","scrollDirection","useScroll","isTouchDevice","useIsTouchDevice","TokenDetailsLayout","LeftPanel","TokenInfoContainer","ChartSection","mt","StatsSection","RightPanel","MobileBottomBar","hide","ScrollDirection","DOWN","_path","_extends","assign","bind","n","e","arguments","r","hasOwnProperty","call","apply","SvgEye","_ref","svgRef","titleId","ForwardRef","InvalidDetailsContainer","InvalidDetailsText","span","TokenExploreButton","ButtonPrimary","InvalidTokenDetails","pageChainId","isInvalidAddress","isSupportedChain","useIsSupportedChainId","pageChainIsSupported","selectChain","useSelectChain","isNonExistentToken","connectedChainLabel","getChainLabel","EyeIcon","SubHeader","network","getTokenPageTitle","baseTitle","chainSuffix","getTokenPageDescription","useTDPCurrency","appChainId","queryCurrency","skipOnChainFetch","onChainToken","UNKNOWN_TOKEN_SYMBOL","useOnChainToken","currencyWasFetchedOnChain","useCreateTDPContext","useParams","Error","currencyChainInfo","useChainIdFromUrlParam","tokenDBAddress","getNativeTokenDBAddress","backendChain","useTokenWebQuery","errorPolicy","chartState","useCreateTDPChartState","balanceQuery","useTokenBalancesQuery","tokenBalances","portfolios","tokensAcrossChains","reduce","update","find","tokenBalance","useMultiChainMap","useTokenWarning","useLocation","extractedColorSrc","useSrcColor","surface2","TokenDetailsPage","contextValue","metatagProperties","formatTokenMetatagTitleName","image","origin","metatags","useDynamicMetatags","ThemeProvider","accent1","Helmet","tag","index","meta","TDPProvider","TokenDetailsPageSkeleton","formatNFTAssetMetatagTitleName","collectionName","tokenId"],"sourceRoot":""}