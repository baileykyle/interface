{"version":3,"file":"static/js/9359.1e3149b5.chunk.js","mappings":"6KAAA,SAASA,IAAW,OAAOA,EAASC,OAAOC,QAAQ,SAASC,GAAQ,IAAI,IAAIC,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAI,CAAC,IAAIG,EAAOF,UAAUD,GAAG,IAAI,IAAII,KAAOD,EAAON,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,EAAEH,EAASY,MAAMC,KAAKR,UAAU,CAAC,SAASS,EAAyBP,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAyU,SAAuCI,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAO,CAAC,EAAEa,EAAWf,OAAOgB,KAAKV,GAAQ,IAAIH,EAAE,EAAEA,EAAEY,EAAWV,OAAOF,IAAII,EAAIQ,EAAWZ,GAAGW,EAASG,QAAQV,IAAM,IAAIL,EAAOK,GAAKD,EAAOC,IAAM,OAAOL,CAAM,CAAzjBgB,CAA8BZ,EAAOQ,GAAU,GAAGd,OAAOmB,sBAAsB,CAAC,IAAIC,EAAiBpB,OAAOmB,sBAAsBb,GAAQ,IAAIH,EAAE,EAAEA,EAAEiB,EAAiBf,OAAOF,IAAII,EAAIa,EAAiBjB,GAAGW,EAASG,QAAQV,IAAM,GAAGP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,CAAgU,IAAIoB,GAAU,IAAAC,aAAW,SAAUC,EAAKC,GAAK,IAAIC,EAAWF,EAAKG,MAAMA,OAAM,IAASD,EAAW,eAAeA,EAAWE,EAAUJ,EAAKK,KAAKA,OAAK,IAASD,EAAU,GAAGA,EAAUE,EAAKjB,EAAyBW,EAAK,CAAC,QAAQ,SAAS,OAAO,gBAAoB,MAAMzB,EAAS,CAAC0B,IAAIA,EAAIM,MAAM,6BAA6BC,MAAMH,EAAKI,OAAOJ,EAAKK,QAAQ,YAAYC,KAAK,OAAOC,OAAOT,EAAMU,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAST,GAAM,gBAAoB,WAAW,CAACU,OAAO,oBAAqB,IAAGlB,EAAUmB,UAAU,CAACd,MAAM,WAAiBE,KAAK,cAAoB,CAAC,WAAiB,cAAoBP,EAAUoB,YAAY,YAAY,S,sECAjoD,SAAS3C,IAAW,OAAOA,EAASC,OAAOC,QAAQ,SAASC,GAAQ,IAAI,IAAIC,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAI,CAAC,IAAIG,EAAOF,UAAUD,GAAG,IAAI,IAAII,KAAOD,EAAON,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,EAAEH,EAASY,MAAMC,KAAKR,UAAU,CAAC,SAASS,EAAyBP,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAyU,SAAuCI,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAO,CAAC,EAAEa,EAAWf,OAAOgB,KAAKV,GAAQ,IAAIH,EAAE,EAAEA,EAAEY,EAAWV,OAAOF,IAAII,EAAIQ,EAAWZ,GAAGW,EAASG,QAAQV,IAAM,IAAIL,EAAOK,GAAKD,EAAOC,IAAM,OAAOL,CAAM,CAAzjBgB,CAA8BZ,EAAOQ,GAAU,GAAGd,OAAOmB,sBAAsB,CAAC,IAAIC,EAAiBpB,OAAOmB,sBAAsBb,GAAQ,IAAIH,EAAE,EAAEA,EAAEiB,EAAiBf,OAAOF,IAAII,EAAIa,EAAiBjB,GAAGW,EAASG,QAAQV,IAAM,GAAGP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,CAAgU,IAAIyC,GAAK,IAAApB,aAAW,SAAUC,EAAKC,GAAK,IAAIC,EAAWF,EAAKG,MAAMA,OAAM,IAASD,EAAW,eAAeA,EAAWE,EAAUJ,EAAKK,KAAKA,OAAK,IAASD,EAAU,GAAGA,EAAUE,EAAKjB,EAAyBW,EAAK,CAAC,QAAQ,SAAS,OAAO,gBAAoB,MAAMzB,EAAS,CAAC0B,IAAIA,EAAIM,MAAM,6BAA6BC,MAAMH,EAAKI,OAAOJ,EAAKK,QAAQ,YAAYC,KAAK,OAAOC,OAAOT,EAAMU,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAST,GAAM,gBAAoB,OAAO,CAACc,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAAO,gBAAoB,OAAO,CAACH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAQ,IAAGJ,EAAKF,UAAU,CAACd,MAAM,WAAiBE,KAAK,cAAoB,CAAC,WAAiB,cAAoBc,EAAKD,YAAY,OAAO,S,8PCmB5qD,MAAMM,EAAgBC,EAAAA,GAAOC,GAAG;;;;;;;;;;WAUrB,EAAGC,WAAYA,EAAMC;sBACV,EAAGD,WAAYA,EAAME;aAC9BC,EAAAA,EAAQC;;eAEN,EAAGC,UAAWA,EAAO,iBAAmB;;;EAIjDC,GAAoBR,EAAAA,EAAAA,IAAOS,EAAAA,GAAY;;EAGvCC,GAAcV,EAAAA,EAAAA,IAAOW,EAAAA,GAAK;WACrB,EAAGT,WAAYA,EAAMU;;;IAG5B,EAAGV,WAAYA,EAAMW,sBAAsBC,oBAAoB;;;EAIpD,SAASC,GAA0B,KAChDR,EAAI,WACJS,IAEA,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GACzCC,EAASL,GAAWD,EAAaA,EAAWO,KAAKC,I,IAC9CA,EAAP,OAAOA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUC,OAAO,IACrB,GACL,OAAO,UAAC1B,EAAAA,CAAcQ,KAAMA,E,WAAM,SAACmB,EAAAA,MAAKA,CACtCC,KAAMC,EAAAA,UAAUC,oBAChBC,YAAaX,EACbY,QAAS,IAAMX,GAAe,GAC9BY,QAAS,E,UACV,SAACC,EAAAA,GAAIA,CAACD,QAAQ,O,UAAO,UAACE,EAAAA,GAAUA,CAACC,IAAI,K,WAAK,UAACC,EAAAA,GAAUA,C,WAAC,SAACC,EAAAA,EAAWC,uBAAsB,C,UAAC,SAACC,EAAAA,MAAKA,CAACC,QAAQ,qCAAsE,SAACC,EAAAA,GAASA,CAACC,QAAS,IAAMtB,GAAe,GAAQuB,cAAY,kBAA6BrB,EAAOC,KAAKqB,I,IACjPA,EAAAA,EAAlC,OAAO,SAACC,EAAAA,CAAmED,MAAOA,EAAO3B,QAASA,GAAhE2B,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAAOE,eAAPF,IAAAA,OAAAA,EAAAA,EAAgBG,OAAO,sBACxD,SAACb,EAAAA,GAAUA,CAACC,IAAI,K,UAAK,SAACE,EAAAA,EAAWW,eAAc,CAACC,WAAY,I,UAAK,SAACV,EAAAA,MAAKA,CAACC,QAAQ,2CAAoG,SAAChC,EAAAA,CAAkBwB,QAAQ,IAAIU,QAAS,IAAMtB,GAAe,GAAOuB,cAAY,mB,UAAmB,SAAChC,EAAAA,GAAIA,CAACjC,MAAM,W,UAAW,SAAC6D,EAAAA,MAAKA,CAACC,QAAQ,0CAClU,CACA,SAASK,GAAqB,MAAED,EAAK,QAAE3B,I,IAEtBiC,EAAwBA,EAGdN,EAAAA,EAJzB,MAAMM,GAAeC,EAAAA,EAAAA,IAAgBP,GACrC,OAAKA,KAAUM,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAcE,UAAUF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAcG,eAAgBC,EAAAA,YAAYC,SACxE,MAEF,SAACC,EAAAA,GAAWA,CAA+Cb,cAAY,yB,UAAyB,UAACT,EAAAA,GAAUA,CAACC,IAAI,O,WAAO,UAACsB,EAAAA,GAAOA,CAACtB,IAAI,MAAMuB,MAAM,S,WAAS,SAACC,EAAAA,EAAYA,CAACnC,SAAUoB,EAAOhE,KAAM,MAAM,SAACyD,EAAAA,EAAWW,eAAc,CAACC,WAAY,I,SAAML,EAAMgB,YAA8C3C,IAAW,SAAC4C,EAAAA,GAAYA,CAACC,MAAMC,EAAAA,EAAAA,iBAAgB9C,EAAS2B,EAAME,QAASkB,EAAAA,iBAAiBC,S,UAAU,SAACvD,EAAAA,C,UAAawD,EAAAA,EAAAA,gBAAetB,EAAME,iBAAxZF,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAAOE,eAAPF,IAAAA,OAAAA,EAAAA,EAAgBG,OAAO,iBAClD,C,ueChEO,SAASoB,GAAsB,YACpCC,EAAW,MACXC,EAAK,WACLrD,EAAU,cACVsD,EAAa,oBACbC,EAAmB,MACnBC,I,IAEsBxD,EACAA,EACsQsD,EAAyXA,EAAwOtD,EAA0CqD,EAA2BrD,EAAoKA,EAA0CqD,EAAoCrD,EAAqOuD,EAFz5C,MAAME,EAA4C,QAA5BzD,EAAAA,EAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,OAC9CgB,EAA4C,QAA5B5D,EAAAA,EAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,OACpD,OAAO,sB,WAAE,UAACxB,EAAAA,GAAUA,C,WAAC,SAACC,EAAAA,EAAWW,eAAc,C,UAAC,SAACT,EAAAA,MAAKA,CAACC,QAAQ,+BAA+BsC,OAAQ,CAAEC,OAAQN,QAA+C,UAACO,EAAAA,GAAQA,C,WAAC,SAACrB,EAAAA,EAAYA,CAACnC,SAAUR,EAAW0D,EAAAA,GAAMC,YAAaM,MAAO,CAAEC,YAAa,UAAW,SAAC7C,EAAAA,EAAWW,eAAc,C,SAAiC,QAA/BsB,EAAAA,EAAcI,EAAAA,GAAMC,mBAApBL,IAAAA,OAAAA,EAAAA,EAAiCa,cAAc,YAAuD,UAAC/C,EAAAA,GAAUA,C,WAAC,SAACC,EAAAA,EAAWW,eAAc,C,UAAC,SAACT,EAAAA,MAAKA,CAACC,QAAQ,+BAA+BsC,OAAQ,CAAEC,OAAQH,QAA+C,UAACI,EAAAA,GAAQA,C,WAAC,SAACrB,EAAAA,EAAYA,CAACnC,SAAUR,EAAW0D,EAAAA,GAAMG,YAAaI,MAAO,CAAEC,YAAa,UAAW,SAAC7C,EAAAA,EAAWW,eAAc,C,SAAiC,QAA/BsB,EAAAA,EAAcI,EAAAA,GAAMG,mBAApBP,IAAAA,OAAAA,EAAAA,EAAiCa,cAAc,YAAuD,UAAC/C,EAAAA,GAAUA,C,WAAC,SAACC,EAAAA,EAAWW,eAAc,C,UAAC,SAACT,EAAAA,MAAKA,CAACC,QAAQ,kBAA2C,SAACH,EAAAA,EAAWW,eAAc,C,SAAE,KAAiC,QAA5BhC,EAAAA,EAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,YAAYS,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOc,cAAc,MAAkC,QAA5BnE,EAAAA,EAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,eAAkD,SAACxB,EAAAA,GAAUA,CAAC6C,MAAO,CAAEG,eAAgB,Y,UAAc,SAAC/C,EAAAA,EAAWW,eAAc,C,SAAE,KAAiC,QAA5BhC,EAAAA,EAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,YAAYS,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOgB,SAASF,cAAc,MAAkC,QAA5BnE,EAAAA,EAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,cAAkD,UAACxB,EAAAA,GAAUA,C,WAAC,SAACC,EAAAA,EAAWW,eAAc,C,UAAC,SAACT,EAAAA,MAAKA,CAACC,QAAQ,oBAA6C,UAACH,EAAAA,EAAWW,eAAc,C,UAAEoB,EAAc,MAAQG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAqBY,cAAc,GAAG,WACh5C,SAACG,EAAAA,GAAaA,CAACL,MAAO,CAAEM,OAAQ,cAAgB7C,QAAS8B,E,UAAO,SAAC7D,EAAAA,GAAIA,CAACsC,WAAY,IAAKuC,SAAU,G,SAAKpB,GAAc,SAAC7B,EAAAA,MAAKA,CAACC,QAAQ,0BAA4B,SAACD,EAAAA,MAAKA,CAACC,QAAQ,6BAC/N,CCXO,SAASiD,GAAa,WAC3BzE,EAAU,YACVoD,EAAW,oBACXG,EAAmB,MACnBF,I,IAS+JA,EAE1IrD,EAA+CA,EAG/CA,EAA+CA,EAC4CuD,EAAoDA,EAbpK,MAAMrE,GAAQwF,EAAAA,EAAAA,YACd,IAAIC,EACJ,I,IACkBtB,EAAAA,EAAhBsB,EAAgBtB,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAOgB,gBAAPhB,IAAAA,OAAAA,EAAAA,EAAiBc,cAAc,EACjD,CAAE,MAAOS,GACPD,OAAgB,CAClB,CACA,OAAO,SAACzD,EAAAA,GAAUA,CAACC,IAAI,K,UAAK,UAACsB,EAAAA,GAAOA,CAACoC,QAAQ,eAAe1D,IAAI,M,WAAM,UAACD,EAAAA,GAAUA,CAAC2D,QAAQ,S,WAAS,SAACxD,EAAAA,EAAWyD,gBAAe,CAACnD,cAAY,mB,UAAoB0B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOc,cAAc,KAAM,OAAiC,SAACxE,EAAAA,GAAIA,CAACsC,WAAY,IAAKuC,SAAU,GAAI9G,MAAOwB,EAAMC,SAAU4F,GAAI,E,UAAG,SAACxD,EAAAA,MAAKA,CAClSC,QAAQ,2BACRsC,OAAQ,CAAEkB,QAAqC,QAA5BhF,EAAAA,EAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,OAAQqC,QAAqC,QAA5BjF,EAAAA,EAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,gBAC5E,UAAC1B,EAAAA,GAAUA,CAAC2D,QAAQ,S,WAAS,SAACxD,EAAAA,EAAWyD,gBAAe,CAACnD,cAAY,mB,SAAoBgD,GAAiB,OAAiC,SAAChF,EAAAA,GAAIA,CAACsC,WAAY,IAAKuC,SAAU,GAAI9G,MAAOwB,EAAMC,SAAU4F,GAAI,E,UAAG,SAACxD,EAAAA,MAAKA,CACxOC,QAAQ,2BACRsC,OAAQ,CAAEkB,QAAqC,QAA5BhF,EAAAA,EAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,OAAQqC,QAAqC,QAA5BjF,EAAAA,EAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,gBAC5E,UAAC1B,EAAAA,GAAUA,CAAC2D,QAAQ,S,WAAS,UAACxD,EAAAA,EAAWyD,gBAAe,C,UAAE1B,GAAeC,EAAQ,QAASE,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAqB2B,SAASC,EAAAA,KAAY,QAAU5B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAqB6B,QAAQ,KAAO,IAAI,QAEvK,SAACzF,EAAAA,GAAIA,CAACsC,WAAY,IAAKuC,SAAU,GAAI9G,MAAOwB,EAAMC,SAAU4F,GAAI,E,UAAG,SAACxD,EAAAA,MAAKA,CAACC,QAAQ,sCACzH,C,uICjBA,MAAM6D,GAAOC,IAAAA,OAAY,GAClB,SAASC,KACd,OAAOC,EAAAA,GAAAA,IAAgBC,GAAUA,EAAMC,MACzC,C,0RCyCA,MAAMC,GAAoC,IAAIC,EAAAA,QAAQ,GAAI,KACpDC,IAA8B7G,EAAAA,EAAAA,IAAOkC,EAAAA,GAAW;;;EAIvC,SAAS4E,K,IAqC8BxC,EAuBsCyC,EACAA,EAkHhFzC,EACAtD,EACAsD,EACAtD,EAsCoCA,GAAwBA,GAgBrDgG,GAqCGhG,GAGKA,GAOLA,GAGKA,GAzRzB,MAAM,YAAEiG,GAAW,YAAEC,KAAgBC,EAAAA,EAAAA,KAC/BC,IAAWC,EAAAA,EAAAA,MACXC,IAAUpG,EAAAA,EAAAA,KACVqG,IAASC,EAAAA,EAAAA,KACTtH,IAAQwF,EAAAA,EAAAA,YACR+B,IAAQC,EAAAA,GAAAA,YACRC,IAAYC,EAAAA,EAAAA,IAAYX,IACxBY,IAAYD,EAAAA,EAAAA,IAAYV,IACxBY,GAA2C,cAAnBR,GAAQS,QAA0BT,GAAQrG,QAAU+G,GAAAA,wBAAwBV,GAAQrG,cAAW,EACvHgH,GAAoBC,QACxBZ,GAAQrG,SAAW6G,KAA0BH,IAAaA,GAAUQ,OAAOL,KAA0BD,IAAaA,GAAUM,OAAOL,MAE/HM,IAAgBC,EAAAA,EAAAA,MAChB,iBAAEC,GAAgB,WAAEC,GAAU,gBAAEC,IAAoBjC,MACpD,eACJkC,GAAc,WACdzH,GAAU,KACVgG,GAAI,UACJ0B,GAAS,iBACTC,GAAgB,cAChBrE,GAAa,MACbD,GAAK,YACLD,GAAW,gBACXwE,GAAe,oBACfrE,GAAmB,MACnBqB,IDpDG,SAA4B+B,EAAWE,G,IAYTb,EA2FZ2B,EAAAA,EAQAA,EAAAA,EA9GvB,MAAMrB,GAAUpG,EAAAA,EAAAA,MACV,iBAAEoH,EAAgB,WAAEC,EAAU,gBAAEC,GAAoBjC,KACpDkC,EAAiBH,IAAqB5D,EAAAA,GAAMC,WAAaD,EAAAA,GAAMG,WAAaH,EAAAA,GAAMC,WAClF3D,GAAa6H,EAAAA,EAAAA,UACjB,KAAO,CACL,CAACnE,EAAAA,GAAMC,YAAagD,QAAa,EACjC,CAACjD,EAAAA,GAAMG,YAAagD,QAAa,KAEnC,CAACF,EAAWE,KAEPa,EAAW1B,IAAQ8B,EAAAA,EAAAA,IAAU9H,EAAW0D,EAAAA,GAAMC,YAAa3D,EAAW0D,EAAAA,GAAMG,aAC7EkE,GAAcC,EAAAA,EAAAA,GAAehC,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAMiC,gBACnC7E,EAAcsE,IAAcQ,EAAAA,GAAUC,YAAcjB,QAAQa,GAAezC,IAAAA,MAAWyC,EAAYK,SAAU/C,MAAU6B,QAC1HQ,IAAcQ,EAAAA,GAAUG,QAAUrC,GAAQV,IAAAA,MAAWU,EAAKsC,SAASF,SAAU/C,KAASC,IAAAA,MAAWU,EAAKuC,SAASH,SAAU/C,KAErHmD,GAAWC,EAAAA,GAAAA,IACfnC,EAAQxE,SACR+F,EAAAA,EAAAA,UAAQ,IAAM,CAAC7H,EAAW0D,EAAAA,GAAMC,YAAa3D,EAAW0D,EAAAA,GAAMG,cAAc,CAAC7D,KAEzE2H,EAAmB,CACvB,CAACjE,EAAAA,GAAMC,YAAa6E,EAAS,GAC7B,CAAC9E,EAAAA,GAAMG,YAAa2E,EAAS,IAEzBE,GAAoBC,EAAAA,EAAAA,GACxBpB,EACAvH,EAAWsH,IAEPsB,GAAkBf,EAAAA,EAAAA,UAAQ,KAC9B,GAAIzE,EACF,OAAIoE,GAAmBxH,EAAWyH,IACzBkB,EAAAA,EAAAA,GAAuBnB,EAAiBxH,EAAWyH,SAE5D,EACK,GAAIiB,EAAJ,C,IAC4BA,EACP/B,EAAoBE,EAD9C,MAAMgC,EAA2BH,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAmBjI,SAC7CqI,EAAQC,GAAU,CAACpC,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlG,QAASoG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWpG,SACzD,GAAIqI,GAAUC,GAAUF,GAA4B7C,EAAM,C,IAGjDgD,EAFP,MAAMA,EAAoBvB,IAAmB/D,EAAAA,GAAMG,WAAagD,EAAYF,EACtEsC,EAAuBxB,IAAmB/D,EAAAA,GAAMG,WAAamC,EAAKkD,QAAQJ,GAAQK,MAAMN,GAA4B7C,EAAKkD,QAAQH,GAAQI,MAAMN,GACrJ,OAAOG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAmBI,UAAWC,EAAAA,eAAeC,cAAcN,EAAmBC,EAAqBb,UAAYa,CACxH,CAIF,IACC,CAAC7F,EAAaoE,EAAiBxH,EAAYyH,EAAgBiB,EAAmB/B,EAAWE,EAAWb,IACjG1C,GAAgBuE,EAAAA,EAAAA,UAAQ,KACrB,CACL,CAACnE,EAAAA,GAAMC,YAAa2D,IAAqB5D,EAAAA,GAAMC,WAAa+E,EAAoBE,EAChF,CAAClF,EAAAA,GAAMG,YAAayD,IAAqB5D,EAAAA,GAAMC,WAAaiF,EAAkBF,KAE/E,CAACE,EAAiBF,EAAmBpB,IAClCjE,GAAQwE,EAAAA,EAAAA,UAAQ,KACpB,IAAIzE,EAOG,C,IACoBuD,EAAzB,MAAM4C,EAAmB5C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlG,QACpC,OAAOuF,GAAQuD,EAAmBvD,EAAKkD,QAAQK,QAAoB,CACrE,CAVA,C,IAEMC,EAAoCC,EADxC,MAAQ,CAAC/F,EAAAA,GAAMC,YAAa6F,EAAkB,CAAC9F,EAAAA,GAAMG,YAAa4F,GAAqBnG,EACvF,IAAIkG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkBE,YAAY,MAAMD,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkBC,YAAY,IAAI,CACxE,MAAMC,EAAQF,EAAiBG,OAAOJ,GACtC,OAAO,IAAIK,EAAAA,MAAML,EAAiBhJ,SAAUiJ,EAAiBjJ,SAAUmJ,EAAMG,YAAaH,EAAMI,UAClG,CAKF,IACC,CAACpD,EAAWvD,EAAa4C,EAAM1C,IAC5BsE,GAAkBC,EAAAA,EAAAA,UAAQ,K,IAEQ2B,EAA2BC,EADjE,MAAQ,CAAC/F,EAAAA,GAAMC,YAAa6F,EAAkB,CAAC9F,EAAAA,GAAMG,YAAa4F,GAAqBnG,GAChF0G,EAAcC,GAAgB,CAACT,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkB/I,QAASgJ,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkBhJ,SACnF,GAAIuF,GAAQ+B,GAAeiC,GAAgBC,EACzC,IACE,OAAOjE,EAAKkE,mBAAmBnC,EAAaiC,EAAcC,EAC5D,CAAE,MAAOE,GAOP,YANAC,GAAO,OAAAC,KACL,aACA,qBACA,6BAA6BF,oBAAyBpC,oBAA8BiC,oBAA+BC,IACnH,CAAErF,MAAOuF,GAGb,CAGF,GACC,CAAC7G,EAAe0C,EAAM+B,IACnBxE,GAAsBsE,EAAAA,EAAAA,UAAQ,IAC9BD,GAAmBG,EACd,IAAInC,EAAAA,QAAQgC,EAAgBQ,SAAUL,EAAYuC,IAAI1C,GAAiBQ,eAE9E,GAED,CAACR,EAAiBG,IACrB,IAAInD,EACC0B,EAAQiE,cACX3F,GAAQ,SAAC4F,EAAAA,EAAuBA,CAAAA,IAE9B9C,IAAcQ,EAAAA,GAAUuC,UAC1B7F,EAAQA,IAAS,SAACrD,EAAAA,MAAKA,CAACC,QAAQ,wBAE7B8B,EAAcI,EAAAA,GAAMC,aAAgBL,EAAcI,EAAAA,GAAMG,cAC3De,EAAQA,IAAS,SAACrD,EAAAA,MAAKA,CAACC,QAAQ,2BAElC,MAAQ,CAACkC,EAAAA,GAAMC,YAAa+G,EAAiB,CAAChH,EAAAA,GAAMG,YAAa8G,GAAoBrH,E,IAKlEtD,EAQAA,EAInB,OAhBI0K,IAAmB/C,QAAAA,EAAAA,SAAAA,IAAAA,GAAoC,QAApCA,EAAAA,EAAmBjE,EAAAA,GAAMC,mBAAzBgE,IAAAA,OAAAA,EAAAA,EAAsCzC,SAASwF,MACpE9F,GAAQ,SAACrD,EAAAA,MAAKA,CACZC,QAAQ,wCACRsC,OAAQ,CACN8G,YAAyC,QAA5B5K,EAAAA,EAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,WAI7C+H,IAAmBhD,QAAAA,EAAAA,SAAAA,IAAAA,GAAoC,QAApCA,EAAAA,EAAmBjE,EAAAA,GAAMG,mBAAzB8D,IAAAA,OAAAA,EAAAA,EAAsCzC,SAASyF,MACpE/F,GAAQ,SAACrD,EAAAA,MAAKA,CACZC,QAAQ,wCACRsC,OAAQ,CACN8G,YAAyC,QAA5B5K,EAAAA,EAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,WAI1C,CACL6E,iBACAzH,aACAgG,OACA0B,YACAC,mBACArE,gBACAD,QACAD,cACAwE,kBACArE,sBACAqB,QAEJ,CC/EMiG,CAAmBlE,SAAa,EAAQE,SAAa,IACnD,cAAEiE,GAAa,cAAEC,IDzElB,SAA+B3H,GACpC,MAAM4H,GAAWC,EAAAA,GAAAA,KAajB,MAAO,CACLH,eAboBI,EAAAA,EAAAA,cACnB3D,IACCyD,GAASG,EAAAA,EAAAA,IAAU,CAAEC,MAAO1H,EAAAA,GAAMC,WAAY4D,aAAYnE,aAA6B,IAAhBA,IAAwB,GAEjG,CAAC4H,EAAU5H,IAUX2H,eARoBG,EAAAA,EAAAA,cACnB3D,IACCyD,GAASG,EAAAA,EAAAA,IAAU,CAAEC,MAAO1H,EAAAA,GAAMG,WAAY0D,aAAYnE,aAA6B,IAAhBA,IAAwB,GAEjG,CAAC4H,EAAU5H,IAMf,CCuD2CiI,CAAsBjI,IACzDkI,IAAW1G,IACV2G,GAAaC,KAAkBnL,EAAAA,EAAAA,WAAS,IACxCoL,GAAeC,KAAoBrL,EAAAA,EAAAA,WAAS,GAC7CsL,IAAcC,EAAAA,EAAAA,KACdC,IAAkBC,EAAAA,GAAAA,IAAoCnG,KACrDoG,GAAQC,KAAa3L,EAAAA,EAAAA,UAAS,IAC/B4L,GAAmB,CACvB,CAAC3E,IAAmBC,GACpB,CAACE,IAAiBrE,GAAcoE,IAA+C,QAA7BlE,EAAAA,GAAcmE,WAAdnE,IAAAA,OAAAA,EAAAA,EAA+Ba,cAAc,KAAM,IAEjG+H,IAAqBC,EAAAA,GAAAA,cAAa7I,GAAcI,EAAAA,GAAMC,aACtDyI,IAAqBD,EAAAA,GAAAA,cAAa7I,GAAcI,EAAAA,GAAMG,aACtDwI,GAAa,CAAC3I,EAAAA,GAAMC,WAAYD,EAAAA,GAAMG,YAAYyI,QACtD,CAACC,EAAanB,KACL,IACFmB,EACH,CAACnB,IAAQoB,EAAAA,GAAAA,GAAe7E,GAAiByD,OAG7C,CAAC,GAEGqB,GAAe,CAAC/I,EAAAA,GAAMC,WAAYD,EAAAA,GAAMG,YAAYyI,QACxD,CAACC,EAAanB,K,IAGDiB,EAFX,MAAO,IACFE,EACH,CAACnB,GAAyB,QAAjBiB,EAAAA,GAAWjB,UAAXiB,IAAAA,OAAAA,EAAAA,EAAmBK,QAAQpJ,GAAc8H,IAAU,KAC7D,GAEH,CAAC,GAEGrF,IAAS4G,EAAAA,EAAAA,OACRC,GAAWC,KAAoBC,EAAAA,EAAAA,GAAmBxJ,GAAcI,EAAAA,GAAMC,YAAaoC,QAAAA,EAAAA,UAAAA,IAAAA,OAAAA,EAAAA,EAAQjE,UAC3FiL,GAAWC,KAAoBF,EAAAA,EAAAA,GAAmBxJ,GAAcI,EAAAA,GAAMG,YAAakC,QAAAA,EAAAA,UAAAA,IAAAA,OAAAA,EAAAA,EAAQjE,SAC5FmL,IAAiBC,EAAAA,GAAAA,MACjBC,IAAoBC,EAAAA,EAAAA,K,SACX5J,K,OAAAA,GAAAA,MAAAA,KAAAA,U,UAAAA,K,eAAf,YACE,GAAuB,cAAnB8C,GAAQS,SAA2BR,KAAWR,KAAWoH,GAC3D,OAEF,MAAQ,CAACzJ,EAAAA,GAAMC,YAAa0J,EAAe,CAAC3J,EAAAA,GAAMG,YAAayJ,GAAkBhK,GAC3EiK,QAAiB5B,KACvB,IAAK0B,IAAkBC,IAAkB3G,KAAcE,KAAc0G,EACnE,OAEF,MAAMC,EAAa,CACjB,CAAC9J,EAAAA,GAAMC,aAAa8J,EAAAA,GAAAA,GAAwBJ,EAAejK,GAAcsK,EAAAA,GAAe7B,IAAiB,GACzG,CAACnI,EAAAA,GAAMG,aAAa4J,EAAAA,GAAAA,GAAwBH,EAAelK,GAAcsK,EAAAA,GAAe7B,IAAiB,IAE3G,IAAI8B,EAAUC,EAAQC,EAAMlE,EAC5B,GAAIhD,GAAUyC,UAAYvC,GAAUuC,SAAU,C,IAK1C,EAAC0E,EAJH,MAAMA,EAAcjH,GAAUuC,SAC9BuE,EAAW5H,GAAOgI,YAAYC,gBAC9BJ,EAAS7H,GAAOiI,gBAChBH,EAAO,EACsBhH,QAA1BiH,EAAAA,EAAcnH,GAAYE,UAA1BiH,IAAAA,GAA6C,QAA9C,IAAuCrN,eAAvC,WAACqN,EAAD,EAAgDhM,UAAW,IAE1DgM,EAAcT,EAAgBC,GAAelF,SAAS6F,WAEvDT,EAAWM,EAAcpK,EAAAA,GAAMC,WAAaD,EAAAA,GAAMG,YAAYoK,WAE9DT,EAAWM,EAAcpK,EAAAA,GAAMG,WAAaH,EAAAA,GAAMC,YAAYsK,WAE9D3H,GAAQxE,QACRyL,EAASW,eAEXvE,EAAQwE,EAAAA,GAAUC,MAAMN,EAAcR,EAAgBD,GAAejF,SAAS6F,WAChF,KAAO,C,IAIHtH,EAAAA,EACAE,EAAAA,EAJF8G,EAAW5H,GAAOgI,YAAYM,aAC9BT,EAAS7H,GAAOsI,aAChBR,EAAO,EACLlH,QAAAA,EAAAA,UAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAWlG,eAAXkG,IAAAA,OAAAA,EAAAA,EAAoB7E,UAAW,IAC/B+E,QAAAA,EAAAA,UAAAA,IAAAA,GAAkB,QAAlBA,EAAAA,EAAWpG,eAAXoG,IAAAA,OAAAA,EAAAA,EAAoB/E,UAAW,GAC/BuL,EAAcjF,SAAS6F,WACvBX,EAAclF,SAAS6F,WACvBT,EAAW9J,EAAAA,GAAMC,YAAYsK,WAC7BT,EAAW9J,EAAAA,GAAMG,YAAYoK,WAC7B3H,GAAQxE,QACRyL,EAASW,eAEXvE,EAAQ,IACV,CACA+B,IAAiB,SACXiC,KAAYE,EAAMlE,EAAQ,CAAEA,SAAU,CAAC,GAAG2E,MAC7CC,GAAsBX,KAAUC,EAAM,IAClClE,EAAQ,CAAEA,SAAU,CAAC,EACxB6E,UAAUC,EAAAA,GAAAA,GAAmBF,KAC5BD,MAAMI,I,IAKkBpL,EAECA,EAN1BoI,IAAiB,GACjB,MAAMiD,EAAkB,CACtBC,KAAMC,GAAAA,EAAgBC,sBACtBC,gBAAgBC,EAAAA,GAAAA,GAAWrI,IAC3BsI,uBAAsD,QAA/B3L,EAAAA,GAAcI,EAAAA,GAAMC,mBAApBL,IAAAA,OAAAA,EAAAA,EAAiC8E,SAAS6F,aAAc,IAC/EiB,iBAAiBF,EAAAA,GAAAA,GAAWnI,IAC5BsI,wBAAuD,QAA/B7L,EAAAA,GAAcI,EAAAA,GAAMG,mBAApBP,IAAAA,OAAAA,EAAAA,EAAiC8E,SAAS6F,aAAc,KAElFhB,GAAeyB,EAAUC,GACzB3C,GAAU0C,EAASU,OACnBC,EAAAA,GAAAA,oBAAmBC,EAAAA,GAAmBC,wBAAyB,IAC1DZ,MACAa,EAAAA,EAAAA,GAA6B,CAC9B/I,SACAgJ,IAAKC,EAAAA,UAAUC,OACfC,QAASC,EAAAA,gBAAgBC,GACzBC,QAAQC,EAAAA,EAAAA,oBAAmB,CACzBC,eAAgBC,EAAAA,qBAAqBvJ,GAAU1G,SAC/C6I,OAAQnC,GAAUlG,QAClBsI,OAAQlC,GAAUpG,UAEpB0P,UAAWxJ,GACXyJ,UAAWvJ,GACXqF,sBACAE,sBACAnM,QAASqG,GAAQrG,UAEnBoQ,gBAAgB,EAChBC,iBAAkB5B,EAASU,MAC3B,MAEJmB,OAAOpG,I,IAEHA,EADJuB,IAAiB,GACI,QAAjBvB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqG,OACVpG,GAAO,OAAAxF,MAAMuF,EAAQ,CACnBsG,KAAM,CACJC,KAAM,iBACNC,SAAU,iBAGhB,GAEJ,EA9FenN,G,gLAAAA,GAAAA,MAAAA,KAAAA,U,CA+Ff,MAAMoN,GAAc,K,IAC8K5Q,EAA6CA,EAA0R4H,EAAuL5H,EAA6CA,EAA3uB,OAAO,SAAC6F,GAAAA,C,SAA6BzC,IAAc,SAACyN,EAAAA,GAASA,CAACC,GAAG,OAAOC,cAAc,O,UAAO,UAACtO,EAAAA,GAAOA,CAACoC,QAAQ,gB,WAAgB,SAAClF,GAAAA,GAAIA,CAAC6E,SAAU,GAAIvC,WAAW,UAAU+O,WAAY,GAAIC,GAAI,G,UAAiC,QAA5BjR,EAAAA,GAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,QAAS,KAAkC,QAA5B5C,EAAAA,GAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,WAAc,SAACsO,EAAAA,EAAkBA,CAAClR,WAAY,CAACA,GAAW0D,EAAAA,GAAMC,YAAa3D,GAAW0D,EAAAA,GAAMG,aAAcjG,KAAM,WAA+B,sB,WAAE,UAACuT,EAAAA,GAAOA,CAAClN,MAAO,CAAEmN,UAAW,Q,WAAU,SAACzR,GAAAA,GAAIA,CAAC6E,SAAU,GAAIvC,WAAW,UAAU+O,WAAY,GAAIC,GAAI,G,SAAKrJ,QAAAA,EAAAA,UAAAA,IAAAA,OAAAA,EAAAA,EAAiBzD,cAAc,MAAU,SAAC+M,EAAAA,EAAkBA,CAAClR,WAAY,CAACA,GAAW0D,EAAAA,GAAMC,YAAa3D,GAAW0D,EAAAA,GAAMG,aAAcjG,KAAM,SAAgB,SAACyT,EAAAA,GAAGA,C,UAAC,SAAC1R,GAAAA,GAAIA,CAAC6E,SAAU,G,UAAiC,QAA5BxE,EAAAA,GAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,QAAS,KAAkC,QAA5B5C,EAAAA,GAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,QAAS,oBAA4B,SAACjD,GAAAA,GAAIA,CAAC6E,SAAU,GAAI8M,UAAU,OAAOvM,GAAI,EAAGwM,UAAU,SAAS7T,MAAM,Y,UAAY,SAAC6D,EAAAA,MAAKA,CAACC,QAAQ,+BAA+BsC,OAAQ,CAAE0N,QAAS3F,GAAgB1H,cAAc,Y,EAE19BsN,GAAc,KACX,SAACtO,EAAqBA,CAC3BE,MAAOA,GACPrD,WAAYA,GACZsD,cAAeA,GACfF,YAAaA,GACbI,MAAOA,GACPD,oBAAqBA,KAGnBmO,IAAc,SAACnQ,EAAAA,MAAKA,CACxBC,QAAQ,sBACRsC,OAAQ,CACN6N,KAAqC,QAA/BrO,EAAAA,GAAcI,EAAAA,GAAMC,mBAApBL,IAAAA,OAAAA,EAAAA,EAAiCa,cAAc,GACrDyN,KAAkC,QAA5B5R,EAAAA,GAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,OAAAA,EAAAA,EAA8B4C,OACpCiP,KAAqC,QAA/BvO,EAAAA,GAAcI,EAAAA,GAAMG,mBAApBP,IAAAA,OAAAA,EAAAA,EAAiCa,cAAc,GACrD2N,KAAkC,QAA5B9R,EAAAA,GAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,OAAAA,EAAAA,EAA8B4C,UAGlCmP,IAAwB7G,EAAAA,EAAAA,cAC3B8G,IACC,MAAMC,GAAiBjD,EAAAA,GAAAA,GAAWgD,GAEhC5L,GADE6L,IAAmB/L,GACZ,WAAWA,MAAeD,KAE1B,WAAWgM,KAAkB/L,KACxC,GAEF,CAACA,GAAaE,GAAUH,KAEpBiM,IAAwBhH,EAAAA,EAAAA,cAC3BiH,IACC,MAAMC,GAAiBpD,EAAAA,GAAAA,GAAWmD,GAG9B/L,GAFAH,KAAgBmM,EACdlM,GACO,WAAWA,MAAekM,IAE1B,WAAWA,IAGb,WAAWnM,IAA4B,SAASmM,IAC3D,GAEF,CAACnM,GAAaG,GAAUF,KAEpBmM,IAA4BnH,EAAAA,EAAAA,cAAY,KAC5CM,IAAe,GACXO,IACFjB,GAAc,IAEhBkB,GAAU,GAAG,GACZ,CAAClB,GAAeiB,MACb,SAAEuG,KAAaC,EAAAA,EAAAA,MACfC,GAAWF,GAASG,SAAS,WAC7BC,IAAmBC,EAAAA,EAAAA,GAAqB3S,QAAAA,GAAAA,UAAAA,IAAAA,QAAAA,EAAAA,GAAY2D,WAAY3D,QAAAA,GAAAA,UAAAA,IAAAA,QAAAA,EAAAA,GAAY6D,YAClF,OAAKsJ,IAGE,sB,WAAE,UAACyF,EAAAA,EAAOA,C,WAAC,SAACC,EAAAA,EAAaA,CAACC,SAAUN,GAAUO,QAAQ,EAAMC,aAAcrN,MAAqC,UAACsN,EAAAA,GAAOA,C,WAAC,SAACC,EAAAA,EAA4BA,CAC1JC,OAAQ5H,GACR6H,UAAWf,GACX5G,cAAeA,GACf2D,KAAMrD,GACNsH,cAAe,KAAM,SAACC,EAAAA,EAAwBA,CAC5CC,MAAOnQ,IAAc,SAAC7B,EAAAA,MAAKA,CAACC,QAAQ,sBAAwB,SAACD,EAAAA,MAAKA,CAACC,QAAQ,0BAC3E4R,UAAWf,GACXmB,WAAY5C,GACZ6C,cAAehC,KAEjBC,YAAaA,GACbgC,cAAe1N,QAAAA,GAAAA,UAAAA,IAAAA,QAAAA,EAAAA,GAAMiC,kBACrB,UAAC/G,EAAAA,GAAUA,CAACC,IAAI,O,UAAQiC,KAAgBoP,IAAW,SAACmB,EAAAA,GAAYA,C,UAAC,SAACC,EAAAA,GAAQA,C,UAAC,UAAC1S,EAAAA,GAAUA,CAACC,IAAI,O,WAAO,SAACE,EAAAA,EAAWwS,eAAc,CAAC5R,WAAY,IAAKvE,MAAM,U,UAAU,SAAC6D,EAAAA,MAAKA,CAACC,QAAQ,qBAA8C,SAACH,EAAAA,EAAWwS,eAAc,CAAC5R,WAAY,IAAKvE,MAAM,U,UAAU,SAAC6D,EAAAA,MAAKA,CAACC,QAAQ,8BAAuD,SAACH,EAAAA,EAAWwS,eAAc,CAAC5R,WAAY,IAAKvE,MAAM,U,UAAU,SAAC6D,EAAAA,MAAKA,CAACC,QAAQ,mCAA+F,SAACmS,EAAAA,GAAYA,C,UAAC,SAACC,EAAAA,GAAQA,C,UAAC,SAAC1S,EAAAA,GAAUA,CAACC,IAAI,O,UAAO,UAACE,EAAAA,EAAWwS,eAAc,CAAC5R,WAAY,IAAKvE,MAAM,U,WAAU,SAACoW,IAAAA,C,UAAE,SAACvS,EAAAA,MAAKA,CAACC,QAAQ,uBAA0B,KAAI,SAACD,EAAAA,MAAKA,CAACC,QAAQ,4CAAsG,SAACuS,EAAAA,EAAkBA,CAC1yBpK,MAAOsC,GAAiBvI,EAAAA,GAAMC,YAC9BqQ,YAAalJ,GACbmJ,MAAO,K,IACS5H,EAAdvB,IAA0C,QAA5BuB,EAAAA,GAAW3I,EAAAA,GAAMC,mBAAjB0I,IAAAA,OAAAA,EAAAA,EAA8B6H,YAAa,GAAG,EAE9DC,iBAAkBpC,GAClBqC,eAAgB3H,GAAa/I,EAAAA,GAAMC,YACnCnD,SAAUR,GAAW0D,EAAAA,GAAMC,aAAe,KAC1C0Q,GAAG,gCACH,SAACV,EAAAA,GAAYA,C,UAAC,SAACjV,EAAAA,EAAIA,CAACd,KAAK,KAAKF,MAAOwB,GAAMC,cAA2B,SAAC4U,EAAAA,EAAkBA,CACzFpK,MAAOsC,GAAiBvI,EAAAA,GAAMG,YAC9BmQ,YAAajJ,GACboJ,iBAAkBjC,GAClB+B,MAAO,K,IACS5H,EAAdtB,IAA0C,QAA5BsB,EAAAA,GAAW3I,EAAAA,GAAMG,mBAAjBwI,IAAAA,OAAAA,EAAAA,EAA8B6H,YAAa,GAAG,EAE9DE,eAAgB3H,GAAa/I,EAAAA,GAAMG,YACnCrD,SAAUR,GAAW0D,EAAAA,GAAMG,aAAe,KAC1CwQ,GAAG,+BACFrU,GAAW0D,EAAAA,GAAMC,aAAe3D,GAAW0D,EAAAA,GAAMG,aAAe6D,KAAcQ,EAAAA,GAAUuC,UAAW,qB,UAAE,UAACoG,EAAAA,GAASA,CAAC7P,QAAQ,MAAM+P,cAAc,O,WAAO,SAAC3P,EAAAA,GAAUA,CAACJ,QAAQ,O,UAAO,SAACK,EAAAA,EAAWiT,oBAAmB,CAACrS,WAAY,IAAKuC,SAAU,G,SAAKpB,IAAc,SAAC7B,EAAAA,MAAKA,CAACC,QAAQ,uBAAyB,SAACD,EAAAA,MAAKA,CAACC,QAAQ,mBAA+D,KAAI,SAACqP,EAAAA,GAASA,CAAC7P,QAAQ,OAAO+P,cAAc,O,UAAO,SAACtM,EAAYA,CACnbzE,WAAYA,GACZuD,oBAAqBA,GACrBH,YAAaA,GACbC,MAAOA,YACsBqP,IAAmB,SAACpO,EAAAA,GAAaA,CAACiQ,UAAU,E,UAAM,SAAClT,EAAAA,EAAWmT,eAAc,CAACC,GAAG,M,UAAM,SAAClT,EAAAA,MAAKA,CAACC,QAAQ,oCAAkG,cAAnB8E,GAAQS,QAAyB,SAAC2N,GAAAA,QAAKA,CACxPC,UAAQ,EACRC,eAAgBC,EAAAA,GAAmBC,8BACnCC,WAAY,CAAEC,qBAAqB,GACnCC,QAASC,EAAAA,GAAqBC,sB,UAC/B,SAACC,EAAAA,GAAWA,CAAC1T,QAAS0F,GAAciO,K,UAAM,SAAC7K,EAAAA,EAAuBA,CAAAA,QAA4B,UAACtJ,EAAAA,GAAUA,CAACC,IAAI,K,WAAOyL,KAAc0I,EAAAA,EAAcC,cAAgB3I,KAAc0I,EAAAA,EAAcE,SAAWzI,KAAcuI,EAAAA,EAAcC,cAAgBxI,KAAcuI,EAAAA,EAAcE,UAAYlK,KAAW,UAAClK,EAAAA,GAAUA,C,UAAEwL,KAAc0I,EAAAA,EAAcG,WAAY,SAACnR,EAAAA,GAAaA,CACzW5C,QAASmL,GACT0H,SAAU3H,KAAc0I,EAAAA,EAAcE,QACtCzX,MAAOgP,KAAcuI,EAAAA,EAAcG,SAAW,MAAQ,O,SACtD7I,KAAc0I,EAAAA,EAAcE,SAAU,SAACE,EAAAA,GAAIA,C,UAAC,SAACnU,EAAAA,MAAKA,CAClDC,QAAQ,yBACRsC,OAAQ,CAAEC,OAAoC,QAA5B/D,GAAAA,GAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,QAAAA,EAAAA,GAA8B4C,aACtC,SAACrB,EAAAA,MAAKA,CAChBC,QAAQ,qCACRsC,OAAQ,CAAE8G,YAAyC,QAA5B5K,GAAAA,GAAW0D,EAAAA,GAAMC,mBAAjB3D,IAAAA,QAAAA,EAAAA,GAA8B4C,YAClCmK,KAAcuI,EAAAA,EAAcG,WAAY,SAACnR,EAAAA,GAAaA,CACzE5C,QAASsL,GACTuH,SAAUxH,KAAcuI,EAAAA,EAAcE,QACtCzX,MAAO6O,KAAc0I,EAAAA,EAAcG,SAAW,MAAQ,O,SACtD1I,KAAcuI,EAAAA,EAAcE,SAAU,SAACE,EAAAA,GAAIA,C,UAAC,SAACnU,EAAAA,MAAKA,CAClDC,QAAQ,yBACRsC,OAAQ,CAAEC,OAAoC,QAA5B/D,GAAAA,GAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,QAAAA,EAAAA,GAA8B4C,aACtC,SAACrB,EAAAA,MAAKA,CAChBC,QAAQ,qCACRsC,OAAQ,CAAE8G,YAAyC,QAA5B5K,GAAAA,GAAW0D,EAAAA,GAAMG,mBAAjB7D,IAAAA,QAAAA,EAAAA,GAA8B4C,gBACrB,SAAC+S,EAAAA,GAAWA,CAC5CjU,QAAS,KACP8J,IAAe,EAAK,EAEtB+I,UAAWjJ,IAAWsB,KAAc0I,EAAAA,EAAcG,UAAY1I,KAAcuI,EAAAA,EAAcG,SAC1F7Q,OAAQ0G,MAAahI,GAAcI,EAAAA,GAAMC,eAAiBL,GAAcI,EAAAA,GAAMG,Y,UAC/E,SAAClE,GAAAA,GAAIA,CAAC6E,SAAU,GAAIvC,WAAW,U,SAAW2C,KAAS,SAACrD,EAAAA,MAAKA,CAACC,QAAQ,iCAAqF,SAACoU,EAAAA,EAAgBA,CAAAA,GAAKlD,IAAwQ,SAAC3S,EAAAA,EAAyBA,CAC9cR,KAAMmT,GACN1S,WAAY,CAACA,GAAW2D,WAAY3D,GAAW6D,cAFgJmC,KAAS5C,IAAesE,KAAcQ,EAAAA,GAAUuC,SAAU,SAACvJ,EAAAA,GAAUA,CAAC+C,MAAO,CAAE4R,SAAU,QAAS9X,MAAO,OAAQ+X,SAAU,QAAS1E,UAAW,Q,UAAU,SAAC2E,EAAAA,GAAmBA,CAACC,cAAe/O,GAAmBjB,KAAMA,OAAwB,SAvEta,SAACiQ,EAAAA,EAAaA,CAAAA,EA2EzB,C,4BC/Ve,SAASC,KACtB,MAAMC,GAAsBC,EAAAA,GAAAA,gBAAeC,GAAAA,aAAaC,aAClD,YAAErQ,EAAW,YAAEC,IAAgBC,EAAAA,EAAAA,KACrC,GAAIgQ,EAAqB,C,IAKJlQ,EAA+BC,EAJlD,MAAMqQ,EAAM,IAAIC,IAAI,uBAAwBC,OAAOC,SAASC,QAO5D,OANI1Q,GACFsQ,EAAIK,aAAaC,OAAO,YAAa5Q,GAEnCC,IAAeD,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAa6Q,kBAAkB5Q,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAa4Q,gBAC7DP,EAAIK,aAAaC,OAAO,YAAa3Q,IAEhC,SAAC6Q,EAAAA,GAAQA,CAACC,GAAIT,EAAIjE,SAAWiE,EAAIU,OAAQC,SAAO,GACzD,CACA,OAAIjR,GAAeC,GAAeD,EAAY6Q,gBAAkB5Q,EAAY4Q,eACnE,SAACC,EAAAA,GAAQA,CAACC,GAAI,WAAW/Q,IAAeiR,SAAO,KAEjD,SAACC,GAAcA,CAAAA,EACxB,C,mCCpBA,MAAMC,EAAM,I,SAAIC,UAAS,EAAG,GACrB,SAAS5J,EAAwB9D,EAAO2N,GAC7C,GAAIA,EAASpS,SAAS,IAAMoS,EAAS5N,YAAY0N,GAC/C,MAAM,IAAIG,MAAM,uBAElB,MAAO,CAAC5N,EAAM6N,SAASJ,EAAIK,SAASH,IAAWlP,SAAUuB,EAAM6N,SAASJ,EAAI9M,IAAIgN,IAAWlP,SAC7F,C","sources":["../../../node_modules/react-feather/dist/icons/chevron-up.js","../../../node_modules/react-feather/dist/icons/plus.js","components/swap/UnsupportedCurrencyFooter.tsx","pages/AddLiquidityV2/ConfirmAddModalBottom.tsx","pages/AddLiquidityV2/PoolPriceBar.tsx","state/mint/hooks.tsx","pages/AddLiquidityV2/index.tsx","pages/AddLiquidityV2/redirects.tsx","utils/calculateSlippageAmount.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ChevronUp=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"polyline\",{points:\"18 15 12 9 6 15\"}))}));ChevronUp.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ChevronUp.displayName=\"ChevronUp\";export default ChevronUp;","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Plus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"12\",y1:\"5\",x2:\"12\",y2:\"19\"}),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Plus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Plus.displayName=\"Plus\";export default Plus;","\"use strict\";\nimport { ButtonEmpty } from \"components/Button/buttons\";\nimport Card, { OutlineCard } from \"components/Card/cards\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow, RowBetween } from \"components/deprecated/Row\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { CloseIcon, ExternalLink, ThemedText } from \"theme/components\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Text } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { SafetyLevel } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nconst DetailsFooter = styled.div`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  background-color: ${({ theme }) => theme.surface2};\n  z-index: ${Z_INDEX.deprecated_zero};\n\n  transform: ${({ show }) => show ? \"translateY(0%)\" : \"translateY(-100%)\"};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`;\nconst StyledButtonEmpty = styled(ButtonEmpty)`\n  text-decoration: none;\n`;\nconst AddressText = styled(Text)`\n  color: ${({ theme }) => theme.accent1};\n  font-size: 12px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 10px;\n`}\n`;\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies\n}) {\n  const { chainId } = useAccount();\n  const [showDetails, setShowDetails] = useState(false);\n  const tokens = chainId && currencies ? currencies.map((currency) => {\n    return currency?.wrapped;\n  }) : [];\n  return <DetailsFooter show={show}><Modal\n    name={ModalName.UnsupportedCurrency}\n    isModalOpen={showDetails}\n    onClose={() => setShowDetails(false)}\n    padding={0}\n  ><Card padding=\"2rem\"><AutoColumn gap=\"lg\"><RowBetween><ThemedText.DeprecatedMediumHeader><Trans i18nKey=\"common.unsupportedAsset_other\" /></ThemedText.DeprecatedMediumHeader><CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" /></RowBetween>{tokens.map((token) => {\n    return <UnsupportedTokenCard key={token?.address?.concat(\"not-supported\")} token={token} chainId={chainId} />;\n  })}<AutoColumn gap=\"lg\"><ThemedText.DeprecatedBody fontWeight={535}><Trans i18nKey=\"swap.limitedAssets.warning\" /></ThemedText.DeprecatedBody></AutoColumn></AutoColumn></Card></Modal><StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\"><Text color=\"$accent1\"><Trans i18nKey=\"swap.unsupportedAssets.readMore\" /></Text></StyledButtonEmpty></DetailsFooter>;\n}\nfunction UnsupportedTokenCard({ token, chainId }) {\n  const currencyInfo = useCurrencyInfo(token);\n  if (!token || !currencyInfo?.isSpam && currencyInfo?.safetyLevel === SafetyLevel.Verified) {\n    return null;\n  }\n  return <OutlineCard key={token?.address?.concat(\"not-supported\")} data-testid=\"unsupported-token-card\"><AutoColumn gap=\"10px\"><AutoRow gap=\"5px\" align=\"center\"><CurrencyLogo currency={token} size={24} /><ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody></AutoRow>{chainId && <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}><AddressText>{shortenAddress(token.address)}</AddressText></ExternalLink>}</AutoColumn></OutlineCard>;\n}\n","\"use strict\";\nimport { ButtonPrimary } from \"components/Button/buttons\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { Trans } from \"react-i18next\";\nimport { Text } from \"rebass\";\nimport { Field } from \"state/mint/actions\";\nimport { ThemedText } from \"theme/components\";\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd\n}) {\n  const depositedAmtA = currencies[Field.CURRENCY_A]?.symbol;\n  const depositedAmtB = currencies[Field.CURRENCY_B]?.symbol;\n  return <><RowBetween><ThemedText.DeprecatedBody><Trans i18nKey=\"common.amountDeposited.label\" values={{ amount: depositedAmtA }} /></ThemedText.DeprecatedBody><RowFixed><CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: \"8px\" }} /><ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</ThemedText.DeprecatedBody></RowFixed></RowBetween><RowBetween><ThemedText.DeprecatedBody><Trans i18nKey=\"common.amountDeposited.label\" values={{ amount: depositedAmtB }} /></ThemedText.DeprecatedBody><RowFixed><CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: \"8px\" }} /><ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</ThemedText.DeprecatedBody></RowFixed></RowBetween><RowBetween><ThemedText.DeprecatedBody><Trans i18nKey=\"pool.rates\" /></ThemedText.DeprecatedBody><ThemedText.DeprecatedBody>{`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${currencies[Field.CURRENCY_B]?.symbol}`}</ThemedText.DeprecatedBody></RowBetween><RowBetween style={{ justifyContent: \"flex-end\" }}><ThemedText.DeprecatedBody>{`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${currencies[Field.CURRENCY_A]?.symbol}`}</ThemedText.DeprecatedBody></RowBetween><RowBetween><ThemedText.DeprecatedBody><Trans i18nKey=\"pool.shareOf\" /></ThemedText.DeprecatedBody><ThemedText.DeprecatedBody>{noLiquidity ? \"100\" : poolTokenPercentage?.toSignificant(4)}%\n        </ThemedText.DeprecatedBody></RowBetween><ButtonPrimary style={{ margin: \"20px 0 0 0\" }} onClick={onAdd}><Text fontWeight={535} fontSize={20}>{noLiquidity ? <Trans i18nKey=\"pool.createAndSupply\" /> : <Trans i18nKey=\"pool.confirmSupply\" />}</Text></ButtonPrimary></>;\n}\n","\"use strict\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow } from \"components/deprecated/Row\";\nimport { ONE_BIPS } from \"constants/misc\";\nimport { useTheme } from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { Text } from \"rebass\";\nimport { Field } from \"state/mint/actions\";\nimport { ThemedText } from \"theme/components\";\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price\n}) {\n  const theme = useTheme();\n  let invertedPrice;\n  try {\n    invertedPrice = price?.invert()?.toSignificant(6);\n  } catch (error) {\n    invertedPrice = void 0;\n  }\n  return <AutoColumn gap=\"md\"><AutoRow justify=\"space-around\" gap=\"4px\"><AutoColumn justify=\"center\"><ThemedText.DeprecatedBlack data-testid=\"currency-b-price\">{price?.toSignificant(6) ?? \"-\"}</ThemedText.DeprecatedBlack><Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: currencies[Field.CURRENCY_B]?.symbol, symbolB: currencies[Field.CURRENCY_A]?.symbol }}\n  /></Text></AutoColumn><AutoColumn justify=\"center\"><ThemedText.DeprecatedBlack data-testid=\"currency-a-price\">{invertedPrice ?? \"-\"}</ThemedText.DeprecatedBlack><Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: currencies[Field.CURRENCY_A]?.symbol, symbolB: currencies[Field.CURRENCY_B]?.symbol }}\n  /></Text></AutoColumn><AutoColumn justify=\"center\"><ThemedText.DeprecatedBlack>{noLiquidity && price ? \"100\" : (poolTokenPercentage?.lessThan(ONE_BIPS) ? \"<0.01\" : poolTokenPercentage?.toFixed(2)) ?? \"0\"}\n            %\n          </ThemedText.DeprecatedBlack><Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}><Trans i18nKey=\"addLiquidity.shareOfPool\" /></Text></AutoColumn></AutoRow></AutoColumn>;\n}\n","\"use strict\";\nimport { CurrencyAmount, Percent, Price } from \"@uniswap/sdk-core\";\nimport { ConnectWalletButtonText } from \"components/NavBar/accountCTAsExperimentUtils\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useTotalSupply } from \"hooks/useTotalSupply\";\nimport { PairState, useV2Pair } from \"hooks/useV2Pairs\";\nimport JSBI from \"jsbi\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { useCallback, useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useCurrencyBalances } from \"state/connection/hooks\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { Field, typeInput } from \"state/mint/actions\";\nimport { logger } from \"utilities/src/logger/logger\";\nconst ZERO = JSBI.BigInt(0);\nexport function useMintState() {\n  return useAppSelector((state) => state.mint);\n}\nexport function useMintActionHandlers(noLiquidity) {\n  const dispatch = useAppDispatch();\n  const onFieldAInput = useCallback(\n    (typedValue) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }));\n    },\n    [dispatch, noLiquidity]\n  );\n  const onFieldBInput = useCallback(\n    (typedValue) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }));\n    },\n    [dispatch, noLiquidity]\n  );\n  return {\n    onFieldAInput,\n    onFieldBInput\n  };\n}\nexport function useDerivedMintInfo(currencyA, currencyB) {\n  const account = useAccount();\n  const { independentField, typedValue, otherTypedValue } = useMintState();\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A;\n  const currencies = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? void 0,\n      [Field.CURRENCY_B]: currencyB ?? void 0\n    }),\n    [currencyA, currencyB]\n  );\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]);\n  const totalSupply = useTotalSupply(pair?.liquidityToken);\n  const noLiquidity = pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) || Boolean(\n    pairState === PairState.EXISTS && pair && JSBI.equal(pair.reserve0.quotient, ZERO) && JSBI.equal(pair.reserve1.quotient, ZERO)\n  );\n  const balances = useCurrencyBalances(\n    account.address,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  );\n  const currencyBalances = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1]\n  };\n  const independentAmount = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  );\n  const dependentAmount = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseCurrencyAmount(otherTypedValue, currencies[dependentField]);\n      }\n      return void 0;\n    } else if (independentAmount) {\n      const wrappedIndependentAmount = independentAmount?.wrapped;\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped];\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA;\n        const dependentTokenAmount = dependentField === Field.CURRENCY_B ? pair.priceOf(tokenA).quote(wrappedIndependentAmount) : pair.priceOf(tokenB).quote(wrappedIndependentAmount);\n        return dependentCurrency?.isNative ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient) : dependentTokenAmount;\n      }\n      return void 0;\n    } else {\n      return void 0;\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair]);\n  const parsedAmounts = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount\n    };\n  }, [dependentAmount, independentAmount, independentField]);\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount2, [Field.CURRENCY_B]: currencyBAmount2 } = parsedAmounts;\n      if (currencyAAmount2?.greaterThan(0) && currencyBAmount2?.greaterThan(0)) {\n        const value = currencyBAmount2.divide(currencyAAmount2);\n        return new Price(currencyAAmount2.currency, currencyBAmount2.currency, value.denominator, value.numerator);\n      }\n      return void 0;\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped;\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : void 0;\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts]);\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount2, [Field.CURRENCY_B]: currencyBAmount2 } = parsedAmounts;\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount2?.wrapped, currencyBAmount2?.wrapped];\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB);\n      } catch (error2) {\n        logger.warn(\n          \"mint/hooks\",\n          \"useDerivedMintInfo\",\n          `Error getLiquidityMinted: ${error2}. Total supply: ${totalSupply}, tokenAmountA: ${tokenAmountA}, tokenAmountB: ${tokenAmountB}`,\n          { error: error2 }\n        );\n        return void 0;\n      }\n    } else {\n      return void 0;\n    }\n  }, [parsedAmounts, pair, totalSupply]);\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient);\n    } else {\n      return void 0;\n    }\n  }, [liquidityMinted, totalSupply]);\n  let error;\n  if (!account.isConnected) {\n    error = <ConnectWalletButtonText />;\n  }\n  if (pairState === PairState.INVALID) {\n    error = error ?? <Trans i18nKey=\"common.invalidPair\" />;\n  }\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans i18nKey=\"common.noAmount.error\" />;\n  }\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts;\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = <Trans\n      i18nKey=\"common.insufficientTokenBalance.error\"\n      values={{\n        tokenSymbol: currencies[Field.CURRENCY_A]?.symbol\n      }}\n    />;\n  }\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = <Trans\n      i18nKey=\"common.insufficientTokenBalance.error\"\n      values={{\n        tokenSymbol: currencies[Field.CURRENCY_B]?.symbol\n      }}\n    />;\n  }\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  };\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { InterfaceElementName, InterfaceEventName, LiquidityEventName } from \"@uniswap/analytics-events\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { Percent, V2_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { computePairAddress } from \"@uniswap/v2-sdk\";\nimport { FeeAmount } from \"@uniswap/v3-sdk\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { ButtonError, ButtonLight, ButtonPrimary } from \"components/Button/buttons\";\nimport { BlueCard, LightCard } from \"components/Card/cards\";\nimport CurrencyInputPanel from \"components/CurrencyInputPanel\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { ConnectWalletButtonText } from \"components/NavBar/accountCTAsExperimentUtils\";\nimport { AddRemoveTabs } from \"components/NavigationTabs\";\nimport { MinimalPositionCard } from \"components/PositionCard\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"components/TransactionConfirmationModal\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { AutoColumn, ColumnCenter } from \"components/deprecated/Column\";\nimport Row, { AutoRow, RowBetween, RowFlat } from \"components/deprecated/Row\";\nimport UnsupportedCurrencyFooter from \"components/swap/UnsupportedCurrencyFooter\";\nimport { ZERO_PERCENT } from \"constants/misc\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { ApprovalState, useApproveCallback } from \"hooks/useApproveCallback\";\nimport { useV2RouterContract } from \"hooks/useContract\";\nimport { useEthersSigner } from \"hooks/useEthersSigner\";\nimport { useIsSwapUnsupported } from \"hooks/useIsSwapUnsupported\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useGetTransactionDeadline } from \"hooks/useTransactionDeadline\";\nimport { PairState } from \"hooks/useV2Pairs\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { ConfirmAddModalBottom } from \"pages/AddLiquidityV2/ConfirmAddModalBottom\";\nimport { PoolPriceBar } from \"pages/AddLiquidityV2/PoolPriceBar\";\nimport AppBody from \"pages/App/AppBody\";\nimport { Dots, Wrapper } from \"pages/LegacyPool/styled\";\nimport { useCallback, useState } from \"react\";\nimport { Plus } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Field } from \"state/mint/actions\";\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from \"state/mint/hooks\";\nimport { useTransactionAdder } from \"state/transactions/hooks\";\nimport { TransactionType } from \"state/transactions/types\";\nimport { useUserSlippageToleranceWithDefault } from \"state/user/hooks\";\nimport { ThemedText } from \"theme/components\";\nimport { Text } from \"ui/src\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nimport { calculateGasMargin } from \"utils/calculateGasMargin\";\nimport { calculateSlippageAmount } from \"utils/calculateSlippageAmount\";\nimport { currencyId } from \"utils/currencyId\";\nimport { maxAmountSpend } from \"utils/maxAmountSpend\";\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 1e4);\nconst AddLiquidityHeaderContainer = styled(AutoColumn)`\n  gap: 20px;\n  margin-bottom: 16px;\n`;\nexport default function AddLiquidity() {\n  const { currencyIdA, currencyIdB } = useParams();\n  const navigate = useNavigate();\n  const account = useAccount();\n  const signer = useEthersSigner();\n  const theme = useTheme();\n  const trace = useTrace();\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const wrappedNativeCurrency = account.status === \"connected\" && account.chainId ? WRAPPED_NATIVE_CURRENCY[account.chainId] : void 0;\n  const oneCurrencyIsWETH = Boolean(\n    account.chainId && wrappedNativeCurrency && (currencyA && currencyA.equals(wrappedNativeCurrency) || currencyB && currencyB.equals(wrappedNativeCurrency))\n  );\n  const accountDrawer = useAccountDrawer();\n  const { independentField, typedValue, otherTypedValue } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA ?? void 0, currencyB ?? void 0);\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity);\n  const isValid = !error;\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false);\n  const getDeadline = useGetTransactionDeadline();\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE);\n  const [txHash, setTxHash] = useState(\"\");\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? \"\"\n  };\n  const currency0AmountUsd = useUSDCValue(parsedAmounts[Field.CURRENCY_A]);\n  const currency1AmountUsd = useUSDCValue(parsedAmounts[Field.CURRENCY_B]);\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field])\n      };\n    },\n    {}\n  );\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? \"0\")\n      };\n    },\n    {}\n  );\n  const router = useV2RouterContract();\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router?.address);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router?.address);\n  const addTransaction = useTransactionAdder();\n  const networkSupportsV2 = useNetworkSupportsV2();\n  async function onAdd() {\n    if (account.status !== \"connected\" || !signer || !router || !networkSupportsV2) {\n      return;\n    }\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts;\n    const deadline = await getDeadline();\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0]\n    };\n    let estimate, method, args, value;\n    if (currencyA.isNative || currencyB.isNative) {\n      const tokenBIsETH = currencyB.isNative;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [\n        (tokenBIsETH ? currencyA : currencyB)?.wrapped?.address ?? \"\",\n        // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(),\n        // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n        // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n        // eth min\n        account.address,\n        deadline.toHexString()\n      ];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString());\n    } else {\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [\n        currencyA?.wrapped?.address ?? \"\",\n        currencyB?.wrapped?.address ?? \"\",\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account.address,\n        deadline.toHexString()\n      ];\n      value = null;\n    }\n    setAttemptingTxn(true);\n    await estimate(...args, value ? { value } : {}).then(\n      (estimatedGasLimit) => method(...args, {\n        ...value ? { value } : {},\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then((response) => {\n        setAttemptingTxn(false);\n        const transactionInfo = {\n          type: TransactionType.ADD_LIQUIDITY_V2_POOL,\n          baseCurrencyId: currencyId(currencyA),\n          expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? \"0\",\n          quoteCurrencyId: currencyId(currencyB),\n          expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? \"0\"\n        };\n        addTransaction(response, transactionInfo);\n        setTxHash(response.hash);\n        sendAnalyticsEvent(LiquidityEventName.ADD_LIQUIDITY_SUBMITTED, {\n          ...transactionInfo,\n          ...getLPBaseAnalyticsProperties({\n            trace,\n            fee: FeeAmount.MEDIUM,\n            version: ProtocolVersion.V2,\n            poolId: computePairAddress({\n              factoryAddress: V2_FACTORY_ADDRESSES[currencyA.chainId],\n              tokenA: currencyA.wrapped,\n              tokenB: currencyB.wrapped\n            }),\n            currency0: currencyA,\n            currency1: currencyB,\n            currency0AmountUsd,\n            currency1AmountUsd,\n            chainId: account.chainId\n          }),\n          createPosition: false,\n          transaction_hash: response.hash\n        });\n      })\n    ).catch((error2) => {\n      setAttemptingTxn(false);\n      if (error2?.code !== 4001) {\n        logger.error(error2, {\n          tags: {\n            file: \"AddLiquidityV2\",\n            function: \"AddLiquidity\"\n          }\n        });\n      }\n    });\n  }\n  const modalHeader = () => {\n    return <AddLiquidityHeaderContainer>{noLiquidity ? <LightCard mt=\"20px\" $borderRadius=\"20px\"><AutoRow justify=\"space-between\"><Text fontSize={24} fontWeight=\"$medium\" lineHeight={42} mr={10}>{currencies[Field.CURRENCY_A]?.symbol + \"/\" + currencies[Field.CURRENCY_B]?.symbol}</Text><DoubleCurrencyLogo currencies={[currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]]} size={30} /></AutoRow></LightCard> : <><RowFlat style={{ marginTop: \"20px\" }}><Text fontSize={48} fontWeight=\"$medium\" lineHeight={42} mr={10}>{liquidityMinted?.toSignificant(6)}</Text><DoubleCurrencyLogo currencies={[currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]]} size={30} /></RowFlat><Row><Text fontSize={24}>{currencies[Field.CURRENCY_A]?.symbol + \"/\" + currencies[Field.CURRENCY_B]?.symbol + \" Pool Tokens\"}</Text></Row><Text fontSize={12} textAlign=\"left\" pt={8} fontStyle=\"italic\" color=\"$neutral2\"><Trans i18nKey=\"pool.estimatePercentToRevert\" values={{ allowed: allowedSlippage.toSignificant(4) }} /></Text></>}</AddLiquidityHeaderContainer>;\n  };\n  const modalBottom = () => {\n    return <ConfirmAddModalBottom\n      price={price}\n      currencies={currencies}\n      parsedAmounts={parsedAmounts}\n      noLiquidity={noLiquidity}\n      onAdd={onAdd}\n      poolTokenPercentage={poolTokenPercentage}\n    />;\n  };\n  const pendingText = <Trans\n    i18nKey=\"pool.supplyingMaths\"\n    values={{\n      amtA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6),\n      symA: currencies[Field.CURRENCY_A]?.symbol,\n      amtB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6),\n      symB: currencies[Field.CURRENCY_B]?.symbol\n    }}\n  />;\n  const handleCurrencyASelect = useCallback(\n    (currencyA2) => {\n      const newCurrencyIdA = currencyId(currencyA2);\n      if (newCurrencyIdA === currencyIdB) {\n        navigate(`/add/v2/${currencyIdB}/${currencyIdA}`);\n      } else {\n        navigate(`/add/v2/${newCurrencyIdA}/${currencyIdB}`);\n      }\n    },\n    [currencyIdB, navigate, currencyIdA]\n  );\n  const handleCurrencyBSelect = useCallback(\n    (currencyB2) => {\n      const newCurrencyIdB = currencyId(currencyB2);\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          navigate(`/add/v2/${currencyIdB}/${newCurrencyIdB}`);\n        } else {\n          navigate(`/add/v2/${newCurrencyIdB}`);\n        }\n      } else {\n        navigate(`/add/v2/${currencyIdA ? currencyIdA : \"ETH\"}/${newCurrencyIdB}`);\n      }\n    },\n    [currencyIdA, navigate, currencyIdB]\n  );\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    if (txHash) {\n      onFieldAInput(\"\");\n    }\n    setTxHash(\"\");\n  }, [onFieldAInput, txHash]);\n  const { pathname } = useLocation();\n  const isCreate = pathname.includes(\"/create\");\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B);\n  if (!networkSupportsV2) {\n    return <V2Unsupported />;\n  }\n  return <><AppBody><AddRemoveTabs creating={isCreate} adding={true} autoSlippage={DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE} /><Wrapper><TransactionConfirmationModal\n    isOpen={showConfirm}\n    onDismiss={handleDismissConfirmation}\n    attemptingTxn={attemptingTxn}\n    hash={txHash}\n    reviewContent={() => <ConfirmationModalContent\n      title={noLiquidity ? <Trans i18nKey=\"pool.areCreating\" /> : <Trans i18nKey=\"common.youWillReceive\" />}\n      onDismiss={handleDismissConfirmation}\n      topContent={modalHeader}\n      bottomContent={modalBottom}\n    />}\n    pendingText={pendingText}\n    currencyToAdd={pair?.liquidityToken}\n  /><AutoColumn gap=\"20px\">{noLiquidity || (isCreate ? <ColumnCenter><BlueCard><AutoColumn gap=\"10px\"><ThemedText.DeprecatedLink fontWeight={535} color=\"accent1\"><Trans i18nKey=\"pool.areFirst\" /></ThemedText.DeprecatedLink><ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\"><Trans i18nKey=\"pool.ratioTokenToPrice\" /></ThemedText.DeprecatedLink><ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\"><Trans i18nKey=\"pool.onceHappyReview\" /></ThemedText.DeprecatedLink></AutoColumn></BlueCard></ColumnCenter> : <ColumnCenter><BlueCard><AutoColumn gap=\"10px\"><ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\"><b><Trans i18nKey=\"common.tip.label\" /></b>{\" \"}<Trans i18nKey=\"pool.liquidityPoolFeesNotice\" /></ThemedText.DeprecatedLink></AutoColumn></BlueCard></ColumnCenter>)}<CurrencyInputPanel\n    value={formattedAmounts[Field.CURRENCY_A]}\n    onUserInput={onFieldAInput}\n    onMax={() => {\n      onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? \"\");\n    }}\n    onCurrencySelect={handleCurrencyASelect}\n    showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n    currency={currencies[Field.CURRENCY_A] ?? null}\n    id=\"add-liquidity-input-tokena\"\n  /><ColumnCenter><Plus size=\"16\" color={theme.neutral2} /></ColumnCenter><CurrencyInputPanel\n    value={formattedAmounts[Field.CURRENCY_B]}\n    onUserInput={onFieldBInput}\n    onCurrencySelect={handleCurrencyBSelect}\n    onMax={() => {\n      onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? \"\");\n    }}\n    showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n    currency={currencies[Field.CURRENCY_B] ?? null}\n    id=\"add-liquidity-input-tokenb\"\n  />{currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && <><LightCard padding=\"0px\" $borderRadius=\"20px\"><RowBetween padding=\"1rem\"><ThemedText.DeprecatedSubHeader fontWeight={535} fontSize={14}>{noLiquidity ? <Trans i18nKey=\"pool.initialShare\" /> : <Trans i18nKey=\"pool.share\" />}</ThemedText.DeprecatedSubHeader></RowBetween>{\" \"}<LightCard padding=\"1rem\" $borderRadius=\"20px\"><PoolPriceBar\n    currencies={currencies}\n    poolTokenPercentage={poolTokenPercentage}\n    noLiquidity={noLiquidity}\n    price={price}\n  /></LightCard></LightCard></>}{addIsUnsupported ? <ButtonPrimary disabled={true}><ThemedText.DeprecatedMain mb=\"4px\"><Trans i18nKey=\"common.unsupportedAsset_one\" /></ThemedText.DeprecatedMain></ButtonPrimary> : account.status !== \"connected\" ? <Trace\n    logPress\n    eventOnTrigger={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n    properties={{ received_swap_quote: false }}\n    element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n  ><ButtonLight onClick={accountDrawer.open}><ConnectWalletButtonText /></ButtonLight></Trace> : <AutoColumn gap=\"md\">{(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && <RowBetween>{approvalA !== ApprovalState.APPROVED && <ButtonPrimary\n    onClick={approveACallback}\n    disabled={approvalA === ApprovalState.PENDING}\n    width={approvalB !== ApprovalState.APPROVED ? \"48%\" : \"100%\"}\n  >{approvalA === ApprovalState.PENDING ? <Dots><Trans\n    i18nKey=\"pools.approving.amount\"\n    values={{ amount: currencies[Field.CURRENCY_A]?.symbol }}\n  /></Dots> : <Trans\n    i18nKey=\"account.transactionSummary.approve\"\n    values={{ tokenSymbol: currencies[Field.CURRENCY_A]?.symbol }}\n  />}</ButtonPrimary>}{approvalB !== ApprovalState.APPROVED && <ButtonPrimary\n    onClick={approveBCallback}\n    disabled={approvalB === ApprovalState.PENDING}\n    width={approvalA !== ApprovalState.APPROVED ? \"48%\" : \"100%\"}\n  >{approvalB === ApprovalState.PENDING ? <Dots><Trans\n    i18nKey=\"pools.approving.amount\"\n    values={{ amount: currencies[Field.CURRENCY_B]?.symbol }}\n  /></Dots> : <Trans\n    i18nKey=\"account.transactionSummary.approve\"\n    values={{ tokenSymbol: currencies[Field.CURRENCY_B]?.symbol }}\n  />}</ButtonPrimary>}</RowBetween>}<ButtonError\n    onClick={() => {\n      setShowConfirm(true);\n    }}\n    disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n  ><Text fontSize={20} fontWeight=\"$medium\">{error ?? <Trans i18nKey=\"pool.supply\" />}</Text></ButtonError></AutoColumn>}</AutoColumn></Wrapper></AppBody><SwitchLocaleLink />{!addIsUnsupported ? pair && !noLiquidity && pairState !== PairState.INVALID ? <AutoColumn style={{ minWidth: \"20rem\", width: \"100%\", maxWidth: \"400px\", marginTop: \"1rem\" }}><MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} /></AutoColumn> : null : <UnsupportedCurrencyFooter\n    show={addIsUnsupported}\n    currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n  />}</>;\n}\n","\"use strict\";\nimport AddLiquidityV2 from \"pages/AddLiquidityV2/index\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nexport default function AddLiquidityV2WithTokenRedirects() {\n  const isLPRedesignEnabled = useFeatureFlag(FeatureFlags.LPRedesign);\n  const { currencyIdA, currencyIdB } = useParams();\n  if (isLPRedesignEnabled) {\n    const url = new URL(\"/positions/create/v2\", window.location.origin);\n    if (currencyIdA) {\n      url.searchParams.append(\"currencyA\", currencyIdA);\n    }\n    if (currencyIdB && currencyIdA?.toLowerCase() !== currencyIdB?.toLowerCase()) {\n      url.searchParams.append(\"currencyB\", currencyIdB);\n    }\n    return <Navigate to={url.pathname + url.search} replace />;\n  }\n  if (currencyIdA && currencyIdB && currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Navigate to={`/add/v2/${currencyIdA}`} replace />;\n  }\n  return <AddLiquidityV2 />;\n}\n","\"use strict\";\nimport { Fraction } from \"@uniswap/sdk-core\";\nconst ONE = new Fraction(1, 1);\nexport function calculateSlippageAmount(value, slippage) {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) {\n    throw new Error(\"Unexpected slippage\");\n  }\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient];\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","displayName","Plus","x1","y1","x2","y2","DetailsFooter","styled","div","theme","neutral2","surface2","Z_INDEX","deprecated_zero","show","StyledButtonEmpty","ButtonEmpty","AddressText","Text","accent1","deprecated_mediaWidth","deprecated_upToSmall","UnsupportedCurrencyFooter","currencies","chainId","useAccount","showDetails","setShowDetails","useState","tokens","map","currency","wrapped","Modal","name","ModalName","UnsupportedCurrency","isModalOpen","onClose","padding","Card","AutoColumn","gap","RowBetween","ThemedText","DeprecatedMediumHeader","Trans","i18nKey","CloseIcon","onClick","data-testid","token","UnsupportedTokenCard","address","concat","DeprecatedBody","fontWeight","currencyInfo","useCurrencyInfo","isSpam","safetyLevel","SafetyLevel","Verified","OutlineCard","AutoRow","align","CurrencyLogo","symbol","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","shortenAddress","ConfirmAddModalBottom","noLiquidity","price","parsedAmounts","poolTokenPercentage","onAdd","depositedAmtA","Field","CURRENCY_A","depositedAmtB","CURRENCY_B","values","amount","RowFixed","style","marginRight","toSignificant","justifyContent","invert","ButtonPrimary","margin","fontSize","PoolPriceBar","useTheme","invertedPrice","error","justify","DeprecatedBlack","pt","symbolA","symbolB","lessThan","ONE_BIPS","toFixed","ZERO","JSBI","useMintState","useAppSelector","state","mint","DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE","Percent","AddLiquidityHeaderContainer","AddLiquidity","router","pair","currencyIdA","currencyIdB","useParams","navigate","useNavigate","account","signer","useEthersSigner","trace","useTrace","currencyA","useCurrency","currencyB","wrappedNativeCurrency","status","WRAPPED_NATIVE_CURRENCY","oneCurrencyIsWETH","Boolean","equals","accountDrawer","useAccountDrawer","independentField","typedValue","otherTypedValue","dependentField","pairState","currencyBalances","liquidityMinted","useMemo","useV2Pair","totalSupply","useTotalSupply","liquidityToken","PairState","NOT_EXISTS","quotient","EXISTS","reserve0","reserve1","balances","useCurrencyBalances","independentAmount","tryParseCurrencyAmount","dependentAmount","wrappedIndependentAmount","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","isNative","CurrencyAmount","fromRawAmount","wrappedCurrencyA","currencyAAmount2","currencyBAmount2","greaterThan","value","divide","Price","denominator","numerator","tokenAmountA","tokenAmountB","getLiquidityMinted","error2","logger","warn","add","isConnected","ConnectWalletButtonText","INVALID","currencyAAmount","currencyBAmount","tokenSymbol","useDerivedMintInfo","onFieldAInput","onFieldBInput","dispatch","useAppDispatch","useCallback","typeInput","field","useMintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","getDeadline","useGetTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","txHash","setTxHash","formattedAmounts","currency0AmountUsd","useUSDCValue","currency1AmountUsd","maxAmounts","reduce","accumulator","maxAmountSpend","atMaxAmounts","equalTo","useV2RouterContract","approvalA","approveACallback","useApproveCallback","approvalB","approveBCallback","addTransaction","useTransactionAdder","networkSupportsV2","useNetworkSupportsV2","parsedAmountA","parsedAmountB","deadline","amountsMin","calculateSlippageAmount","ZERO_PERCENT","estimate","method","args","tokenBIsETH","estimateGas","addLiquidityETH","toString","toHexString","BigNumber","from","addLiquidity","then","estimatedGasLimit","gasLimit","calculateGasMargin","response","transactionInfo","type","TransactionType","ADD_LIQUIDITY_V2_POOL","baseCurrencyId","currencyId","expectedAmountBaseRaw","quoteCurrencyId","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","ADD_LIQUIDITY_SUBMITTED","getLPBaseAnalyticsProperties","fee","FeeAmount","MEDIUM","version","ProtocolVersion","V2","poolId","computePairAddress","factoryAddress","V2_FACTORY_ADDRESSES","currency0","currency1","createPosition","transaction_hash","catch","code","tags","file","function","modalHeader","LightCard","mt","$borderRadius","lineHeight","mr","DoubleCurrencyLogo","RowFlat","marginTop","Row","textAlign","fontStyle","allowed","modalBottom","pendingText","amtA","symA","amtB","symB","handleCurrencyASelect","currencyA2","newCurrencyIdA","handleCurrencyBSelect","currencyB2","newCurrencyIdB","handleDismissConfirmation","pathname","useLocation","isCreate","includes","addIsUnsupported","useIsSwapUnsupported","AppBody","AddRemoveTabs","creating","adding","autoSlippage","Wrapper","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","currencyToAdd","ColumnCenter","BlueCard","DeprecatedLink","b","CurrencyInputPanel","onUserInput","onMax","toExact","onCurrencySelect","showMaxButton","id","DeprecatedSubHeader","disabled","DeprecatedMain","mb","Trace","logPress","eventOnTrigger","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","open","ApprovalState","NOT_APPROVED","PENDING","APPROVED","Dots","ButtonError","SwitchLocaleLink","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported","AddLiquidityV2WithTokenRedirects","isLPRedesignEnabled","useFeatureFlag","FeatureFlags","LPRedesign","url","URL","window","location","origin","searchParams","append","toLowerCase","Navigate","to","search","replace","AddLiquidityV2","ONE","Fraction","slippage","Error","multiply","subtract"],"sourceRoot":""}