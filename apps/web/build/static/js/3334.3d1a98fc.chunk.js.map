{"version":3,"file":"static/js/3334.3d1a98fc.chunk.js","mappings":"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","sources":["pages/NotFound/index.tsx","components/Pools/PoolDetails/ChartSection/index.tsx","components/Pools/PoolDetails/ChartSection/hooks.ts","components/Pools/PoolDetails/shared.ts","components/Pools/PoolDetails/PoolDetailsHeader.tsx","components/Pools/PoolDetails/PoolDetailsLink.tsx","components/Pools/PoolDetails/PoolDetailsStats.tsx","../../../packages/utilities/src/tokens/constants.ts","components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync.ts","utils/arrays.ts","components/AccountDrawer/MiniPortfolio/Pools/hooks.ts","components/AccountDrawer/MiniPortfolio/Pools/cache.ts","components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions.tsx","components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx","components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx","graphql/data/pools/usePoolTransactions.ts","components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx","components/Pools/PoolDetails/PoolDetailsTable.tsx","graphql/data/pools/usePoolData.ts","pages/PoolDetails/utils.ts","pages/PoolDetails/index.tsx"],"sourcesContent":["\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport darkImage from \"assets/images/404-page-dark.png\";\nimport lightImage from \"assets/images/404-page-light.png\";\nimport { SmallButtonPrimary } from \"components/Button/buttons\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsDarkMode } from \"theme/components/ThemeToggle\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled(Container)`\n  gap: 30px;\n`;\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`;\nexport default function NotFound({ title, subtitle, actionButton }) {\n  const isDarkMode = useIsDarkMode();\n  const isMobile = useIsMobile();\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero;\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge;\n  return <PageWrapper><Trace logImpression page={InterfacePageName.NOT_FOUND}><Header><Container>{title ?? <Title>404</Title>}{subtitle ?? <Paragraph color=\"neutral2\"><Trans i18nKey=\"common.pageNotFound\" /></Paragraph>}</Container><Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" /></Header>{actionButton ?? <SmallButtonPrimary as={Link} to=\"/\"><Trans i18nKey=\"notFound.oops\" /></SmallButtonPrimary>}</Trace></PageWrapper>;\n}\n","\"use strict\";\nimport { ProtocolVersion as RestProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { FeeAmount } from \"@uniswap/v3-sdk\";\nimport { ChartHeader } from \"components/Charts/ChartHeader\";\nimport { Chart, refitChartContentAtom } from \"components/Charts/ChartModel\";\nimport { LiquidityBarChartModel, useLiquidityBarData } from \"components/Charts/LiquidityChart\";\nimport { ChartSkeleton } from \"components/Charts/LoadingState\";\nimport { PriceChartDelta, PriceChartModel } from \"components/Charts/PriceChart\";\nimport { VolumeChart } from \"components/Charts/VolumeChart\";\nimport { ChartType, PriceChartType } from \"components/Charts/utils\";\nimport { parseProtocolVersion } from \"components/Liquidity/utils\";\nimport { usePDPPriceChartData, usePDPVolumeChartData } from \"components/Pools/PoolDetails/ChartSection/hooks\";\nimport { ChartActionsContainer, DEFAULT_PILL_TIME_SELECTOR_OPTIONS } from \"components/Tokens/TokenDetails/ChartSection\";\nimport { ChartTypeDropdown } from \"components/Tokens/TokenDetails/ChartSection/ChartTypeSelector\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { LoadingChart } from \"components/Tokens/TokenDetails/Skeleton\";\nimport {\n  DISPLAYS,\n  TimePeriodDisplay,\n  getTimePeriodFromDisplay\n} from \"components/Tokens/TokenTable/VolumeTimeFrameSelector\";\nimport { TimePeriod, gqlToCurrency, toHistoryDuration } from \"graphql/data/util\";\nimport { useAtomValue } from \"jotai/utils\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { EllipsisStyle, ThemedText } from \"theme/components\";\nimport { textFadeIn } from \"theme/styles\";\nimport { SegmentedControl, useMedia } from \"ui/src\";\nimport { Chain, ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { fromGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst PDP_CHART_HEIGHT_PX = 356;\nconst PDP_CHART_SELECTOR_OPTIONS = [ChartType.VOLUME, ChartType.PRICE, ChartType.LIQUIDITY];\nconst TimePeriodSelectorContainer = styled.div`\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`;\nconst ChartTypeSelectorContainer = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`;\nconst PDPChartTypeSelector = ({\n  chartType,\n  onChartTypeChange,\n  disabledOption\n}) => <ChartTypeSelectorContainer><ChartTypeDropdown\n  options={PDP_CHART_SELECTOR_OPTIONS}\n  currentChartType={chartType}\n  onSelectOption={onChartTypeChange}\n  disabledOption={disabledOption}\n/></ChartTypeSelectorContainer>;\nfunction usePDPChartState(poolData, tokenA, tokenB, isReversed, chain, protocolVersion) {\n  const [timePeriod, setTimePeriod] = useState(TimePeriod.DAY);\n  const [chartType, setChartType] = useState(ChartType.VOLUME);\n  const isV2 = protocolVersion === ProtocolVersion.V2;\n  const isV3 = protocolVersion === ProtocolVersion.V3;\n  const isV4 = protocolVersion === ProtocolVersion.V4;\n  const variables = {\n    addressOrId: poolData?.idOrAddress ?? \"\",\n    chain,\n    duration: toHistoryDuration(timePeriod),\n    isV4,\n    isV3,\n    isV2\n  };\n  const priceQuery = usePDPPriceChartData(\n    variables,\n    poolData,\n    isReversed ? tokenB : tokenA,\n    isReversed ? tokenA : tokenB,\n    protocolVersion\n  );\n  const volumeQuery = usePDPVolumeChartData(variables);\n  return useMemo(() => {\n    const activeQuery = (() => {\n      switch (chartType) {\n        case ChartType.PRICE:\n          return priceQuery;\n        case ChartType.VOLUME:\n          return volumeQuery;\n        case ChartType.LIQUIDITY:\n          return {\n            chartType: ChartType.LIQUIDITY,\n            entries: [],\n            loading: false,\n            dataQuality: DataQuality.VALID\n          };\n      }\n    })();\n    return {\n      timePeriod,\n      setTimePeriod,\n      setChartType,\n      activeQuery\n    };\n  }, [chartType, volumeQuery, priceQuery, timePeriod]);\n}\nexport default function ChartSection(props) {\n  const { defaultChainId } = useEnabledChains();\n  const breakpoints = useMedia();\n  const [currencyA, currencyB] = [\n    props.poolData?.token0 && gqlToCurrency(props.poolData.token0),\n    props.poolData?.token1 && gqlToCurrency(props.poolData.token1)\n  ];\n  const { setChartType, timePeriod, setTimePeriod, activeQuery } = usePDPChartState(\n    props.poolData,\n    currencyA?.wrapped,\n    currencyB?.wrapped,\n    props.isReversed,\n    props.chain ?? Chain.Ethereum,\n    props.poolData?.protocolVersion ?? ProtocolVersion.V3\n  );\n  const refitChartContent = useAtomValue(refitChartContentAtom);\n  const loading = props.loading || (activeQuery.chartType !== ChartType.LIQUIDITY ? activeQuery?.loading : false);\n  const ChartBody = (() => {\n    if (!currencyA || !currencyB || !props.poolData || !props.chain) {\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} />;\n    }\n    const selectedChartProps = {\n      ...props,\n      feeTier: Number(props.poolData.feeTier),\n      height: PDP_CHART_HEIGHT_PX,\n      timePeriod,\n      tokenA: currencyA.wrapped,\n      tokenB: currencyB.wrapped,\n      chainId: fromGraphQLChain(props.chain) ?? defaultChainId,\n      poolId: props.poolData.idOrAddress,\n      hooks: props.poolData.hookAddress,\n      version: parseProtocolVersion(props.poolData.protocolVersion) ?? RestProtocolVersion.V3,\n      tickSpacing: props.poolData.tickSpacing\n    };\n    if (activeQuery.chartType === ChartType.LIQUIDITY) {\n      return <LiquidityChart {...selectedChartProps} />;\n    }\n    if (activeQuery.dataQuality === DataQuality.INVALID || !currencyA || !currencyB) {\n      const errorText = loading ? void 0 : <Trans i18nKey=\"chart.error.pools\" />;\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} errorText={errorText} />;\n    }\n    const stale = activeQuery.dataQuality === DataQuality.STALE;\n    switch (activeQuery.chartType) {\n      case ChartType.PRICE:\n        return <PriceChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n      case ChartType.VOLUME:\n        return <VolumeChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n    }\n  })();\n  const filteredTimeOptions = useMemo(() => {\n    if (activeQuery.chartType === ChartType.PRICE) {\n      const filtered = DEFAULT_PILL_TIME_SELECTOR_OPTIONS.filter((option) => option.value !== TimePeriodDisplay.HOUR);\n      if (timePeriod === TimePeriod.HOUR) {\n        setTimePeriod(TimePeriod.DAY);\n      }\n      return {\n        options: filtered,\n        selected: DISPLAYS[timePeriod]\n      };\n    }\n    return {\n      options: DEFAULT_PILL_TIME_SELECTOR_OPTIONS,\n      selected: DISPLAYS[timePeriod]\n    };\n  }, [activeQuery.chartType, timePeriod, setTimePeriod]);\n  const disabledChartOption = props.poolData?.protocolVersion === ProtocolVersion.V2 ? ChartType.LIQUIDITY : void 0;\n  return <div data-testid=\"pdp-chart-container\">{ChartBody}<ChartActionsContainer><PDPChartTypeSelector\n    chartType={activeQuery.chartType}\n    onChartTypeChange={setChartType}\n    disabledOption={disabledChartOption}\n  />{activeQuery.chartType !== ChartType.LIQUIDITY && <TimePeriodSelectorContainer><SegmentedControl\n    fullWidth={breakpoints.sm}\n    options={filteredTimeOptions.options}\n    selectedOption={filteredTimeOptions.selected}\n    onSelectOption={(option) => {\n      const time = getTimePeriodFromDisplay(option);\n      if (time === timePeriod) {\n        refitChartContent?.();\n      } else {\n        setTimePeriod(time);\n      }\n    }}\n  /></TimePeriodSelectorContainer>}</ChartActionsContainer></div>;\n}\nconst PriceDisplayContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 4px;\n`;\nconst ChartPriceText = styled(ThemedText.HeadlineMedium)`\n  ${EllipsisStyle}\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 24px !important;\n    line-height: 32px !important;\n  }\n`;\nfunction PriceChart({\n  tokenA,\n  tokenB,\n  isReversed,\n  data,\n  stale\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const [primaryToken, referenceToken] = isReversed ? [tokenB, tokenA] : [tokenA, tokenB];\n  const params = useMemo(() => ({ data, stale, type: PriceChartType.LINE }), [data, stale]);\n  const { price } = useUSDCPrice(primaryToken);\n  const lastPrice = data[data.length - 1];\n  return <Chart height={PDP_CHART_HEIGHT_PX} Model={PriceChartModel} params={params}>{(crosshairData) => {\n    const displayValue = crosshairData ?? lastPrice;\n    const currencyBAmountRaw = Math.floor(\n      (displayValue.value ?? displayValue.close) * 10 ** referenceToken.decimals\n    );\n    const priceDisplay = <PriceDisplayContainer><ChartPriceText>{`1 ${primaryToken.symbol} = ${formatCurrencyAmount({\n      amount: CurrencyAmount.fromRawAmount(referenceToken, currencyBAmountRaw)\n    })} \n            ${referenceToken.symbol}`}</ChartPriceText><ChartPriceText color=\"neutral2\">{price ? \"(\" + formatPrice({ price }) + \")\" : \"\"}</ChartPriceText></PriceDisplayContainer>;\n    return <ChartHeader\n      value={priceDisplay}\n      additionalFields={<PriceChartDelta startingPrice={data[0]} endingPrice={displayValue} />}\n      valueFormatterType={NumberType.FiatTokenPrice}\n      time={crosshairData?.time}\n    />;\n  }}</Chart>;\n}\nconst FadeInHeading = styled(ThemedText.H1Medium)`\n  ${textFadeIn};\n  line-height: 32px;\n`;\nconst FadeInSubheader = styled(ThemedText.SubHeader)`\n  ${textFadeIn}\n`;\nfunction LiquidityTooltipDisplay({\n  data,\n  tokenADescriptor,\n  tokenBDescriptor,\n  currentTick\n}) {\n  const { t } = useTranslation();\n  const { formatNumber } = useFormatter();\n  if (!currentTick) {\n    return null;\n  }\n  const displayValue0 = data.tick >= currentTick ? formatNumber({\n    input: data.amount0Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  const displayValue1 = data.tick <= currentTick ? formatNumber({\n    input: data.amount1Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  return <><ThemedText.BodySmall>{t(\"liquidityPool.chart.tooltip.amount\", { token: tokenADescriptor, amount: displayValue0 })}</ThemedText.BodySmall><ThemedText.BodySmall>{t(\"liquidityPool.chart.tooltip.amount\", { token: tokenBDescriptor, amount: displayValue1 })}</ThemedText.BodySmall></>;\n}\nfunction LiquidityChart({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  poolId\n}) {\n  const { t } = useTranslation();\n  const tokenADescriptor = tokenA.symbol ?? tokenA.name ?? t(\"common.tokenA\");\n  const tokenBDescriptor = tokenB.symbol ?? tokenB.name ?? t(\"common.tokenB\");\n  const { tickData, activeTick, loading } = useLiquidityBarData({\n    tokenA,\n    tokenB,\n    feeTier,\n    isReversed,\n    chainId,\n    version,\n    tickSpacing,\n    hooks,\n    poolId\n  });\n  const theme = useTheme();\n  const params = useMemo(() => {\n    return {\n      data: tickData?.barData ?? [],\n      tokenAColor: isReversed ? theme.token1 : theme.token0,\n      tokenBColor: isReversed ? theme.token0 : theme.token1,\n      highlightColor: theme.surface3,\n      activeTick,\n      activeTickProgress: tickData?.activeRangePercentage\n    };\n  }, [activeTick, isReversed, theme, tickData]);\n  if (loading) {\n    return <LoadingChart />;\n  }\n  return <Chart\n    height={PDP_CHART_HEIGHT_PX}\n    Model={LiquidityBarChartModel}\n    params={params}\n    TooltipBody={\n      // TODO(WEB-3628): investigate potential off-by-one or subgraph issues causing calculated TVL issues on 1 bip pools\n      feeTier !== FeeAmount.LOWEST ? ({ data }) => <LiquidityTooltipDisplay\n        data={data}\n        tokenADescriptor={tokenADescriptor}\n        tokenBDescriptor={tokenBDescriptor}\n        currentTick={tickData?.activeRangeData?.tick}\n      /> : void 0\n    }\n  >{(crosshair) => {\n    const displayPoint = crosshair ?? tickData?.activeRangeData;\n    const display = <div><FadeInHeading>{`1 ${tokenADescriptor} = ${displayPoint?.price0} ${tokenBDescriptor}`}</FadeInHeading><FadeInHeading>{`1 ${tokenBDescriptor} = ${displayPoint?.price1} ${tokenADescriptor}`}</FadeInHeading>{displayPoint && displayPoint.tick === activeTick && <FadeInSubheader color=\"neutral2\" paddingTop=\"4px\"><Trans i18nKey=\"pool.activeRange\" /></FadeInSubheader>}</div>;\n    return <ChartHeader value={display} />;\n  }}</Chart>;\n}\n","\"use strict\";\nimport { ChartType } from \"components/Charts/utils\";\nimport { checkDataQuality, withUTCTimestamp } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { usePoolPriceChartData } from \"hooks/usePoolPriceChartData\";\nimport { useMemo } from \"react\";\nimport {\n  usePoolVolumeHistoryQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nexport function usePDPPriceChartData(variables, poolData, tokenA, tokenB, protocolVersion) {\n  return usePoolPriceChartData(variables, tokenA, tokenB, protocolVersion, poolData?.token0?.address ?? \"\");\n}\nexport function usePDPVolumeChartData(variables) {\n  const { data, loading } = usePoolVolumeHistoryQuery({ variables });\n  return useMemo(() => {\n    const { historicalVolume } = data?.v2Pair ?? data?.v3Pool ?? {};\n    const entries = historicalVolume?.filter((amt) => amt !== null).map(withUTCTimestamp) ?? [];\n    const dataQuality = checkDataQuality(entries, ChartType.VOLUME, variables.duration);\n    return { chartType: ChartType.VOLUME, entries, loading, dataQuality };\n  }, [data?.v2Pair, data?.v3Pool, loading, variables.duration]);\n}\n","\"use strict\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport styled from \"lib/styled-components\";\nexport const DetailBubble = styled(LoadingBubble)`\n  height: ${({ $height }) => $height ? `${$height}px` : \"16px\"};\n  width: ${({ $width }) => $width ? `${$width}px` : \"80px\"};\n`;\nexport const SmallDetailBubble = styled(LoadingBubble)`\n  height: 20px;\n  width: 20px;\n  border-radius: 100px;\n`;\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport { PoolDetailsBadge } from \"components/Pools/PoolTable/PoolTable\";\nimport ShareButton from \"components/Tokens/TokenDetails/ShareButton\";\nimport { ActionButtonStyle, ActionMenuFlyoutStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { ChevronRight, ExternalLink as ExternalLinkIcon } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ClickableStyle,\n  ClickableTamaguiStyle,\n  EllipsisStyle,\n  ExternalLink,\n  TamaguiClickableStyle,\n  ThemedText\n} from \"theme/components\";\nimport { textFadeIn } from \"theme/styles\";\nimport { Flex, TouchableArea } from \"ui/src\";\nimport { ArrowUpDown } from \"ui/src/components/icons/ArrowUpDown\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  &:hover {\n    // Override hover behavior from ExternalLink\n    opacity: 1;\n  }\n`;\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: 'flex-start';\n  width: 100%;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`;\nconst IconBubble = styled(LoadingBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nexport function PoolDetailsBreadcrumb({ chainId, poolAddress, token0, token1, loading }) {\n  const { defaultChainId } = useEnabledChains();\n  const chainName = toGraphQLChain(chainId ?? defaultChainId);\n  const exploreOrigin = `/explore/${chainName.toLowerCase()}`;\n  const poolsOrigin = `/explore/pools/${chainName.toLowerCase()}`;\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to={exploreOrigin}><Trans i18nKey=\"common.explore\" /> <ChevronRight size={14} /></BreadcrumbNavLink><BreadcrumbNavLink to={poolsOrigin}><Trans i18nKey=\"common.pools\" /> <ChevronRight size={14} /></BreadcrumbNavLink>{loading || !poolAddress ? <DetailBubble $width={200} /> : <CurrentPageBreadcrumb address={poolAddress} poolName={`${token0?.symbol} / ${token1?.symbol}`} />}</BreadcrumbNavContainer>;\n}\nconst StyledPoolDetailsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  width: max-content;\n  align-items: center;\n`;\nconst PoolName = styled(ThemedText.HeadlineMedium)`\n  font-size: 24px !important;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 18px !important;\n    line-height: 24px !important;\n  }\n`;\nconst PoolDetailsTitle = ({\n  token0,\n  token1,\n  chainId,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n  hookAddress\n}) => {\n  const { formatPercent } = useFormatter();\n  const { defaultChainId } = useEnabledChains();\n  const graphQLChain = toGraphQLChain(chainId ?? defaultChainId);\n  const feePercent = feeTier && formatPercent(new Percent(feeTier, BIPS_BASE * 100));\n  return <StyledPoolDetailsTitle><div><PoolName><StyledLink\n    to={getTokenDetailsURL({\n      address: token0?.address,\n      chain: graphQLChain\n    })}\n  >{token0?.symbol}</StyledLink>\n          &nbsp;/&nbsp;\n          <StyledLink\n    to={getTokenDetailsURL({\n      address: token1?.address,\n      chain: graphQLChain\n    })}\n  >{token1?.symbol}</StyledLink></PoolName></div><Flex row gap=\"$gap4\" alignItems=\"center\"><PoolDetailsBadge variant=\"body3\" $position=\"left\">{protocolVersion?.toLowerCase()}</PoolDetailsBadge>{hookAddress && <ExternalLink href={getExplorerLink(chainId ?? defaultChainId, hookAddress, ExplorerDataType.ADDRESS)}><PoolDetailsBadge variant=\"body3\" {...TamaguiClickableStyle}>{shortenAddress(hookAddress, 0)}</PoolDetailsBadge></ExternalLink>}{!!feePercent && <PoolDetailsBadge variant=\"body3\" $position=\"right\">{feePercent}</PoolDetailsBadge>}</Flex><TouchableArea hoverStyle={{ opacity: 0.8 }} onPress={toggleReversed}><ArrowUpDown\n    {...ClickableTamaguiStyle}\n    size=\"$icon.20\"\n    testID=\"toggle-tokens-reverse-arrows\"\n    rotate=\"90deg\"\n    color=\"$neutral2\"\n  /></TouchableArea></StyledPoolDetailsTitle>;\n};\nconst ContractsDropdownRowContainer = styled(Row)`\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n  gap: 12px;\n  padding: 10px 8px;\n  border-radius: 8px;\n  ${EllipsisStyle}\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`;\nconst ContractsDropdownRow = ({\n  address,\n  chainId,\n  tokens\n}) => {\n  const theme = useTheme();\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const isPool = tokens.length === 2;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const isNative = address === NATIVE_CHAIN_ID;\n  const explorerUrl = chainId && address && getExplorerLink(\n    chainId,\n    address,\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  if (!chainId || !explorerUrl) {\n    return <ContractsDropdownRowContainer><DetailBubble $width={117} /></ContractsDropdownRowContainer>;\n  }\n  return <StyledExternalLink href={explorerUrl}><ContractsDropdownRowContainer><Row gap=\"sm\">{isPool ? <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={24} /> : <CurrencyLogo currency={currency} size={24} />}<ThemedText.BodyPrimary>{isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.symbol}</ThemedText.BodyPrimary><ThemedText.BodySecondary>{shortenAddress(address)}</ThemedText.BodySecondary></Row><ExternalLinkIcon size=\"16px\" stroke={theme.neutral2} /></ContractsDropdownRowContainer></StyledExternalLink>;\n};\nconst ContractsModalContainer = {\n  ...ActionMenuFlyoutStyle,\n  minWidth: 235,\n  borderRadius: \"$rounded16\"\n};\nconst PoolDetailsHeaderActions = ({\n  chainId,\n  poolAddress,\n  poolName,\n  token0,\n  token1\n}) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const [contractsModalIsOpen, toggleContractsModal] = useState(false);\n  return <Row width=\"max-content\" justify=\"flex-end\" gap=\"sm\"><DropdownSelector\n    isOpen={contractsModalIsOpen}\n    toggleOpen={toggleContractsModal}\n    menuLabel={chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={theme.neutral1} />}\n    internalMenuItems={<><ContractsDropdownRow address={poolAddress} chainId={chainId} tokens={[token0, token1]} /><ContractsDropdownRow address={token0?.address} chainId={chainId} tokens={[token0]} /><ContractsDropdownRow address={token1?.address} chainId={chainId} tokens={[token1]} /></>}\n    tooltipText={t(\"pool.explorers\")}\n    hideChevron\n    buttonStyle={ActionButtonStyle}\n    dropdownStyle={ContractsModalContainer}\n    adaptToSheet={false}\n  /><ShareButton name={poolName} utmSource=\"share-pool\" /></Row>;\n};\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  ${ClickableStyle}\n`;\nexport function PoolDetailsHeader({\n  chainId,\n  poolAddress,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  hookAddress,\n  toggleReversed,\n  loading\n}) {\n  const screenSize = useScreenSize();\n  const shouldColumnBreak = !screenSize[\"sm\"];\n  const poolName = `${token0?.symbol} / ${token1?.symbol}`;\n  const currencies = useMemo(\n    () => token0 && token1 ? [gqlToCurrency(token0), gqlToCurrency(token1)] : [],\n    [token0, token1]\n  );\n  if (loading) {\n    return <HeaderContainer data-testid=\"pdp-header-loading-skeleton\">{shouldColumnBreak ? <Column gap=\"sm\" style={{ width: \"100%\" }}><IconBubble /><DetailBubble $height={40} $width={137} /></Column> : <Row gap=\"sm\"><IconBubble /><DetailBubble $height={40} $width={137} /></Row>}</HeaderContainer>;\n  }\n  return <HeaderContainer>{shouldColumnBreak ? <Column gap=\"sm\" style={{ width: \"100%\" }}><Row gap=\"md\" justify=\"space-between\">{chainId && <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />}<PoolDetailsHeaderActions\n    chainId={chainId}\n    poolAddress={poolAddress}\n    poolName={poolName}\n    token0={token0}\n    token1={token1}\n  /></Row><PoolDetailsTitle\n    token0={token0}\n    token1={token1}\n    chainId={chainId}\n    feeTier={feeTier}\n    protocolVersion={protocolVersion}\n    toggleReversed={toggleReversed}\n  /></Column> : <><Row gap=\"md\">{chainId && <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />}<PoolDetailsTitle\n    token0={token0}\n    token1={token1}\n    chainId={chainId}\n    feeTier={feeTier}\n    protocolVersion={protocolVersion}\n    toggleReversed={toggleReversed}\n    hookAddress={hookAddress}\n  /></Row><PoolDetailsHeaderActions\n    chainId={chainId}\n    poolAddress={poolAddress}\n    poolName={poolName}\n    token0={token0}\n    token1={token1}\n  /></>}</HeaderContainer>;\n}\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { DetailBubble, SmallDetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport Tooltip, { TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { ChevronRight, Copy } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from \"theme/components\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { isAddress, shortenAddress } from \"utilities/src/addresses\";\nconst TokenName = styled(ThemedText.BodyPrimary)`\n  display: none;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    display: block;\n  }\n  ${EllipsisStyle}\n`;\nconst TokenTextWrapper = styled(Row)`\n  gap: 8px;\n  margin-right: 12px;\n  ${EllipsisStyle}\n  ${({ isClickable }) => isClickable && ClickableStyle}\n`;\nconst SymbolText = styled(ThemedText.BodyPrimary)`\n  flex-shrink: 0;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    color: ${({ theme }) => theme.neutral2};\n  }\n`;\nconst CopyAddress = styled(Row)`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  flex-shrink: 0;\n  ${ClickableStyle}\n`;\nconst StyledCopyIcon = styled(Copy)`\n  width: 16px;\n  height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  flex-shrink: 0;\n`;\nconst ExplorerWrapper = styled.div`\n  padding: 8px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  display: flex;\n  ${ClickableStyle}\n`;\nconst ButtonsRow = styled(Row)`\n  gap: 8px;\n  flex-shrink: 0;\n  width: max-content;\n`;\nexport function PoolDetailsLink({ address, chainId, tokens, loading }) {\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const isNative = address === NATIVE_CHAIN_ID;\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    const checksummedAddress = isAddress(address);\n    checksummedAddress && setCopied(checksummedAddress);\n  }, [address, setCopied]);\n  const isPool = tokens.length === 2;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const explorerUrl = address && chainId && getExplorerLink(\n    chainId,\n    address,\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  const navigate = useNavigate();\n  const { defaultChainId } = useEnabledChains();\n  const chainName = toGraphQLChain(chainId ?? defaultChainId);\n  const handleTokenTextClick = useCallback(() => {\n    if (!isPool) {\n      navigate(getTokenDetailsURL({ address: tokens[0]?.address, chain: chainName }));\n    }\n  }, [navigate, tokens, isPool, chainName]);\n  const [truncateAddress, setTruncateAddress] = useState(false);\n  const onTextRender = useCallback(\n    (textRef) => {\n      if (textRef) {\n        const hasOverflow = textRef.clientWidth < textRef.scrollWidth;\n        if (hasOverflow) {\n          setTruncateAddress((prev) => prev ? \"both\" : \"start\");\n        }\n      }\n    },\n    // This callback must run after it sets truncateAddress to 'start' to see if it needs to 'both'.\n    // It checks if the textRef has overflow, and sets truncateAddress accordingly to avoid it.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [truncateAddress]\n  );\n  if (loading || !address || !chainId) {\n    return <Row gap=\"8px\" padding=\"6px 0px\"><SmallDetailBubble /><DetailBubble $width={117} /></Row>;\n  }\n  return <Row align=\"space-between\"><TokenTextWrapper\n    data-testid={isPool ? `pdp-pool-logo-${tokens[0]?.symbol}-${tokens[1]?.symbol}` : `pdp-token-logo-${tokens[0]?.symbol}`}\n    isClickable={!isPool}\n    onClick={handleTokenTextClick}\n    ref={onTextRender}\n  >{isPool ? <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={20} /> : <CurrencyLogo currency={currency} size={20} />}<TokenName>{isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.name}</TokenName><SymbolText>{isPool ? `${tokens[0]?.symbol} / ${tokens[1]?.symbol}` : <Row gap=\"4px\">{tokens[0]?.symbol} <ChevronRight size={16} color={theme.neutral2} /></Row>}</SymbolText></TokenTextWrapper><ButtonsRow>{!isNative && <Tooltip placement=\"bottom\" size={TooltipSize.Max} show={isCopied} text={t(\"common.copied\")}><CopyAddress data-testid={`copy-address-${address}`} onClick={copy}>{shortenAddress(address, truncateAddress ? 2 : void 0, truncateAddress === \"both\" ? 2 : void 0)}<StyledCopyIcon /></CopyAddress></Tooltip>}{explorerUrl && <ExternalLink href={explorerUrl} data-testid={`explorer-url-${explorerUrl}`}><ExplorerWrapper>{chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"16px\" height=\"16px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"16px\" height=\"16px\" fill={theme.neutral1} />}</ExplorerWrapper></ExternalLink>}</ButtonsRow></Row>;\n}\n","\"use strict\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport { DeltaArrow } from \"components/Tokens/TokenDetails/Delta\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, unwrapToken } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport styled, { css, useTheme } from \"lib/styled-components\";\nimport { useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ClickableStyle, ThemedText } from \"theme/components\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst HeaderText = styled(Text)`\n  font-weight: 485;\n  font-size: 24px;\n  line-height: 36px;\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: 100%;\n  }\n`;\nconst StatsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  width: 100%;\n  z-index: 1;\n  margin-top: ${({ loaded }) => loaded && \"-24px\"};\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: row;\n    background: transparent;\n    flex-wrap: wrap;\n    padding: 20px 0px;\n    justify-content: space-between;\n    margin-top: 0px;\n  }\n`;\nconst StatItemColumn = styled(Column)`\n  gap: 8px;\n  flex: 1;\n  min-width: 180px;\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    min-width: 150px;\n  }\n`;\nconst PoolBalanceSymbols = styled(Row)`\n  justify-content: space-between;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n  }\n`;\nconst PoolBalanceTokenNamesContainer = styled(Row)`\n  font-weight: 485;\n  font-size: 16px;\n  line-height: 24px;\n  width: max-content;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n    width: 100%;\n  }\n`;\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`;\nconst leftBarChartStyles = css`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-right: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst rightBarChartStyles = css`\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-left: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst BalanceChartSide = styled.div`\n  height: 8px;\n  width: ${({ percent }) => percent * 100}%;\n  background: ${({ $color }) => $color};\n  ${({ isLeft }) => isLeft ? leftBarChartStyles : rightBarChartStyles}\n`;\nconst StatSectionBubble = styled(LoadingBubble)`\n  width: 180px;\n  height: 40px;\n`;\nconst StatHeaderBubble = styled(LoadingBubble)`\n  width: 116px;\n  height: 24px;\n  border-radius: 8px;\n`;\nconst PoolBalanceTokenNames = ({ token, chainId }) => {\n  const isScreenSize = useScreenSize();\n  const screenIsNotLarge = isScreenSize[\"lg\"];\n  const { formatNumber } = useFormatter();\n  const unwrappedToken = chainId ? unwrapToken(chainId, token) : token;\n  const isNative = unwrappedToken?.address === NATIVE_CHAIN_ID;\n  const currency = isNative && chainId ? nativeOnChain(chainId) : token.currency;\n  const { defaultChainId } = useEnabledChains();\n  return <PoolBalanceTokenNamesContainer>{!screenIsNotLarge && <CurrencyLogo currency={currency} size={20} style={{ marginRight: \"8px\" }} />}{formatNumber({\n    input: token.tvl,\n    type: NumberType.TokenQuantityStats\n  })}\n      &nbsp;\n      <StyledLink\n    to={getTokenDetailsURL({\n      address: unwrappedToken.address,\n      chain: toGraphQLChain(chainId ?? defaultChainId)\n    })}\n  >{unwrappedToken.symbol}</StyledLink></PoolBalanceTokenNamesContainer>;\n};\nexport function PoolDetailsStats({ poolData, isReversed, chainId, loading }) {\n  const isScreenSize = useScreenSize();\n  const screenIsNotLarge = isScreenSize[\"lg\"];\n  const theme = useTheme();\n  const currency0 = useCurrency(poolData?.token0?.address, chainId);\n  const currency1 = useCurrency(poolData?.token1?.address, chainId);\n  const [token0, token1] = useMemo(() => {\n    if (poolData && poolData.tvlToken0 && poolData.token0Price && poolData.tvlToken1 && poolData.token1Price) {\n      const fullWidth = poolData?.tvlToken0 * poolData?.token0Price + poolData?.tvlToken1 * poolData?.token1Price;\n      const token0FullData = {\n        ...poolData?.token0,\n        price: poolData?.token0Price,\n        tvl: poolData?.tvlToken0,\n        percent: poolData?.tvlToken0 * poolData?.token0Price / fullWidth,\n        currency: currency0\n      };\n      const token1FullData = {\n        ...poolData?.token1,\n        price: poolData?.token1Price,\n        tvl: poolData?.tvlToken1,\n        percent: poolData?.tvlToken1 * poolData?.token1Price / fullWidth,\n        currency: currency1\n      };\n      return isReversed ? [token1FullData, token0FullData] : [token0FullData, token1FullData];\n    } else {\n      return [void 0, void 0];\n    }\n  }, [currency0, currency1, isReversed, poolData]);\n  if (loading || !token0 || !token1 || !poolData) {\n    return <StatsWrapper><HeaderText><StatHeaderBubble /></HeaderText>{Array.from({ length: 4 }).map((_, i) => <Column gap=\"md\" key={`loading-info-row-${i}`}><DetailBubble /><StatSectionBubble /></Column>)}</StatsWrapper>;\n  }\n  return <StatsWrapper loaded><HeaderText><Trans i18nKey=\"common.stats\" /></HeaderText><StatItemColumn><ThemedText.BodySecondary><Trans i18nKey=\"pool.balances\" /></ThemedText.BodySecondary><PoolBalanceSymbols><PoolBalanceTokenNames token={token0} chainId={chainId} /><PoolBalanceTokenNames token={token1} chainId={chainId} /></PoolBalanceSymbols>{screenIsNotLarge && <Row data-testid=\"pool-balance-chart\"><BalanceChartSide percent={token0.percent} $color={theme.token0} isLeft={true} /><BalanceChartSide percent={token1.percent} $color={theme.token1} isLeft={false} /></Row>}</StatItemColumn>{poolData?.tvlUSD && <StatItem\n    title={<Trans i18nKey=\"common.totalValueLocked\" />}\n    value={poolData.tvlUSD}\n    delta={poolData.tvlUSDChange}\n  />}{poolData?.volumeUSD24H !== void 0 && <StatItem\n    title={<Trans i18nKey=\"stats.24volume\" />}\n    value={poolData.volumeUSD24H}\n    delta={poolData.volumeUSD24HChange}\n  />}{poolData?.volumeUSD24H !== void 0 && poolData?.feeTier !== void 0 && <StatItem\n    title={<Trans i18nKey=\"stats.24fees\" />}\n    value={poolData.volumeUSD24H * (poolData.feeTier / 1e6)}\n  />}</StatsWrapper>;\n}\nconst StatsTextContainer = styled(Row)`\n  gap: 4px;\n  width: 100%;\n  align-items: flex-end;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n    gap: 0px;\n    align-items: flex-start;\n  }\n`;\nconst StatItemText = styled(Text)`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 36px;\n  font-weight: 485;\n  line-height: 44px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`;\nfunction StatItem({ title, value, delta }) {\n  const { formatNumber, formatDelta } = useFormatter();\n  return <StatItemColumn><ThemedText.BodySecondary>{title}</ThemedText.BodySecondary><StatsTextContainer><StatItemText>{formatNumber({\n    input: value,\n    type: NumberType.FiatTokenStats\n  })}</StatItemText>{!!delta && <Row width=\"max-content\" padding=\"4px 0px\"><DeltaArrow delta={delta} /><ThemedText.BodySecondary>{formatDelta(delta)}</ThemedText.BodySecondary></Row>}</StatsTextContainer></StatItemColumn>;\n}\n","export const DEFAULT_ERC20_DECIMALS = 18;\n","\"use strict\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport { Interface } from \"ethers/lib/utils\";\nimport ERC20_ABI from \"uniswap/src/abis/erc20.json\";\nimport { isAddress } from \"utilities/src/addresses\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { DEFAULT_ERC20_DECIMALS } from \"utilities/src/tokens/constants\";\nimport { arrayToSlices } from \"utils/arrays\";\nimport { buildCurrencyKey, currencyKey } from \"utils/currencyKey\";\nexport const DEFAULT_GAS_LIMIT = 1e6;\nconst Erc20 = new Interface(ERC20_ABI);\nconst Erc20Bytes32 = new Interface(ERC20_ABI);\nasync function fetchChunk(multicall, chunk) {\n  try {\n    return (await multicall.callStatic.multicall(chunk)).returnData;\n  } catch (error) {\n    if (error.code === -32603 || error.message?.indexOf(\"execution ran out of gas\") !== -1) {\n      if (chunk.length > 1) {\n        const half = Math.floor(chunk.length / 2);\n        return Promise.all([\n          fetchChunk(multicall, chunk.slice(0, half)),\n          fetchChunk(multicall, chunk.slice(half, chunk.length))\n        ]).then(([c0, c1]) => [...c0, ...c1]);\n      }\n    }\n    logger.debug(\"getTokensAsync\", \"fetchChunk\", \"Error fetching chunk\", { error, extra: { chunk } });\n    throw error;\n  }\n}\nfunction tryParseToken(address, chainId, data) {\n  try {\n    const [nameData, symbolData, decimalsData, nameDataBytes32, symbolDataBytes32] = data;\n    const name = nameData.success ? Erc20.decodeFunctionResult(\"name\", nameData.returnData)[0] : nameDataBytes32.success ? Erc20Bytes32.decodeFunctionResult(\"name\", nameDataBytes32.returnData)[0] : void 0;\n    const symbol = symbolData.success ? Erc20.decodeFunctionResult(\"symbol\", symbolData.returnData)[0] : symbolDataBytes32.success ? Erc20Bytes32.decodeFunctionResult(\"symbol\", symbolDataBytes32.returnData)[0] : void 0;\n    const decimals = decimalsData.success ? parseInt(decimalsData.returnData) : DEFAULT_ERC20_DECIMALS;\n    return new Token(chainId, address, decimals, symbol, name);\n  } catch (error) {\n    logger.debug(\"getTokensAsync\", \"tryParseToken\", \"Failed to parse token\", { error, address, chainId });\n    return void 0;\n  }\n}\nfunction parseTokens(addresses, chainId, returnData) {\n  const tokenDataSlices = arrayToSlices(returnData, 5);\n  return tokenDataSlices.reduce((acc, slice, index) => {\n    const parsedToken = tryParseToken(addresses[index], chainId, slice);\n    if (parsedToken) {\n      acc[parsedToken.address] = parsedToken;\n    }\n    return acc;\n  }, {});\n}\nconst createCalls = (target, callData) => callData.map((callData2) => ({ target, callData: callData2, gasLimit: DEFAULT_GAS_LIMIT }));\nfunction createCallsForToken(address) {\n  return createCalls(address, [\n    Erc20.encodeFunctionData(\"name\"),\n    Erc20.encodeFunctionData(\"symbol\"),\n    Erc20.encodeFunctionData(\"decimals\"),\n    Erc20Bytes32.encodeFunctionData(\"name\"),\n    Erc20Bytes32.encodeFunctionData(\"symbol\")\n  ]);\n}\nconst TokenPromiseCache = {};\nexport async function getTokensAsync(addresses, chainId, multicall) {\n  if (addresses.length === 0) {\n    return {};\n  }\n  const formattedAddresses = [];\n  const calls = [];\n  const previouslyCalledTokens = [];\n  addresses.forEach((tokenAddress) => {\n    const key = buildCurrencyKey(chainId, tokenAddress);\n    const previousCall = TokenPromiseCache[key];\n    if (previousCall !== void 0) {\n      previouslyCalledTokens.push(previousCall);\n    } else {\n      const formattedAddress = isAddress(tokenAddress);\n      if (!formattedAddress) {\n        return;\n      }\n      formattedAddresses.push(formattedAddress);\n      calls.push(...createCallsForToken(formattedAddress));\n    }\n  });\n  const calledTokens = fetchChunk(multicall, calls).then((returnData) => parseTokens(addresses, chainId, returnData));\n  formattedAddresses.forEach(\n    (address) => TokenPromiseCache[buildCurrencyKey(chainId, address)] = calledTokens.then((tokenMap2) => tokenMap2[address])\n  );\n  const tokenMap = await calledTokens;\n  const resolvedPreviousTokens = await Promise.all(previouslyCalledTokens);\n  resolvedPreviousTokens.forEach((token) => token && (tokenMap[currencyKey(token)] = token));\n  return tokenMap;\n}\n","\"use strict\";\nexport function arrayToSlices(items, size) {\n  if (items.length % size !== 0) {\n    throw new Error(\"Input array length must be a multiple of desired output size\");\n  }\n  return Array.from({ length: Math.floor(items.length / size) }, (_v, i) => items.slice(i * size, i * size + size));\n}\n","\"use strict\";\nimport { MULTICALL_ADDRESSES, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES as V3NFT_ADDRESSES } from \"@uniswap/sdk-core\";\nimport NFTPositionManagerJSON from \"@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\";\nimport MulticallJSON from \"@uniswap/v3-periphery/artifacts/contracts/lens/UniswapInterfaceMulticall.sol/UniswapInterfaceMulticall.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { RPC_PROVIDERS } from \"constants/providers\";\nimport { toContractInput } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useMemo } from \"react\";\nimport {\n  useUniswapPricesQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { useIsSupportedChainIdCallback } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { getContract } from \"utilities/src/contracts/getContract\";\nimport { currencyKey, currencyKeyFromGraphQL } from \"utils/currencyKey\";\nfunction useContractMultichain(addressMap, ABI, chainIds) {\n  const account = useAccount();\n  const { provider: walletProvider } = useWeb3React();\n  const isSupportedChain = useIsSupportedChainIdCallback();\n  return useMemo(() => {\n    const relevantChains = chainIds ?? Object.keys(addressMap).map((chainId) => parseInt(chainId)).filter((chainId) => isSupportedChain(chainId));\n    return relevantChains.reduce((acc, chainId) => {\n      const provider = walletProvider && account.chainId === chainId ? walletProvider : isSupportedChain(chainId) ? RPC_PROVIDERS[chainId] : void 0;\n      if (provider) {\n        acc[chainId] = getContract(addressMap[chainId] ?? \"\", ABI, provider);\n      }\n      return acc;\n    }, {});\n  }, [ABI, addressMap, chainIds, isSupportedChain, account.chainId, walletProvider]);\n}\nexport function useV3ManagerContracts(chainIds) {\n  return useContractMultichain(V3NFT_ADDRESSES, NFTPositionManagerJSON.abi, chainIds);\n}\nexport function useInterfaceMulticallContracts(chainIds) {\n  return useContractMultichain(MULTICALL_ADDRESSES, MulticallJSON.abi, chainIds);\n}\nexport function usePoolPriceMap(positions) {\n  const { defaultChainId } = useEnabledChains();\n  const contracts = useMemo(() => {\n    if (!positions || !positions.length) {\n      return [];\n    }\n    const contractMap = positions.reduce((acc, { pool: { token0, token1 } }) => {\n      acc[currencyKey(token0)] = toContractInput(token0, defaultChainId);\n      acc[currencyKey(token1)] = toContractInput(token1, defaultChainId);\n      return acc;\n    }, {});\n    return Object.values(contractMap);\n  }, [defaultChainId, positions]);\n  const { data, loading } = useUniswapPricesQuery({ variables: { contracts }, skip: !contracts.length });\n  const priceMap = useMemo(\n    () => data?.tokens?.reduce((acc, current) => {\n      if (current) {\n        acc[currencyKeyFromGraphQL(current)] = current.project?.markets?.[0]?.price?.value;\n      }\n      return acc;\n    }, {}) ?? {},\n    [data?.tokens]\n  );\n  return { priceMap, pricesLoading: loading && !data };\n}\n","\"use strict\";\nimport { getTokensAsync } from \"components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync\";\nimport { useInterfaceMulticallContracts } from \"components/AccountDrawer/MiniPortfolio/Pools/hooks\";\nimport { atom, useAtom } from \"jotai\";\nimport { atomWithStorage } from \"jotai/utils\";\nimport ms from \"ms\";\nimport { useCallback } from \"react\";\nimport { deserializeToken, serializeToken } from \"uniswap/src/utils/currency\";\nimport { buildCurrencyKey, currencyKey } from \"utils/currencyKey\";\nconst POSITION_CACHE_EXPIRY = ms(`1m`);\nconst cachedPositionsAtom = atom({});\nexport function useCachedPositions(account) {\n  const [cachedPositions, setCachedPositions] = useAtom(cachedPositionsAtom);\n  const setPositionsAndStaleTimeout = useCallback(\n    (positions) => {\n      setCachedPositions((cache) => ({ ...cache, [account]: { result: positions, stale: false } }));\n      setTimeout(\n        () => setCachedPositions((cache) => {\n          if (positions === cache[account]?.result) {\n            return { ...cache, [account]: { result: positions, stale: true } };\n          } else {\n            return cache;\n          }\n        }),\n        POSITION_CACHE_EXPIRY\n      );\n    },\n    [account, setCachedPositions]\n  );\n  return [cachedPositions[account], setPositionsAndStaleTimeout];\n}\nconst poolAddressKey = (details, chainId) => `${chainId}-${details.token0}-${details.token1}-${details.fee}`;\nconst poolAddressCacheAtom = atomWithStorage(\"poolCache\", {});\nexport function usePoolAddressCache() {\n  const [cache, updateCache] = useAtom(poolAddressCacheAtom);\n  const get = useCallback(\n    (details, chainId) => cache[poolAddressKey(details, chainId)],\n    [cache]\n  );\n  const set = useCallback(\n    (details, chainId, address) => updateCache((c) => ({ ...c, [poolAddressKey(details, chainId)]: address })),\n    [updateCache]\n  );\n  return { get, set };\n}\nconst tokenCacheAtom = atomWithStorage(\"cachedAsyncTokens\", {});\nfunction useTokenCache() {\n  const [cache, setCache] = useAtom(tokenCacheAtom);\n  const get = useCallback(\n    (chainId, address) => {\n      const entry = cache[buildCurrencyKey(chainId, address)];\n      return entry ? deserializeToken(entry) : void 0;\n    },\n    [cache]\n  );\n  const set = useCallback(\n    (token) => {\n      if (token) {\n        setCache((cache2) => ({ ...cache2, [currencyKey(token)]: serializeToken(token) }));\n      }\n    },\n    [setCache]\n  );\n  return { get, set };\n}\nexport function useGetCachedTokens(chains) {\n  const multicallContracts = useInterfaceMulticallContracts(chains);\n  const tokenCache = useTokenCache();\n  const fetchRemoteTokens = useCallback(\n    async (addresses, chainId) => {\n      const fetched = await getTokensAsync(addresses, chainId, multicallContracts[chainId]);\n      Object.values(fetched).forEach(tokenCache.set);\n      return fetched;\n    },\n    [multicallContracts, tokenCache]\n  );\n  const getTokens = useCallback(\n    async (addresses, chainId) => {\n      const local = {};\n      const missing = /* @__PURE__ */ new Set();\n      addresses.forEach((address) => {\n        const cached = tokenCache.get(chainId, address);\n        cached ? local[address] = cached : missing.add(address);\n      });\n      const fetched = await fetchRemoteTokens([...missing], chainId);\n      return { ...local, ...fetched };\n    },\n    [fetchRemoteTokens, tokenCache]\n  );\n  return getTokens;\n}\n","\"use strict\";\nimport { CurrencyAmount, Token, V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport IUniswapV3PoolStateJSON from \"@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json\";\nimport { Pool, Position, computePoolAddress } from \"@uniswap/v3-sdk\";\nimport {\n  useCachedPositions,\n  useGetCachedTokens,\n  usePoolAddressCache\n} from \"components/AccountDrawer/MiniPortfolio/Pools/cache\";\nimport { DEFAULT_GAS_LIMIT } from \"components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync\";\nimport {\n  useInterfaceMulticallContracts,\n  usePoolPriceMap,\n  useV3ManagerContracts\n} from \"components/AccountDrawer/MiniPortfolio/Pools/hooks\";\nimport { BigNumber } from \"ethers/lib/ethers\";\nimport { Interface } from \"ethers/lib/utils\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { DEFAULT_ERC20_DECIMALS } from \"utilities/src/tokens/constants\";\nimport { currencyKey } from \"utils/currencyKey\";\nfunction createPositionInfo(owner, chainId, details, slot0, tokenA, tokenB) {\n  const pool = new Pool(tokenA, tokenB, details.fee, slot0.sqrtPriceX96.toString(), 0, slot0.tick);\n  const position = new Position({\n    pool,\n    liquidity: details.liquidity.toString(),\n    tickLower: details.tickLower,\n    tickUpper: details.tickUpper\n  });\n  const inRange = slot0.tick >= details.tickLower && slot0.tick < details.tickUpper;\n  const closed = details.liquidity.eq(0);\n  return { owner, chainId, pool, position, details, inRange, closed };\n}\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1);\nexport default function useMultiChainPositions(account) {\n  const { chains } = useEnabledChains();\n  const pms = useV3ManagerContracts(chains);\n  const multicalls = useInterfaceMulticallContracts(chains);\n  const getTokens = useGetCachedTokens(chains);\n  const poolAddressCache = usePoolAddressCache();\n  const [cachedPositions, setPositions] = useCachedPositions(account);\n  const positions = cachedPositions?.result;\n  const positionsFetching = useRef(false);\n  const positionsLoading = !cachedPositions?.result && positionsFetching.current;\n  const [feeMap, setFeeMap] = useState({});\n  const { priceMap, pricesLoading } = usePoolPriceMap(positions);\n  const fetchPositionFees = useCallback(\n    async (pm, positionIds, chainId) => {\n      const callData = positionIds.map(\n        (id) => pm.interface.encodeFunctionData(\"collect\", [\n          { tokenId: id, recipient: account, amount0Max: MAX_UINT128, amount1Max: MAX_UINT128 }\n        ])\n      );\n      const fees = (await pm.callStatic.multicall(callData)).reduce(\n        (acc, feeBytes, index) => {\n          const key = chainId.toString() + positionIds[index];\n          acc[key] = pm.interface.decodeFunctionResult(\"collect\", feeBytes);\n          return acc;\n        },\n        {}\n      );\n      setFeeMap((prev) => ({ ...prev, ...fees }));\n    },\n    [account]\n  );\n  const fetchPositionIds = useCallback(\n    async (pm, balance) => {\n      const callData = Array.from(\n        { length: balance.toNumber() },\n        (_, i) => pm.interface.encodeFunctionData(\"tokenOfOwnerByIndex\", [account, i])\n      );\n      return (await pm.callStatic.multicall(callData)).map((idByte) => BigNumber.from(idByte));\n    },\n    [account]\n  );\n  const fetchPositionDetails = useCallback(async (pm, positionIds) => {\n    const callData = positionIds.map((id) => pm.interface.encodeFunctionData(\"positions\", [id]));\n    return (await pm.callStatic.multicall(callData)).map(\n      (positionBytes, index) => ({\n        ...pm.interface.decodeFunctionResult(\"positions\", positionBytes),\n        tokenId: positionIds[index]\n      })\n    );\n  }, []);\n  const fetchPositionInfo = useCallback(\n    async (positionDetails, chainId, multicall) => {\n      const poolInterface = new Interface(IUniswapV3PoolStateJSON.abi);\n      const tokens = await getTokens(\n        positionDetails.flatMap((details) => [details.token0, details.token1]),\n        chainId\n      );\n      const calls = [];\n      const poolPairs = [];\n      positionDetails.forEach((details) => {\n        const tokenA = tokens[details.token0] ?? new Token(chainId, details.token0, DEFAULT_ERC20_DECIMALS);\n        const tokenB = tokens[details.token1] ?? new Token(chainId, details.token1, DEFAULT_ERC20_DECIMALS);\n        let poolAddress = poolAddressCache.get(details, chainId);\n        if (!poolAddress) {\n          const factoryAddress = V3_CORE_FACTORY_ADDRESSES[chainId];\n          poolAddress = computePoolAddress({\n            factoryAddress,\n            tokenA,\n            tokenB,\n            fee: details.fee,\n            chainId: getChainInfo(chainId).sdkId\n          });\n          poolAddressCache.set(details, chainId, poolAddress);\n        }\n        poolPairs.push([tokenA, tokenB]);\n        calls.push({\n          target: poolAddress,\n          callData: poolInterface.encodeFunctionData(\"slot0\"),\n          gasLimit: DEFAULT_GAS_LIMIT\n        });\n      }, []);\n      return (await multicall.callStatic.multicall(calls)).returnData.reduce((acc, result, i) => {\n        if (result.success) {\n          const slot0 = poolInterface.decodeFunctionResult(\"slot0\", result.returnData);\n          acc.push(createPositionInfo(account, chainId, positionDetails[i], slot0, ...poolPairs[i]));\n        } else {\n          logger.debug(\"useMultiChainPositions\", \"fetchPositionInfo\", \"slot0 fetch errored\", result);\n        }\n        return acc;\n      }, []);\n    },\n    [account, poolAddressCache, getTokens]\n  );\n  const fetchPositionsForChain = useCallback(\n    async (chainId) => {\n      if (!account || account.length === 0) {\n        return [];\n      }\n      try {\n        const pm = pms[chainId];\n        const multicall = multicalls[chainId];\n        const balance = await pm?.balanceOf(account);\n        if (!pm || !multicall || balance.lt(1)) {\n          return [];\n        }\n        const positionIds = await fetchPositionIds(pm, balance);\n        fetchPositionFees(pm, positionIds, chainId);\n        const postionDetails = await fetchPositionDetails(pm, positionIds);\n        return fetchPositionInfo(postionDetails, chainId, multicall);\n      } catch (error) {\n        const wrappedError = new Error(\"Failed to fetch positions for chain\", { cause: error });\n        logger.debug(\"useMultiChainPositions\", \"fetchPositionsForChain\", wrappedError.message, {\n          error: wrappedError,\n          chainId\n        });\n        return [];\n      }\n    },\n    [account, fetchPositionDetails, fetchPositionFees, fetchPositionIds, fetchPositionInfo, pms, multicalls]\n  );\n  const fetchAllPositions = useCallback(async () => {\n    positionsFetching.current = true;\n    const positions2 = (await Promise.all(chains.map(fetchPositionsForChain))).flat();\n    positionsFetching.current = false;\n    setPositions(positions2);\n  }, [chains, fetchPositionsForChain, setPositions]);\n  useEffect(() => {\n    if (positionsFetching.current || cachedPositions?.stale === false) {\n      return void 0;\n    } else if (document.hasFocus()) {\n      fetchAllPositions();\n    } else {\n      const onFocus = () => {\n        fetchAllPositions();\n        window.removeEventListener(\"focus\", onFocus);\n      };\n      window.addEventListener(\"focus\", onFocus);\n      return () => {\n        window.removeEventListener(\"focus\", onFocus);\n      };\n    }\n    return void 0;\n  }, [fetchAllPositions, positionsFetching, cachedPositions?.stale]);\n  const positionsWithFeesAndPrices = useMemo(\n    () => positions?.map((position) => {\n      const key = position.chainId.toString() + position.details.tokenId;\n      const fees = feeMap[key] ? [\n        // We parse away from SDK/ethers types so fees can be multiplied by primitive number prices\n        parseFloat(CurrencyAmount.fromRawAmount(position.pool.token0, feeMap[key]?.[0].toString()).toExact()),\n        parseFloat(CurrencyAmount.fromRawAmount(position.pool.token1, feeMap[key]?.[1].toString()).toExact())\n      ] : void 0;\n      const prices = [priceMap[currencyKey(position.pool.token0)], priceMap[currencyKey(position.pool.token1)]];\n      return { ...position, fees, prices };\n    }),\n    [feeMap, positions, priceMap]\n  );\n  return { positions: positionsWithFeesAndPrices, loading: pricesLoading || positionsLoading };\n}\n","\"use strict\";\nimport { Scrim } from \"components/AccountDrawer\";\nimport useMultiChainPositions from \"components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions\";\nimport { CurrencySelect } from \"components/CurrencyInputPanel/SwapCurrencyInputPanel\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { MobileBottomBar } from \"components/NavBar/MobileBottomBar\";\nimport { SwapWrapperOuter } from \"components/swap/styled\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport TokenSafetyMessage from \"components/TokenSafety/DeprecatedTokenSafetyMessage\";\nimport { getPriorityWarning, StrongWarning, useTokenWarning } from \"constants/deprecatedTokenSafety\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { gqlToCurrency } from \"graphql/data/util\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { ScrollDirection, useScroll } from \"hooks/useScroll\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport styled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useCallback, useReducer, useState } from \"react\";\nimport { Plus, X } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ClickableStyle, ThemedText } from \"theme/components\";\nimport { opacify } from \"theme/utils\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Flex, useIsTouchDevice } from \"ui/src\";\nimport { ArrowUpDown } from \"ui/src/components/icons/ArrowUpDown\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { TokenWarningCard } from \"uniswap/src/features/tokens/TokenWarningCard\";\nimport TokenWarningModal from \"uniswap/src/features/tokens/TokenWarningModal\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nconst PoolDetailsStatsButtonsRow = styled(Row)`\n  gap: 12px;\n  z-index: 1;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    gap: 8px;\n    position: fixed;\n    bottom: 0px;\n    left: 0;\n    margin: 8px;\n    width: calc(100% - 16px);\n    background: ${({ theme }) => theme.surface1};\n    padding: 12px 32px;\n    border: 1px solid ${({ theme }) => theme.surface3};\n    border-radius: 20px;\n    backdrop-filter: blur(10px);\n    & > :first-child {\n      margin-right: auto;\n    }\n    z-index: ${Z_INDEX.sticky};\n  }\n`;\nconst PoolButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  padding: 12px 16px 12px 12px;\n  border: unset;\n  border-radius: 900px;\n  gap: 8px;\n  color: ${({ theme, $open }) => $open ? theme.neutral1 : theme.accent1};\n  background-color: ${({ theme, $open }) => $open ? theme.surface1 : opacify(12, theme.accent1)};\n  justify-content: center;\n  transition: ${({ theme }) => `width ${theme.transition.duration.medium} ${theme.transition.timing.inOut}`};\n  border: ${({ theme, $open }) => $open && `1px solid ${theme.surface3}`};\n  ${ClickableStyle}\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: ${({ $fixedWidth }) => $fixedWidth && \"120px\"};\n  }\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    width: ${({ $fixedWidth }) => !$fixedWidth && \"100%\"};\n    background-color: ${({ theme, $open }) => $open ? theme.surface1 : theme.accent1};\n    color: ${({ theme, $open }) => $open ? theme.neutral1 : theme.white};\n  }\n`;\nconst ButtonBubble = styled(LoadingBubble)`\n  height: 44px;\n  width: 50%;\n  border-radius: 900px;\n`;\nconst SwapModalWrapper = styled(Column)`\n  z-index: 0;\n  gap: 24px;\n  visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  opacity: ${({ open }) => open ? \"1\" : \"0\"};\n  max-height: ${({ open }) => open ? \"100vh\" : \"0\"};\n  transition: ${({ theme }) => `max-height ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  padding-bottom: ${({ open }) => open ? \"24px\" : \"0\"};\n\n  ${SwapWrapperOuter} {\n    &:before {\n      background-color: unset;\n    }\n  }\n\n  // Need to override the default visibility to properly hide\n  ${CurrencySelect} {\n    visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  }\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    position: fixed;\n    width: calc(100% - 16px);\n    padding: 0px 12px 12px;\n    border-radius: 24px;\n    max-width: 480px;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${Z_INDEX.fixed};\n    background: ${({ theme }) => theme.surface1};\n    transition: ${({ theme }) => `opacity ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  }\n`;\nfunction findMatchingPosition(positions, token0, token1, feeTier) {\n  return positions?.find(\n    (position) => (position?.details.token0.toLowerCase() === token0?.address || position?.details.token0.toLowerCase() === token1?.address) && (position?.details.token1.toLowerCase() === token0?.address || position?.details.token1.toLowerCase() === token1?.address) && position?.details.fee == feeTier && !position.closed\n  );\n}\nexport function PoolDetailsStatsButtons({\n  chainId,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  loading\n}) {\n  const account = useAccount();\n  const { positions: userOwnedPositions } = useMultiChainPositions(account.address ?? \"\");\n  const position = userOwnedPositions && findMatchingPosition(userOwnedPositions, token0, token1, feeTier);\n  const tokenId = position?.details.tokenId;\n  const switchChain = useSwitchChain();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const currency0 = token0 && gqlToCurrency(token0);\n  const currency1 = token1 && gqlToCurrency(token1);\n  const currencyInfo0 = useCurrencyInfo(currency0 && currencyId(currency0));\n  const currencyInfo1 = useCurrencyInfo(currency1 && currencyId(currency1));\n  const isLPRedesignEnabled = useFeatureFlag(FeatureFlags.LPRedesign);\n  const handleAddLiquidity = async () => {\n    if (currency0 && currency1) {\n      if (!isLPRedesignEnabled && account.chainId !== chainId && chainId) {\n        await switchChain(chainId);\n      }\n      const currency0Address = currency0.isNative ? NATIVE_CHAIN_ID : currency0.address;\n      const currency1Address = currency1.isNative ? NATIVE_CHAIN_ID : currency1.address;\n      const chainName = getChainInfo(chainId ?? currency0.chainId)?.urlParam;\n      if (isLPRedesignEnabled) {\n        if (tokenId) {\n          navigate(`/positions/${protocolVersion?.toLowerCase()}/${chainName}/${tokenId}`, {\n            state: { from: location.pathname }\n          });\n        } else {\n          const url = `/positions/create/${protocolVersion?.toLowerCase()}?currencyA=${currency0Address}&currencyB=${currency1Address}&chain=${chainName}`;\n          navigate(url, {\n            state: { from: location.pathname }\n          });\n        }\n      } else {\n        navigate(`/add/${currency0Address}/${currency1Address}/${feeTier}${tokenId ? `/${tokenId}` : \"\"}`, {\n          state: { from: location.pathname }\n        });\n      }\n    }\n  };\n  const [swapModalOpen, toggleSwapModalOpen] = useReducer((state) => !state, false);\n  const isScreenSize = useScreenSize();\n  const screenSizeLargerThanTablet = isScreenSize[\"lg\"];\n  const isMobile = !isScreenSize[\"sm\"];\n  const token0Warning = useTokenWarning(token0?.address, chainId);\n  const token1Warning = useTokenWarning(token1?.address, chainId);\n  const priorityWarning = getPriorityWarning(token0Warning, token1Warning);\n  const tokenProtectionEnabled = useFeatureFlag(FeatureFlags.TokenProtection);\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const closeWarningModal = useCallback(() => setShowWarningModal(false), []);\n  const [warningModalCurrencyInfo, setWarningModalCurrencyInfo] = useState();\n  const onWarningCardCtaPressed = useCallback((currencyInfo) => {\n    setWarningModalCurrencyInfo(currencyInfo);\n    setShowWarningModal(true);\n  }, []);\n  if (loading || !currency0 || !currency1) {\n    return <PoolDetailsStatsButtonsRow data-testid=\"pdp-buttons-loading-skeleton\"><ButtonBubble /><ButtonBubble /></PoolDetailsStatsButtonsRow>;\n  }\n  return <Flex flexDirection=\"column\" gap=\"$gap24\"><PoolButtonsWrapper isMobile={isMobile}><Flex row justifyContent=\"center\" gap={screenSizeLargerThanTablet ? \"$spacing12\" : \"$spacing8\"} width=\"100%\"><PoolButton\n    onClick={toggleSwapModalOpen}\n    $open={swapModalOpen}\n    data-testid={`pool-details-${swapModalOpen ? \"close\" : \"swap\"}-button`}\n  >{swapModalOpen ? <><X size={20} /><ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\"><Trans i18nKey=\"common.close\" /></ThemedText.BodyPrimary></> : <><ArrowUpDown color={isMobile ? \"$white\" : \"$accent1\"} size=\"$icon.20\" /><ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\"><Trans i18nKey=\"common.swap\" /></ThemedText.BodyPrimary></>}</PoolButton><PoolButton onClick={handleAddLiquidity} data-testid=\"pool-details-add-liquidity-button\"><Plus size={20} /><ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\"><Trans i18nKey=\"common.addLiquidity\" /></ThemedText.BodyPrimary></PoolButton></Flex></PoolButtonsWrapper><SwapModalWrapper open={swapModalOpen} data-testid=\"pool-details-swap-modal\"><Swap\n    syncTabToUrl={false}\n    chainId={chainId}\n    initialInputCurrency={currency0}\n    initialOutputCurrency={currency1}\n    compact\n    disableTokenInputs={chainId !== account.chainId}\n  />{tokenProtectionEnabled ? <><TokenWarningCard currencyInfo={currencyInfo0} onPress={() => onWarningCardCtaPressed(currencyInfo0)} /><TokenWarningCard currencyInfo={currencyInfo1} onPress={() => onWarningCardCtaPressed(currencyInfo1)} />{warningModalCurrencyInfo && // Intentionally duplicative with the TokenWarningModal in the swap component; this one only displays when user clicks \"i\" Info button on the TokenWarningCard\n  <TokenWarningModal\n    currencyInfo0={warningModalCurrencyInfo}\n    isInfoOnlyWarning\n    isVisible={showWarningModal}\n    closeModalOnly={closeWarningModal}\n    onAcknowledge={closeWarningModal}\n  />}</> : Boolean(priorityWarning) && <TokenSafetyMessage\n    tokenAddress={(priorityWarning === token0Warning ? token0?.address : token1?.address) ?? \"\"}\n    warning={priorityWarning ?? StrongWarning}\n    plural={Boolean(token0Warning && token1Warning)}\n    tokenSymbol={priorityWarning === token0Warning ? token0?.symbol : token1?.symbol}\n  />}</SwapModalWrapper><Scrim\n    $open={swapModalOpen && !screenSizeLargerThanTablet}\n    $maxWidth={BREAKPOINTS.lg}\n    $zIndex={Z_INDEX.sticky}\n    onClick={toggleSwapModalOpen}\n  /></Flex>;\n}\nfunction PoolButtonsWrapper({ children, isMobile }) {\n  const isTouchDevice = useIsTouchDevice();\n  const { direction: scrollDirection } = useScroll();\n  const Wrapper = isMobile ? MobileBottomBar : PoolDetailsStatsButtonsRow;\n  const wrapperProps = isMobile ? { hide: isTouchDevice && scrollDirection === ScrollDirection.DOWN } : {};\n  return <Wrapper {...wrapperProps}>{children}</Wrapper>;\n}\n","\"use strict\";\nimport { LiquidityPositionCard } from \"components/Liquidity/LiquidityPositionCard\";\nimport { getPositionUrl } from \"components/Liquidity/utils\";\nimport { Link } from \"react-router-dom\";\nimport { Flex } from \"ui/src\";\nexport function PoolDetailsPositionsTable({ positions }) {\n  return <Flex gap=\"$gap24\" width=\"100%\">{positions?.map((position) => <Link key={position.poolId} style={{ textDecoration: \"none\" }} to={getPositionUrl(position)}><LiquidityPositionCard liquidityPosition={position} /></Link>)}</Flex>;\n}\n","\"use strict\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport {\n  PoolTransactionType,\n  ProtocolVersion,\n  useV2PairTransactionsQuery,\n  useV3PoolTransactionsQuery,\n  useV4PoolTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nexport var PoolTableTransactionType = /* @__PURE__ */ ((PoolTableTransactionType2) => {\n  PoolTableTransactionType2[\"BUY\"] = \"Buy\";\n  PoolTableTransactionType2[\"SELL\"] = \"Sell\";\n  PoolTableTransactionType2[\"REMOVE\"] = \"Remove\";\n  PoolTableTransactionType2[\"ADD\"] = \"Add\";\n  return PoolTableTransactionType2;\n})(PoolTableTransactionType || {});\nconst PoolTransactionDefaultQuerySize = 25;\nexport function usePoolTransactions(address, chainId, filter = [\n  \"Buy\" /* BUY */,\n  \"Sell\" /* SELL */,\n  \"Remove\" /* REMOVE */,\n  \"Add\" /* ADD */\n], token0, protocolVersion = ProtocolVersion.V3, first = PoolTransactionDefaultQuerySize) {\n  const { defaultChainId } = useEnabledChains();\n  const variables = { first, chain: toGraphQLChain(chainId ?? defaultChainId) };\n  const v4DataEnabled = useFeatureFlag(FeatureFlags.V4Data);\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4,\n    fetchMore: fetchMoreV4\n  } = useV4PoolTransactionsQuery({\n    variables: {\n      ...variables,\n      poolId: address\n    },\n    skip: !v4DataEnabled || protocolVersion !== ProtocolVersion.V4\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useV3PoolTransactionsQuery({\n    variables: {\n      ...variables,\n      address\n    },\n    skip: protocolVersion !== ProtocolVersion.V3\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useV2PairTransactionsQuery({\n    variables: {\n      ...variables,\n      address\n    },\n    skip: !chainId || protocolVersion !== ProtocolVersion.V2\n  });\n  const loadingMore = useRef(false);\n  const { transactions, loading, fetchMore, error } = protocolVersion === ProtocolVersion.V4 ? { transactions: dataV4?.v4Pool?.transactions, loading: loadingV4, fetchMore: fetchMoreV4, error: errorV4 } : protocolVersion === ProtocolVersion.V3 ? { transactions: dataV3?.v3Pool?.transactions, loading: loadingV3, fetchMore: fetchMoreV3, error: errorV3 } : { transactions: dataV2?.v2Pair?.transactions, loading: loadingV2, fetchMore: fetchMoreV2, error: errorV2 };\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMore.current) {\n        return;\n      }\n      loadingMore.current = true;\n      fetchMore({\n        variables: {\n          cursor: transactions?.[transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n          onComplete?.();\n          const mergedData = protocolVersion === ProtocolVersion.V4 ? {\n            v4Pool: {\n              ...fetchMoreResult.v4Pool,\n              transactions: [\n                ...prev.v4Pool?.transactions ?? [],\n                ...fetchMoreResult.v4Pool.transactions\n              ]\n            }\n          } : protocolVersion === ProtocolVersion.V3 ? {\n            v3Pool: {\n              ...fetchMoreResult.v3Pool,\n              transactions: [\n                ...prev.v3Pool?.transactions ?? [],\n                ...fetchMoreResult.v3Pool.transactions\n              ]\n            }\n          } : {\n            v2Pair: {\n              ...fetchMoreResult.v2Pair,\n              transactions: [\n                ...prev.v2Pair?.transactions ?? [],\n                ...fetchMoreResult.v2Pair.transactions\n              ]\n            }\n          };\n          loadingMore.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [fetchMore, transactions, protocolVersion]\n  );\n  const filteredTransactions = useMemo(() => {\n    return (transactions ?? [])?.map((tx) => {\n      if (!tx) {\n        return void 0;\n      }\n      const tokenIn = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n      const token0Address = token0?.address === NATIVE_CHAIN_ID ? WRAPPED_NATIVE_CURRENCY[chainId ?? UniverseChainId.Mainnet]?.address : token0?.address;\n      const isSell = tokenIn?.address?.toLowerCase() === token0Address?.toLowerCase();\n      const type = tx.type === PoolTransactionType.Swap ? isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */ : tx.type === PoolTransactionType.Remove ? \"Remove\" /* REMOVE */ : \"Add\" /* ADD */;\n      if (!filter.includes(type)) {\n        return void 0;\n      }\n      return {\n        timestamp: tx.timestamp,\n        transaction: tx.hash,\n        pool: {\n          token0: {\n            id: tx.token0.address ?? \"\",\n            symbol: tx.token0.symbol ?? \"\"\n          },\n          token1: {\n            id: tx.token1.address ?? \"\",\n            symbol: tx.token1.symbol ?? \"\"\n          }\n        },\n        maker: tx.account,\n        amount0: parseFloat(tx.token0Quantity),\n        amount1: parseFloat(tx.token1Quantity),\n        amountUSD: tx.usdValue.value,\n        type\n      };\n    }).filter((value) => value !== void 0);\n  }, [transactions, token0?.address, chainId, filter]);\n  return useMemo(() => {\n    return {\n      transactions: filteredTransactions,\n      loading,\n      loadMore,\n      error\n    };\n  }, [filteredTransactions, loading, loadMore, error]);\n}\n","\"use strict\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport { FilterHeaderRow, HeaderArrow, HeaderSortText, TimestampCell } from \"components/Table/styled\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport {\n  PoolTableTransactionType,\n  usePoolTransactions\n} from \"graphql/data/pools/usePoolTransactions\";\nimport { OrderDirection, supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ExternalLink, ThemedText } from \"theme/components\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useAppFiatCurrency } from \"uniswap/src/features/fiatCurrency/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n  stroke: ${({ theme }) => theme.neutral2};\n`;\nconst TableWrapper = styled.div`\n  min-height: 256px;\n`;\nvar PoolTransactionColumn = /* @__PURE__ */ ((PoolTransactionColumn2) => {\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Timestamp\"] = 0] = \"Timestamp\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Type\"] = 1] = \"Type\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"MakerAddress\"] = 2] = \"MakerAddress\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"FiatValue\"] = 3] = \"FiatValue\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"InputAmount\"] = 4] = \"InputAmount\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"OutputAmount\"] = 5] = \"OutputAmount\";\n  return PoolTransactionColumn2;\n})(PoolTransactionColumn || {});\nconst PoolTransactionColumnWidth = {\n  [0 /* Timestamp */]: 120,\n  [1 /* Type */]: 144,\n  [2 /* MakerAddress */]: 100,\n  [3 /* FiatValue */]: 125,\n  [4 /* InputAmount */]: 125,\n  [5 /* OutputAmount */]: 125\n};\nfunction comparePoolTokens(tokenA, tokenB) {\n  if (tokenB?.address === NATIVE_CHAIN_ID) {\n    const chainId = supportedChainIdFromGQLChain(tokenB.chain);\n    return chainId && tokenA.id.toLowerCase() === WRAPPED_NATIVE_CURRENCY[chainId]?.address.toLowerCase();\n  }\n  return tokenA.id.toLowerCase() === tokenB?.address?.toLowerCase();\n}\nexport function PoolDetailsTransactionsTable({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const chainId = useChainIdFromUrlParam() ?? UniverseChainId.Mainnet;\n  const activeLocalCurrency = useAppFiatCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.REMOVE,\n    PoolTableTransactionType.ADD\n  ]);\n  const { transactions, loading, loadMore, error } = usePoolTransactions(\n    poolAddress,\n    chainId,\n    filter,\n    token0,\n    protocolVersion\n  );\n  const showLoadingSkeleton = loading || !!error;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        header: () => <Cell minWidth={PoolTransactionColumnWidth[0 /* Timestamp */]} justifyContent=\"flex-start\"><Row gap=\"4px\"><HeaderArrow direction={OrderDirection.Desc} /><HeaderSortText active><Trans i18nKey=\"common.time\" /></HeaderSortText></Row></Cell>,\n        cell: (row) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[0 /* Timestamp */]}\n          justifyContent=\"flex-start\"\n        ><TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chainId, row.getValue?.().transaction, ExplorerDataType.TRANSACTION)}\n        /></Cell>\n      }),\n      columnHelper.accessor(\n        (row) => {\n          let color, text;\n          if (row.type === PoolTableTransactionType.BUY) {\n            color = \"success\";\n            text = <span><Trans i18nKey=\"common.buy.label\" />\n                &nbsp;{token0?.symbol}</span>;\n          } else if (row.type === PoolTableTransactionType.SELL) {\n            color = \"critical\";\n            text = <span><Trans i18nKey=\"common.sell.label\" />\n                &nbsp;{token0?.symbol}</span>;\n          } else {\n            color = row.type === PoolTableTransactionType.ADD ? \"success\" : \"critical\";\n            text = row.type === PoolTableTransactionType.ADD ? <Trans i18nKey=\"common.add.label\" /> : <Trans i18nKey=\"common.remove.label\" />;\n          }\n          return <ThemedText.BodyPrimary color={color}>{text}</ThemedText.BodyPrimary>;\n        },\n        {\n          id: \"swap-type\",\n          header: () => <Cell minWidth={PoolTransactionColumnWidth[1 /* Type */]} justifyContent=\"flex-start\"><FilterHeaderRow clickable={filterModalIsOpen} onPress={() => toggleFilterModal()} ref={filterAnchorRef}><Filter\n            allFilters={Object.values(PoolTableTransactionType)}\n            activeFilter={filter}\n            setFilters={setFilters}\n            isOpen={filterModalIsOpen}\n            toggleFilterModal={toggleFilterModal}\n            anchorRef={filterAnchorRef}\n          /><ThemedText.BodySecondary><Trans i18nKey=\"common.type.label\" /></ThemedText.BodySecondary></FilterHeaderRow></Cell>,\n          cell: (PoolTransactionTableType) => <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[1 /* Type */]}\n            justifyContent=\"flex-start\"\n          >{PoolTransactionTableType.getValue?.()}</Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.amountUSD, {\n        id: \"fiat-value\",\n        header: () => <Cell minWidth={PoolTransactionColumnWidth[3 /* FiatValue */]} justifyContent=\"flex-end\" grow><ThemedText.BodySecondary>{activeLocalCurrency}</ThemedText.BodySecondary></Cell>,\n        cell: (fiat) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[3 /* FiatValue */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodyPrimary>{formatFiatPrice({ price: fiat.getValue?.() })}</ThemedText.BodyPrimary></Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount0 : row.amount1, {\n        id: \"input-amount\",\n        header: () => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[4 /* InputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodySecondary>{token0?.symbol}</ThemedText.BodySecondary></Cell>,\n        cell: (inputTokenAmount) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[4 /* InputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodyPrimary>{formatNumber({ input: Math.abs(inputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}</ThemedText.BodyPrimary></Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount1 : row.amount0, {\n        id: \"output-amount\",\n        header: () => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[5 /* OutputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodySecondary>{token1?.symbol}</ThemedText.BodySecondary></Cell>,\n        cell: (outputTokenAmount) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[5 /* OutputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodyPrimary>{formatNumber({ input: Math.abs(outputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}</ThemedText.BodyPrimary></Cell>\n      }),\n      columnHelper.accessor((row) => row.maker, {\n        id: \"maker-address\",\n        header: () => <Cell\n          minWidth={PoolTransactionColumnWidth[2 /* MakerAddress */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodySecondary><Trans i18nKey=\"common.wallet.label\" /></ThemedText.BodySecondary></Cell>,\n        cell: (makerAddress) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[2 /* MakerAddress */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}><ThemedText.BodyPrimary>{shortenAddress(makerAddress.getValue?.(), 0)}</ThemedText.BodyPrimary></StyledExternalLink></Cell>\n      })\n    ];\n  }, [\n    activeLocalCurrency,\n    chainId,\n    filter,\n    filterModalIsOpen,\n    formatFiatPrice,\n    formatNumber,\n    showLoadingSkeleton,\n    token0,\n    token1?.symbol\n  ]);\n  return <TableWrapper data-testid=\"pool-details-transactions-table\"><Table\n    columns={columns}\n    data={transactions}\n    loading={loading}\n    error={error}\n    loadMore={loadMore}\n    maxHeight={600}\n  /></TableWrapper>;\n}\n","\"use strict\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { PoolDetailsPositionsTable } from \"components/Pools/PoolDetails/PoolDetailsPositionsTable\";\nimport { PoolDetailsTransactionsTable } from \"components/Pools/PoolDetails/PoolDetailsTransactionsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ClickableStyle, ThemedText } from \"theme/components\";\nimport { useGetPositionsQuery } from \"uniswap/src/data/rest/getPositions\";\nvar PoolDetailsTableTabs = /* @__PURE__ */ ((PoolDetailsTableTabs2) => {\n  PoolDetailsTableTabs2[\"TRANSACTIONS\"] = \"transactions\";\n  PoolDetailsTableTabs2[\"POSITIONS\"] = \"positions\";\n  return PoolDetailsTableTabs2;\n})(PoolDetailsTableTabs || {});\nconst TableHeader = styled(ThemedText.HeadlineMedium)`\n  color: ${({ theme, active }) => !active && theme.neutral2};\n  ${({ disabled }) => !disabled && ClickableStyle}\n  user-select: none;\n`;\nexport function PoolDetailsTableTab({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const [activeTable, setActiveTable] = useState(\"transactions\" /* TRANSACTIONS */);\n  const account = useAccount();\n  const { data } = useGetPositionsQuery({ address: account.address, poolId: poolAddress });\n  const positions = useMemo(\n    () => data?.positions.map((position) => parseRestPosition(position)).filter((position) => position !== void 0),\n    [data?.positions]\n  );\n  return <Column gap=\"lg\"><Row gap=\"16px\"><TableHeader\n    active={activeTable === \"transactions\" /* TRANSACTIONS */}\n    onClick={() => setActiveTable(\"transactions\" /* TRANSACTIONS */)}\n    disabled={!positions?.length}\n  ><Trans i18nKey=\"common.transactions\" /></TableHeader>{Boolean(positions?.length) && <TableHeader\n    active={activeTable === \"positions\" /* POSITIONS */}\n    onClick={() => setActiveTable(\"positions\" /* POSITIONS */)}\n  ><Trans i18nKey=\"pool.positions\" />{` (${positions?.length})`}</TableHeader>}</Row>{activeTable === \"transactions\" /* TRANSACTIONS */ ? <PoolDetailsTransactionsTable\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    protocolVersion={protocolVersion}\n  /> : <PoolDetailsPositionsTable positions={positions} />}</Column>;\n}\n","\"use strict\";\nimport { V2_BIPS } from \"graphql/data/pools/useTopPools\";\nimport ms from \"ms\";\nimport { useMemo } from \"react\";\nimport {\n  useV2PairQuery,\n  useV3PoolQuery,\n  useV4PoolQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nfunction calc24HVolChange(historicalVolume) {\n  if (!historicalVolume) {\n    return void 0;\n  }\n  const currentTime = (/* @__PURE__ */ new Date()).getTime();\n  const dayAgo = (currentTime - ms(\"1d\")) / 1e3;\n  const twoDaysAgo = (currentTime - ms(\"2d\")) / 1e3;\n  const volume24h = historicalVolume.filter((entry) => entry?.timestamp !== void 0 && entry.timestamp >= dayAgo).reduce((acc, cur) => acc + cur.value, 0);\n  const volume48h = historicalVolume.filter(\n    (entry) => entry?.timestamp !== void 0 && entry.timestamp >= twoDaysAgo && entry.timestamp < dayAgo\n  ).reduce((acc, cur) => acc + cur.value, 0);\n  return (volume24h - volume48h) / volume48h * 100;\n}\nexport function usePoolData(poolIdOrAddress, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const chain = toGraphQLChain(chainId ?? defaultChainId);\n  const isV4DataEnabled = useFeatureFlag(FeatureFlags.V4Data);\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4\n  } = useV4PoolQuery({\n    variables: { chain, poolId: poolIdOrAddress },\n    errorPolicy: \"all\",\n    skip: !isV4DataEnabled\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3\n  } = useV3PoolQuery({\n    variables: { chain, address: poolIdOrAddress },\n    errorPolicy: \"all\"\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2\n  } = useV2PairQuery({\n    variables: { chain, address: poolIdOrAddress },\n    skip: !chainId,\n    errorPolicy: \"all\"\n  });\n  return useMemo(() => {\n    const anyError = Boolean(errorV4 || errorV3 || errorV2);\n    const anyLoading = Boolean(loadingV4 || loadingV3 || loadingV2);\n    const pool = dataV4?.v4Pool ?? dataV3?.v3Pool ?? dataV2?.v2Pair ?? void 0;\n    const feeTier = dataV4?.v4Pool?.feeTier ?? dataV3?.v3Pool?.feeTier ?? V2_BIPS;\n    const poolId = dataV4?.v4Pool?.id ?? dataV3?.v3Pool?.address ?? dataV2?.v2Pair?.address ?? poolIdOrAddress;\n    return {\n      data: pool ? {\n        idOrAddress: poolId,\n        txCount: pool.txCount,\n        protocolVersion: pool.protocolVersion,\n        token0: pool.token0,\n        tvlToken0: pool.token0Supply,\n        token0Price: pool.token0?.project?.markets?.[0]?.price?.value,\n        token1: pool.token1,\n        tvlToken1: pool.token1Supply,\n        token1Price: pool.token1?.project?.markets?.[0]?.price?.value,\n        feeTier,\n        volumeUSD24H: pool.volume24h?.value,\n        volumeUSD24HChange: calc24HVolChange(pool.historicalVolume?.concat()),\n        tvlUSD: pool.totalLiquidity?.value,\n        tvlUSDChange: pool.totalLiquidityPercentChange24h?.value,\n        hookAddress: \"hook\" in pool ? pool?.hook?.address : void 0\n      } : void 0,\n      error: anyError,\n      loading: anyLoading\n    };\n  }, [\n    dataV2?.v2Pair,\n    dataV3?.v3Pool,\n    dataV4?.v4Pool,\n    errorV2,\n    errorV3,\n    errorV4,\n    loadingV2,\n    loadingV3,\n    loadingV4,\n    poolIdOrAddress\n  ]);\n}\n","\"use strict\";\nexport const getPoolDetailPageTitle = (t, poolData) => {\n  const token0Symbol = poolData?.token0.symbol;\n  const token1Symbol = poolData?.token1.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!token0Symbol || !token1Symbol) {\n    return baseTitle;\n  }\n  return `${token0Symbol}/${token1Symbol}: ${baseTitle}`;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport ChartSection from \"components/Pools/PoolDetails/ChartSection\";\nimport { PoolDetailsBreadcrumb, PoolDetailsHeader } from \"components/Pools/PoolDetails/PoolDetailsHeader\";\nimport { PoolDetailsLink } from \"components/Pools/PoolDetails/PoolDetailsLink\";\nimport { PoolDetailsStats } from \"components/Pools/PoolDetails/PoolDetailsStats\";\nimport { PoolDetailsStatsButtons } from \"components/Pools/PoolDetails/PoolDetailsStatsButtons\";\nimport { PoolDetailsTableTab } from \"components/Pools/PoolDetails/PoolDetailsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { usePoolData } from \"graphql/data/pools/usePoolData\";\nimport { gqlToCurrency, unwrapToken } from \"graphql/data/util\";\nimport { useColor } from \"hooks/useColor\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport NotFound from \"pages/NotFound\";\nimport { getPoolDetailPageTitle } from \"pages/PoolDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useMemo, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { BREAKPOINTS, ThemeProvider } from \"theme\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nconst PageWrapper = styled(Row)`\n  padding: 0 20px 52px;\n  justify-content: center;\n  width: 100%;\n  gap: 80px;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    padding: 48px 40px;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 0px;\n  }\n`;\nconst LeftColumn = styled(Column)`\n  gap: 40px;\n  max-width: 780px;\n  overflow: hidden;\n  justify-content: flex-start;\n  width: 100%;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    max-width: unset;\n  }\n`;\nconst HR = styled.hr`\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  width: 100%;\n`;\nconst RightColumn = styled(Column)`\n  gap: 24px;\n  width: 360px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    margin: 44px 0px;\n    width: 100%;\n    min-width: unset;\n    & > *:first-child {\n      margin-top: -24px;\n    }\n  }\n`;\nconst TokenDetailsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: unset;\n  }\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    padding: unset;\n  }\n`;\nconst TokenDetailsHeader = styled(Text)`\n  width: 100%;\n  font-size: 24px;\n  font-weight: 485;\n  line-height: 32px;\n`;\nconst LinksContainer = styled(Column)`\n  gap: 16px;\n  width: 100%;\n`;\nfunction getUnwrappedPoolToken(poolData, chainId) {\n  return poolData?.token0 && poolData?.token1 && chainId ? [unwrapToken(chainId, poolData?.token0), unwrapToken(chainId, poolData?.token1)] : [void 0, void 0];\n}\nexport default function PoolDetailsPage() {\n  const { t } = useTranslation();\n  const { poolAddress } = useParams();\n  const urlChain = useChainIdFromUrlParam();\n  const chainInfo = urlChain ? getChainInfo(urlChain) : void 0;\n  const { data: poolData, loading } = usePoolData(poolAddress?.toLowerCase() ?? \"\", chainInfo?.id);\n  const [isReversed, toggleReversed] = useReducer((x) => !x, false);\n  const unwrappedTokens = getUnwrappedPoolToken(poolData, chainInfo?.id);\n  const [token0, token1] = isReversed ? [unwrappedTokens?.[1], unwrappedTokens?.[0]] : unwrappedTokens;\n  const { darkMode, surface2, accent1 } = useTheme();\n  const color0 = useColor(token0 && gqlToCurrency(token0), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const color1 = useColor(token1 && gqlToCurrency(token1), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const isInvalidPool = !poolAddress || !chainInfo;\n  const poolNotFound = !loading && !poolData || isInvalidPool;\n  const metatagProperties = useMemo(() => {\n    const token0Symbol = poolData?.token0.symbol;\n    const token1Symbol = poolData?.token1.symbol;\n    const poolName = `${token0Symbol}/${token1Symbol}`;\n    const chainName = chainInfo?.label ?? \"Ethereum\";\n    return {\n      title: poolName,\n      url: window.location.href,\n      description: `Swap ${poolName} on ${chainName}. Trade tokens and provide liquidity. Real-time prices, charts, transaction data, and more.`\n    };\n  }, [chainInfo?.label, poolData?.token0.symbol, poolData?.token1.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  if (poolNotFound) {\n    return <NotFound />;\n  }\n  return <ThemeProvider token0={color0 !== accent1 ? color0 : void 0} token1={color1 !== accent1 ? color1 : void 0}><Helmet><title>{getPoolDetailPageTitle(t, poolData)}</title>{metatags.map((tag, index) => <meta key={index} {...tag} />)}</Helmet><Trace\n    logImpression={!loading}\n    page={InterfacePageName.POOL_DETAILS_PAGE}\n    properties={{\n      poolAddress,\n      chainId: chainInfo?.id,\n      feeTier: poolData?.feeTier,\n      token0Address: poolData?.token0.address,\n      token1Address: poolData?.token1.address,\n      token0Symbol: poolData?.token0.symbol,\n      token1Symbol: poolData?.token1.symbol,\n      token0Name: poolData?.token0.name,\n      token1Name: poolData?.token1.name\n    }}\n  ><PageWrapper><LeftColumn><Column gap=\"20px\"><Column><PoolDetailsBreadcrumb\n    chainId={chainInfo?.id}\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    loading={loading}\n  /><PoolDetailsHeader\n    chainId={chainInfo?.id}\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    feeTier={poolData?.feeTier}\n    hookAddress={poolData?.hookAddress}\n    protocolVersion={poolData?.protocolVersion}\n    toggleReversed={toggleReversed}\n    loading={loading}\n  /></Column><ChartSection\n    poolData={poolData}\n    loading={loading}\n    isReversed={isReversed}\n    chain={chainInfo?.backendChain.chain}\n  /></Column><HR /><PoolDetailsTableTab\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    protocolVersion={poolData?.protocolVersion}\n  /></LeftColumn><RightColumn><PoolDetailsStatsButtons\n    chainId={chainInfo?.id}\n    token0={token0}\n    token1={token1}\n    feeTier={poolData?.feeTier}\n    protocolVersion={poolData?.protocolVersion}\n    loading={loading}\n  /><PoolDetailsStats poolData={poolData} isReversed={isReversed} chainId={chainInfo?.id} loading={loading} /><TokenDetailsWrapper><TokenDetailsHeader><Trans i18nKey=\"common.links\" /></TokenDetailsHeader><LinksContainer><PoolDetailsLink\n    address={poolAddress}\n    chainId={chainInfo?.id}\n    tokens={[token0, token1]}\n    loading={loading}\n  /><PoolDetailsLink\n    address={token0?.address}\n    chainId={chainInfo?.id}\n    tokens={[token0]}\n    loading={loading}\n  /><PoolDetailsLink\n    address={token1?.address}\n    chainId={chainInfo?.id}\n    tokens={[token1]}\n    loading={loading}\n  /></LinksContainer></TokenDetailsWrapper></RightColumn></PageWrapper></Trace></ThemeProvider>;\n}\n"],"names":["Image","styled","img","Container","div","Header","PageWrapper","theme","breakpoint","md","NotFound","title","subtitle","actionButton","isDarkMode","useIsDarkMode","isMobile","useIsMobile","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","logImpression","page","InterfacePageName","NOT_FOUND","color","Trans","i18nKey","src","darkImage","lightImage","alt","SmallButtonPrimary","as","Link","to","PDP_CHART_HEIGHT_PX","PDP_CHART_SELECTOR_OPTIONS","ChartType","VOLUME","PRICE","LIQUIDITY","TimePeriodSelectorContainer","sm","ChartTypeSelectorContainer","PDPChartTypeSelector","chartType","onChartTypeChange","disabledOption","ChartTypeDropdown","options","currentChartType","onSelectOption","usePDPChartState","poolData","tokenA","tokenB","isReversed","chain","protocolVersion","timePeriod","setTimePeriod","useState","TimePeriod","DAY","setChartType","isV2","ProtocolVersion","V2","isV3","V3","isV4","V4","variables","addressOrId","idOrAddress","duration","toHistoryDuration","priceQuery","usePoolPriceChartData","token0","address","usePDPPriceChartData","volumeQuery","data","loading","usePoolVolumeHistoryQuery","useMemo","historicalVolume","v2Pair","v3Pool","entries","filter","amt","map","withUTCTimestamp","dataQuality","checkDataQuality","usePDPVolumeChartData","activeQuery","DataQuality","VALID","ChartSection","props","currencyA","currencyB","defaultChainId","useEnabledChains","breakpoints","useMedia","gqlToCurrency","token1","wrapped","Chain","Ethereum","refitChartContent","useAtomValue","refitChartContentAtom","ChartBody","ChartSkeleton","type","height","selectedChartProps","feeTier","Number","chainId","fromGraphQLChain","poolId","hooks","hookAddress","version","parseProtocolVersion","RestProtocolVersion","tickSpacing","LiquidityChart","INVALID","errorText","stale","STALE","PriceChart","VolumeChart","filteredTimeOptions","filtered","DEFAULT_PILL_TIME_SELECTOR_OPTIONS","option","value","TimePeriodDisplay","HOUR","selected","DISPLAYS","disabledChartOption","data-testid","ChartActionsContainer","SegmentedControl","fullWidth","selectedOption","time","getTimePeriodFromDisplay","PriceDisplayContainer","ChartPriceText","EllipsisStyle","formatCurrencyAmount","formatPrice","useFormatter","primaryToken","referenceToken","params","PriceChartType","LINE","price","useUSDCPrice","lastPrice","length","Chart","Model","PriceChartModel","crosshairData","displayValue","currencyBAmountRaw","Math","floor","close","decimals","priceDisplay","symbol","amount","CurrencyAmount","fromRawAmount","ChartHeader","additionalFields","PriceChartDelta","startingPrice","endingPrice","valueFormatterType","NumberType","FiatTokenPrice","FadeInHeading","H1Medium","textFadeIn","FadeInSubheader","SubHeader","LiquidityTooltipDisplay","tokenADescriptor","tokenBDescriptor","currentTick","t","useTranslation","formatNumber","displayValue0","tick","input","amount0Locked","TokenQuantityStats","displayValue1","amount1Locked","BodySmall","token","name","tickData","activeTick","useLiquidityBarData","useTheme","barData","tokenAColor","tokenBColor","highlightColor","surface3","activeTickProgress","activeRangePercentage","LoadingChart","LiquidityBarChartModel","TooltipBody","FeeAmount","LOWEST","activeRangeData","crosshair","displayPoint","display","price0","price1","paddingTop","DetailBubble","LoadingBubble","$height","$width","SmallDetailBubble","StyledExternalLink","ExternalLink","HeaderContainer","transition","medium","IconBubble","PoolDetailsBreadcrumb","poolAddress","chainName","toGraphQLChain","exploreOrigin","toLowerCase","poolsOrigin","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","ChevronRight","size","CurrentPageBreadcrumb","poolName","StyledPoolDetailsTitle","PoolName","PoolDetailsTitle","toggleReversed","formatPercent","graphQLChain","feePercent","Percent","BIPS_BASE","StyledLink","getTokenDetailsURL","Flex","row","gap","alignItems","PoolDetailsBadge","variant","$position","href","getExplorerLink","ExplorerDataType","ADDRESS","TamaguiClickableStyle","shortenAddress","TouchableArea","hoverStyle","opacity","onPress","ArrowUpDown","ClickableTamaguiStyle","testID","rotate","ContractsDropdownRowContainer","Row","ContractsDropdownRow","tokens","currency","isPool","currencies","isNative","NATIVE_CHAIN_ID","explorerUrl","NATIVE","TOKEN","DoubleCurrencyAndChainLogo","CurrencyLogo","BodyPrimary","BodySecondary","ExternalLinkIcon","stroke","neutral2","ContractsModalContainer","ActionMenuFlyoutStyle","minWidth","borderRadius","PoolDetailsHeaderActions","contractsModalIsOpen","toggleContractsModal","width","justify","DropdownSelector","isOpen","toggleOpen","menuLabel","UniverseChainId","Mainnet","EtherscanLogo","fill","neutral1","ExplorerIcon","internalMenuItems","tooltipText","hideChevron","buttonStyle","ActionButtonStyle","dropdownStyle","adaptToSheet","ShareButton","utmSource","ClickableStyle","PoolDetailsHeader","shouldColumnBreak","useScreenSize","Column","style","TokenName","BREAKPOINTS","lg","xs","TokenTextWrapper","isClickable","SymbolText","CopyAddress","StyledCopyIcon","Copy","ExplorerWrapper","ButtonsRow","PoolDetailsLink","isCopied","setCopied","useCopyClipboard","copy","useCallback","checksummedAddress","isAddress","navigate","useNavigate","handleTokenTextClick","truncateAddress","setTruncateAddress","onTextRender","textRef","clientWidth","scrollWidth","prev","align","onClick","ref","Tooltip","placement","TooltipSize","Max","show","text","padding","HeaderText","Text","StatsWrapper","surface2","loaded","StatItemColumn","PoolBalanceSymbols","PoolBalanceTokenNamesContainer","leftBarChartStyles","css","rightBarChartStyles","BalanceChartSide","percent","$color","isLeft","StatSectionBubble","StatHeaderBubble","PoolBalanceTokenNames","unwrappedToken","screenIsNotLarge","unwrapToken","nativeOnChain","marginRight","tvl","PoolDetailsStats","currency0","useCurrency","currency1","tvlToken0","token0Price","tvlToken1","token1Price","token0FullData","token1FullData","tvlUSD","StatItem","delta","tvlUSDChange","volumeUSD24H","volumeUSD24HChange","Array","from","_","i","StatsTextContainer","StatItemText","formatDelta","FiatTokenStats","DeltaArrow","DEFAULT_ERC20_DECIMALS","DEFAULT_GAS_LIMIT","Erc20","Interface","ERC20_ABI","Erc20Bytes32","fetchChunk","multicall","chunk","callStatic","returnData","error","code","message","indexOf","half","Promise","all","slice","then","c0","c1","logger","debug","extra","parseTokens","addresses","items","Error","_v","arrayToSlices","reduce","acc","index","parsedToken","nameData","symbolData","decimalsData","nameDataBytes32","symbolDataBytes32","success","decodeFunctionResult","parseInt","Token","tryParseToken","createCallsForToken","target","encodeFunctionData","callData2","callData","gasLimit","TokenPromiseCache","getTokensAsync","formattedAddresses","calls","previouslyCalledTokens","forEach","tokenAddress","key","buildCurrencyKey","previousCall","push","formattedAddress","calledTokens","tokenMap2","tokenMap","currencyKey","useContractMultichain","addressMap","ABI","chainIds","account","useAccount","provider","walletProvider","useWeb3React","isSupportedChain","useIsSupportedChainIdCallback","Object","keys","RPC_PROVIDERS","getContract","useInterfaceMulticallContracts","MULTICALL_ADDRESSES","MulticallJSON","POSITION_CACHE_EXPIRY","ms","cachedPositionsAtom","atom","poolAddressKey","details","fee","poolAddressCacheAtom","atomWithStorage","tokenCacheAtom","useGetCachedTokens","chains","multicallContracts","tokenCache","cache","setCache","useAtom","get","entry","deserializeToken","set","cache2","serializeToken","useTokenCache","fetchRemoteTokens","fetched","values","getTokens","local","missing","Set","cached","add","MAX_UINT128","BigNumber","pow","sub","useMultiChainPositions","cachedPositions","pms","V3NFT_ADDRESSES","NFTPositionManagerJSON","multicalls","poolAddressCache","updateCache","c","usePoolAddressCache","setPositions","setCachedPositions","setPositionsAndStaleTimeout","positions","result","setTimeout","useCachedPositions","positionsFetching","useRef","positionsLoading","current","feeMap","setFeeMap","priceMap","pricesLoading","contracts","contractMap","pool","toContractInput","useUniswapPricesQuery","skip","currencyKeyFromGraphQL","project","markets","usePoolPriceMap","fetchPositionFees","pm","positionIds","id","interface","tokenId","recipient","amount0Max","amount1Max","fees","feeBytes","toString","fetchPositionIds","balance","toNumber","idByte","fetchPositionDetails","positionBytes","fetchPositionInfo","positionDetails","poolInterface","IUniswapV3PoolStateJSON","flatMap","poolPairs","factoryAddress","V3_CORE_FACTORY_ADDRESSES","computePoolAddress","getChainInfo","sdkId","slot0","owner","Pool","sqrtPriceX96","position","Position","liquidity","tickLower","tickUpper","inRange","closed","eq","createPositionInfo","fetchPositionsForChain","balanceOf","lt","postionDetails","wrappedError","cause","fetchAllPositions","positions2","flat","useEffect","document","hasFocus","onFocus","window","removeEventListener","addEventListener","parseFloat","toExact","prices","PoolDetailsStatsButtonsRow","surface1","Z_INDEX","sticky","PoolButton","button","$open","accent1","opacify","timing","inOut","$fixedWidth","white","ButtonBubble","SwapModalWrapper","open","ease","SwapWrapperOuter","CurrencySelect","fixed","PoolDetailsStatsButtons","userOwnedPositions","find","findMatchingPosition","switchChain","useSwitchChain","location","useLocation","currencyInfo0","useCurrencyInfo","currencyId","currencyInfo1","isLPRedesignEnabled","useFeatureFlag","FeatureFlags","LPRedesign","handleAddLiquidity","currency0Address","currency1Address","urlParam","state","pathname","url","swapModalOpen","toggleSwapModalOpen","useReducer","isScreenSize","screenSizeLargerThanTablet","token0Warning","useTokenWarning","token1Warning","priorityWarning","getPriorityWarning","tokenProtectionEnabled","TokenProtection","showWarningModal","setShowWarningModal","closeWarningModal","warningModalCurrencyInfo","setWarningModalCurrencyInfo","onWarningCardCtaPressed","currencyInfo","flexDirection","PoolButtonsWrapper","justifyContent","X","fontWeight","Plus","Swap","syncTabToUrl","initialInputCurrency","initialOutputCurrency","compact","disableTokenInputs","TokenWarningCard","TokenWarningModal","isInfoOnlyWarning","isVisible","closeModalOnly","onAcknowledge","Boolean","TokenSafetyMessage","warning","StrongWarning","plural","tokenSymbol","Scrim","$maxWidth","$zIndex","children","isTouchDevice","useIsTouchDevice","direction","scrollDirection","useScroll","Wrapper","MobileBottomBar","wrapperProps","hide","ScrollDirection","DOWN","PoolDetailsPositionsTable","textDecoration","getPositionUrl","LiquidityPositionCard","liquidityPosition","PoolTableTransactionType","PoolTableTransactionType2","PoolTransactionDefaultQuerySize","TableWrapper","PoolTransactionColumnWidth","comparePoolTokens","WRAPPED_NATIVE_CURRENCY","supportedChainIdFromGQLChain","PoolDetailsTransactionsTable","useChainIdFromUrlParam","activeLocalCurrency","useAppFiatCurrency","formatFiatPrice","filterModalIsOpen","toggleFilterModal","s","filterAnchorRef","setFilters","BUY","SELL","REMOVE","ADD","transactions","loadMore","first","dataV4","dataV3","dataV2","v4DataEnabled","V4Data","loadingV4","errorV4","fetchMore","fetchMoreV4","useV4PoolTransactionsQuery","loadingV3","errorV3","fetchMoreV3","useV3PoolTransactionsQuery","loadingV2","errorV2","fetchMoreV2","useV2PairTransactionsQuery","loadingMore","v4Pool","onComplete","cursor","timestamp","updateQuery","fetchMoreResult","mergedData","filteredTransactions","tx","tokenIn","token0Address","token0Quantity","isSell","PoolTransactionType","Remove","includes","transaction","hash","maker","amount0","amount1","token1Quantity","amountUSD","usdValue","usePoolTransactions","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","header","Cell","HeaderArrow","OrderDirection","Desc","HeaderSortText","active","cell","TimestampCell","getValue","link","TRANSACTION","span","FilterHeaderRow","clickable","Filter","allFilters","activeFilter","anchorRef","PoolTransactionTableType","grow","fiat","inputTokenAmount","abs","TokenTx","outputTokenAmount","makerAddress","Table","maxHeight","TableHeader","disabled","PoolDetailsTableTab","activeTable","setActiveTable","useGetPositionsQuery","parseRestPosition","calc24HVolChange","currentTime","Date","getTime","dayAgo","twoDaysAgo","volume24h","cur","volume48h","getPoolDetailPageTitle","token0Symbol","token1Symbol","baseTitle","LeftColumn","HR","hr","RightColumn","TokenDetailsWrapper","TokenDetailsHeader","LinksContainer","PoolDetailsPage","chainInfo","unwrappedTokens","useParams","urlChain","poolIdOrAddress","isV4DataEnabled","useV4PoolQuery","errorPolicy","useV3PoolQuery","useV2PairQuery","anyError","anyLoading","V2_BIPS","txCount","token0Supply","token1Supply","concat","totalLiquidity","totalLiquidityPercentChange24h","hook","usePoolData","x","getUnwrappedPoolToken","darkMode","color0","useColor","backgroundColor","color1","poolNotFound","metatagProperties","label","description","metatags","useDynamicMetatags","ThemeProvider","Helmet","tag","meta","POOL_DETAILS_PAGE","properties","token1Address","token0Name","token1Name","backendChain"],"sourceRoot":""}