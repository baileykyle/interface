{"version":3,"file":"static/js/4410.76111c40.chunk.js","mappings":"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","sources":["pages/Pool/Positions/PositionsHeader.tsx","pages/Pool/Positions/TopPools.tsx","pages/Pool/index.tsx"],"sourcesContent":["\"use strict\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { lpStatusConfig } from \"components/Liquidity/constants\";\nimport { getProtocolStatusLabel, getProtocolVersionLabel } from \"components/Liquidity/utils\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, LabeledCheckbox, Text } from \"ui/src\";\nimport { Plus } from \"ui/src/components/icons/Plus\";\nimport { RotatableChevron } from \"ui/src/components/icons/RotatableChevron\";\nimport { StatusIndicatorCircle } from \"ui/src/components/icons/StatusIndicatorCircle\";\nimport { NetworkFilter } from \"uniswap/src/components/network/NetworkFilter\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nconst StyledDropdownButton = {\n  borderRadius: \"$rounded16\",\n  py: \"$padding8\",\n  px: \"$padding12\",\n  backgroundColor: \"$surface3\",\n  borderWidth: 0,\n  hoverStyle: {\n    ...ClickableTamaguiStyle.hoverStyle,\n    backgroundColor: \"none\"\n  }\n};\nexport function PositionsHeader({\n  showFilters = true,\n  selectedChain,\n  selectedVersions,\n  selectedStatus,\n  onChainChange,\n  onVersionChange,\n  onStatusChange\n}) {\n  const { t } = useTranslation();\n  const { isConnected } = useAccount();\n  const { chains } = useEnabledChains();\n  const navigate = useNavigate();\n  const isV4DataEnabled = useFeatureFlag(FeatureFlags.V4Data);\n  const protocolVersions = useMemo(\n    () => isV4DataEnabled ? [ProtocolVersion.V4, ProtocolVersion.V3, ProtocolVersion.V2] : [ProtocolVersion.V3, ProtocolVersion.V2],\n    [isV4DataEnabled]\n  );\n  const statusFilterOptions = useMemo(() => {\n    return [PositionStatus.IN_RANGE, PositionStatus.OUT_OF_RANGE, PositionStatus.CLOSED].map((status) => {\n      const config = lpStatusConfig[status];\n      if (!config) {\n        return null;\n      }\n      return <Flex\n        key={`PositionsHeader-status-${status}`}\n        row\n        gap=\"$spacing8\"\n        width=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      ><StatusIndicatorCircle color={config.color} /><LabeledCheckbox\n        py=\"$spacing4\"\n        size=\"$icon.18\"\n        hoverStyle={{ opacity: 0.8, backgroundColor: \"unset\" }}\n        containerStyle={{ flex: 1 }}\n        checkboxPosition=\"end\"\n        checked={selectedStatus?.includes(status) ?? false}\n        text={getProtocolStatusLabel(status, t)}\n        onCheckPressed={() => onStatusChange(status)}\n      /></Flex>;\n    });\n  }, [selectedStatus, onStatusChange, t]);\n  const versionFilterOptions = useMemo(() => {\n    return protocolVersions.map((version) => <LabeledCheckbox\n      key={`PositionsHeader-version-${version}`}\n      py=\"$spacing4\"\n      hoverStyle={{ opacity: 0.8, backgroundColor: \"unset\" }}\n      checkboxPosition=\"end\"\n      checked={selectedVersions?.includes(version) ?? false}\n      text={getProtocolVersionLabel(version)}\n      onCheckPressed={() => onVersionChange(version)}\n    />);\n  }, [protocolVersions, selectedVersions, onVersionChange]);\n  const createOptions = useMemo(\n    () => protocolVersions.map((version) => {\n      const protocolVersionLabel = getProtocolVersionLabel(version);\n      return <Flex\n        key={`PositionsHeader-create-${protocolVersionLabel}`}\n        p=\"$spacing8\"\n        {...ClickableTamaguiStyle}\n        onPress={() => {\n          navigate(`/positions/create/${protocolVersionLabel}`);\n        }}\n      ><Text variant=\"body2\"><Trans i18nKey=\"position.new.protocol\" values={{ protocol: protocolVersionLabel }} /></Text></Flex>;\n    }),\n    [navigate, protocolVersions]\n  );\n  const [createDropdownOpen, setCreateDropdownOpen] = useState(false);\n  const [protocolDropdownOpen, setProtocolDropdownOpen] = useState(false);\n  const [statusDropdownOpen, setStatusDropdownOpen] = useState(false);\n  return <Flex gap={16}><Text variant=\"heading3\">{t(\"pool.positions.title\")}</Text>{isConnected && <Flex gap=\"$gap8\" row $sm={{ flexDirection: \"column\" }}><Flex gap=\"$spacing1\" row><Flex\n    row\n    gap=\"$gap8\"\n    px=\"$padding16\"\n    backgroundColor=\"$neutral1\"\n    borderTopLeftRadius=\"$rounded16\"\n    borderBottomLeftRadius=\"$rounded16\"\n    alignItems=\"center\"\n    $sm={{ justifyContent: \"center\" }}\n    justifyContent=\"flex-start\"\n    flex={1}\n    {...ClickableTamaguiStyle}\n    onPress={() => {\n      navigate(`/positions/create/${isV4DataEnabled ? \"v4\" : \"v3\"}`);\n    }}\n  ><Plus size={20} color=\"$surface1\" /><Text color=\"$surface1\" variant=\"buttonLabel3\">{t(\"common.new\")}</Text></Flex><DropdownSelector\n    containerStyle={{ width: \"auto\" }}\n    menuLabel={<Flex\n      borderTopRightRadius=\"$rounded16\"\n      borderBottomRightRadius=\"$rounded16\"\n      backgroundColor=\"$neutral1\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      p=\"$padding8\"\n      {...ClickableTamaguiStyle}\n    ><RotatableChevron direction=\"down\" height={20} width={20} color=\"$surface1\" /></Flex>}\n    buttonStyle={{\n      borderWidth: 0,\n      p: 0\n    }}\n    dropdownStyle={{\n      width: 160\n    }}\n    internalMenuItems={<>{createOptions}</>}\n    hideChevron={true}\n    isOpen={createDropdownOpen}\n    toggleOpen={() => {\n      setCreateDropdownOpen((prev) => !prev);\n    }}\n  /></Flex>{showFilters && <Flex row alignItems=\"center\" shrink height=\"100%\" gap=\"$gap4\"><DropdownSelector\n    isOpen={protocolDropdownOpen}\n    toggleOpen={() => {\n      setProtocolDropdownOpen((prev) => !prev);\n    }}\n    menuLabel={<Text variant=\"buttonLabel3\">{t(\"common.status\")}</Text>}\n    internalMenuItems={<>{statusFilterOptions}</>}\n    dropdownStyle={{\n      width: 240\n    }}\n    buttonStyle={StyledDropdownButton}\n  /><DropdownSelector\n    isOpen={statusDropdownOpen}\n    toggleOpen={() => setStatusDropdownOpen((prev) => !prev)}\n    menuLabel={<Text variant=\"buttonLabel3\">{t(\"common.protocol\")}</Text>}\n    internalMenuItems={<>{versionFilterOptions}</>}\n    dropdownStyle={{\n      width: 160\n    }}\n    buttonStyle={StyledDropdownButton}\n  /><Flex\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$rounded16\"\n    px=\"$padding12\"\n    height=\"100%\"\n    {...ClickableTamaguiStyle}\n  ><NetworkFilter\n    includeAllNetworks\n    selectedChain={selectedChain}\n    onPressChain={onChainChange}\n    chainIds={chains}\n    styles={{\n      buttonPaddingY: \"$spacing8\"\n    }}\n  /></Flex></Flex>}</Flex>}</Flex>;\n}\n","\"use strict\";\nimport { LiquidityPositionInfoBadges } from \"components/Liquidity/LiquidityPositionInfoBadges\";\nimport { LoadingRows } from \"components/Loader/styled\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { PoolSortFields } from \"graphql/data/pools/useTopPools\";\nimport { OrderDirection, gqlToCurrency, supportedChainIdFromGQLChain, unwrapToken } from \"graphql/data/util\";\nimport { ExternalArrowLink, LoadingRow } from \"pages/Pool/Positions/shared\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTopPools } from \"state/explore/topPools\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, Text } from \"ui/src\";\nimport { ALL_NETWORKS_ARG } from \"uniswap/src/data/rest/base\";\nimport { useExploreStatsQuery } from \"uniswap/src/data/rest/exploreStats\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nfunction TopPoolCard({ pool }) {\n  const { defaultChainId } = useEnabledChains();\n  const { formatPercent } = useLocalizationContext();\n  const navigate = useNavigate();\n  const chainId = supportedChainIdFromGQLChain(pool.chain) ?? defaultChainId;\n  const token0 = pool.token0 ? gqlToCurrency(unwrapToken(chainId, pool.token0)) : void 0;\n  const token1 = pool.token1 ? gqlToCurrency(unwrapToken(chainId, pool.token1)) : void 0;\n  return <Flex\n    row\n    p=\"$padding16\"\n    borderRadius=\"$rounded20\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    justifyContent=\"space-between\"\n    {...ClickableTamaguiStyle}\n    onPress={() => navigate(`/explore/pools/${toGraphQLChain(chainId ?? defaultChainId).toLowerCase()}/${pool.id}`)}\n  ><Flex row gap=\"$gap16\"><DoubleCurrencyAndChainLogo chainId={chainId} currencies={[token0, token1]} size={44} /><Flex gap=\"$gap4\"><Text variant=\"subheading2\">{token0?.symbol} / {token1?.symbol}</Text><Flex row gap={2} alignItems=\"center\"><LiquidityPositionInfoBadges\n    size=\"small\"\n    versionLabel={pool.protocolVersion?.toLowerCase()}\n    feeTier={pool.feeTier}\n  /></Flex></Flex></Flex><Text variant=\"body2\" color=\"$neutral2\">{formatPercent(pool.apr.toFixed(3))} <Trans i18nKey=\"pool.apr\" /></Text></Flex>;\n}\nexport function TopPools({ chainId }) {\n  const { t } = useTranslation();\n  const {\n    data: exploreStatsData,\n    isLoading: exploreStatsLoading,\n    error: exploreStatsError\n  } = useExploreStatsQuery({\n    chainId: chainId ? chainId.toString() : ALL_NETWORKS_ARG\n  });\n  const { topPools } = useTopPools(\n    { data: exploreStatsData, isLoading: exploreStatsLoading, isError: !!exploreStatsError },\n    { sortDirection: OrderDirection.Desc, sortBy: PoolSortFields.TVL }\n  );\n  if (exploreStatsLoading) {\n    return <LoadingRows><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /></LoadingRows>;\n  }\n  return <Flex gap=\"$gap20\"><Text variant=\"subheading1\"><Trans i18nKey=\"pool.top.tvl\" /></Text><Flex gap=\"$gap12\">{topPools?.slice(0, 6).map((pool) => {\n    return <TopPoolCard key={pool.id} pool={pool} />;\n  })}</Flex><ExternalArrowLink href=\"/explore/pools\" openInNewTab={false}>{t(\"explore.more.pools\")}</ExternalArrowLink></Flex>;\n}\n","\"use strict\";\nimport PROVIDE_LIQUIDITY from \"assets/images/provideLiquidity.png\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport V4_HOOK from \"assets/images/v4Hooks.png\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { Pool as PoolIcon } from \"components/Icons/Pool\";\nimport { LiquidityPositionCard, LiquidityPositionCardLoader } from \"components/Liquidity/LiquidityPositionCard\";\nimport { getPositionUrl, parseRestPosition } from \"components/Liquidity/utils\";\nimport { TopPoolTable, sortAscendingAtom, sortMethodAtom } from \"components/Pools/PoolTable/PoolTable\";\nimport { OrderDirection } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { atom, useAtom } from \"jotai\";\nimport { useAtomValue, useResetAtom } from \"jotai/utils\";\nimport { PositionsHeader } from \"pages/Pool/Positions/PositionsHeader\";\nimport { TopPools } from \"pages/Pool/Positions/TopPools\";\nimport { ExternalArrowLink } from \"pages/Pool/Positions/shared\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { useTopPools } from \"state/explore/topPools\";\nimport { usePendingLPTransactionsChangeListener } from \"state/transactions/hooks\";\nimport { useRequestPositionsForSavedPairs } from \"state/user/hooks\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Anchor, Button, Flex, Text, useMedia, useSporeColors } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { X } from \"ui/src/components/icons/X\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { ALL_NETWORKS_ARG } from \"uniswap/src/data/rest/base\";\nimport { useExploreStatsQuery } from \"uniswap/src/data/rest/exploreStats\";\nimport { useGetPositionsInfiniteQuery } from \"uniswap/src/data/rest/getPositions\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag, useFeatureFlagWithLoading } from \"uniswap/src/features/gating/hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal } from \"uniswap/src/features/telemetry/constants\";\nconst PAGE_SIZE = 25;\nfunction EmptyPositionsView({ chainId, isConnected }) {\n  const colors = useSporeColors();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const accountDrawer = useAccountDrawer();\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const resetSortMethod = useResetAtom(sortMethodAtom);\n  const resetSortAscending = useResetAtom(sortAscendingAtom);\n  useEffect(() => {\n    resetSortMethod();\n    resetSortAscending();\n  }, [resetSortAscending, resetSortMethod]);\n  const {\n    data: exploreStatsData,\n    isLoading: exploreStatsLoading,\n    error: exploreStatsError\n  } = useExploreStatsQuery({\n    chainId: chainId ? chainId.toString() : ALL_NETWORKS_ARG\n  });\n  const { topPools } = useTopPools(\n    { data: exploreStatsData, isLoading: exploreStatsLoading, isError: !!exploreStatsError },\n    {\n      sortBy: sortMethod,\n      sortDirection: sortAscending ? OrderDirection.Asc : OrderDirection.Desc\n    }\n  );\n  return <Flex gap=\"$spacing32\"><Flex\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    borderRadius=\"$rounded20\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    borderStyle=\"solid\"\n    p=\"$padding16\"\n    overflow=\"hidden\"\n    cursor={isConnected ? \"auto\" : \"pointer\"}\n    onPress={isConnected ? void 0 : () => {\n      accountDrawer.toggle();\n    }}\n    $md={{ row: false, gap: \"$gap16\", alignItems: \"flex-start\" }}\n  ><Flex alignItems=\"center\" row gap=\"$gap8\"><Flex p=\"$padding8\" borderRadius=\"$rounded12\" backgroundColor=\"$accent2\"><PoolIcon width={iconSizes.icon24} height={iconSizes.icon24} color={colors.accent1.val} /></Flex><Flex shrink><Text variant=\"subheading2\">{isConnected ? t(\"pool.openPosition\") : t(\"positions.welcome\")}</Text><Text variant=\"body2\" color=\"$neutral2\">{isConnected ? t(\"pool.openPosition.cta\") : t(\"positions.welcome.connect\")}</Text></Flex></Flex>{isConnected && <Button theme=\"secondary\" size=\"medium\" onPress={() => navigate(\"/explore/pools\")} $md={{ width: \"100%\" }}><Text>{t(\"pools.explore\")}</Text></Button>}</Flex><Flex gap=\"$gap24\"><Text variant=\"subheading1\"><Trans i18nKey=\"pool.top.tvl\" /></Text><TopPoolTable\n    topPoolData={{ topPools, isLoading: exploreStatsLoading, isError: !!exploreStatsError }}\n    pageSize={10}\n    staticSize\n  /><ExternalArrowLink href=\"/explore/pools\" openInNewTab={false}>{t(\"explore.more.pools\")}</ExternalArrowLink></Flex></Flex>;\n}\nfunction LearnMoreTile({ img, text, link }) {\n  return <Anchor\n    href={link}\n    textDecorationLine=\"none\"\n    hoverStyle={{ textDecorationLine: \"underline\" }}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  ><Flex\n    row\n    width={344}\n    borderRadius=\"$rounded20\"\n    borderColor=\"$surface3\"\n    borderWidth={1}\n    borderStyle=\"solid\"\n    alignItems=\"center\"\n    gap=\"$gap16\"\n    overflow=\"hidden\"\n  ><img src={img} style={{ objectFit: \"cover\", width: \"72px\", height: \"72px\" }} /><Text variant=\"subheading2\">{text}</Text></Flex></Anchor>;\n}\nconst chainFilterAtom = atom(null);\nconst versionFilterAtom = atom([ProtocolVersion.V3, ProtocolVersion.V2]);\nconst statusFilterAtom = atom([PositionStatus.IN_RANGE, PositionStatus.OUT_OF_RANGE]);\nexport default function Pool() {\n  const { t } = useTranslation();\n  const { value: lpRedesignEnabled, isLoading: isLoadingFeatureFlag } = useFeatureFlagWithLoading(\n    FeatureFlags.LPRedesign\n  );\n  const isV4DataEnabled = useFeatureFlag(FeatureFlags.V4Data);\n  const media = useMedia();\n  const [chainFilter, setChainFilter] = useAtom(chainFilterAtom);\n  const { chains: currentModeChains } = useEnabledChains();\n  const [versionFilter, setVersionFilter] = useAtom(versionFilterAtom);\n  const [statusFilter, setStatusFilter] = useAtom(statusFilterAtom);\n  const [closedCTADismissed, setClosedCTADismissed] = useState(false);\n  const account = useAccount();\n  const { address, isConnected } = account;\n  useEffect(() => {\n    if (isV4DataEnabled) {\n      setVersionFilter([ProtocolVersion.V4, ProtocolVersion.V3, ProtocolVersion.V2]);\n    }\n  }, [isV4DataEnabled, setVersionFilter]);\n  const { data, isPlaceholderData, refetch, isLoading, fetchNextPage, hasNextPage, isFetching } = useGetPositionsInfiniteQuery(\n    {\n      address,\n      chainIds: chainFilter ? [chainFilter] : currentModeChains,\n      positionStatuses: statusFilter,\n      protocolVersions: versionFilter,\n      pageSize: PAGE_SIZE,\n      pageToken: \"\"\n    },\n    !isConnected\n  );\n  const loadedPositions = useMemo(() => {\n    return data?.pages.flatMap((positionsResponse) => positionsResponse.positions) || [];\n  }, [data]);\n  const savedPositions = useRequestPositionsForSavedPairs();\n  const isLoadingPositions = !!account.address && (isLoading || !data);\n  const combinedPositions = useMemo(() => {\n    return [...loadedPositions, ...savedPositions.map((p) => p.data?.position) ?? []].map(parseRestPosition).filter((position) => !!position);\n  }, [loadedPositions, savedPositions]);\n  usePendingLPTransactionsChangeListener(refetch);\n  const loadMorePositions = () => {\n    if (hasNextPage && !isFetching) {\n      fetchNextPage();\n    }\n  };\n  const showingEmptyPositions = !isLoadingPositions && combinedPositions.length === 0;\n  if (!isLoadingFeatureFlag && !lpRedesignEnabled) {\n    return <Navigate to=\"/pools\" replace />;\n  }\n  if (isLoadingFeatureFlag) {\n    return null;\n  }\n  return <Trace logImpression page={InterfacePageNameLocal.Positions}><Flex\n    row\n    $xl={{ flexDirection: \"column\", gap: \"$gap16\" }}\n    width=\"100%\"\n    maxWidth={1200}\n    gap={80}\n    py=\"$spacing24\"\n    px=\"$spacing40\"\n    $lg={{ px: \"$spacing20\" }}\n  ><Flex grow shrink gap=\"$spacing24\"><PositionsHeader\n    showFilters={account.isConnected}\n    selectedChain={chainFilter}\n    selectedVersions={versionFilter}\n    selectedStatus={statusFilter}\n    onChainChange={(selectedChain) => {\n      setChainFilter(selectedChain ?? null);\n    }}\n    onVersionChange={(toggledVersion) => {\n      if (versionFilter?.includes(toggledVersion)) {\n        setVersionFilter(versionFilter?.filter((v) => v !== toggledVersion));\n      } else {\n        setVersionFilter([...versionFilter ?? [], toggledVersion]);\n      }\n    }}\n    onStatusChange={(toggledStatus) => {\n      if (statusFilter?.includes(toggledStatus)) {\n        setStatusFilter(statusFilter?.filter((s) => s !== toggledStatus));\n      } else {\n        setStatusFilter([...statusFilter ?? [], toggledStatus]);\n      }\n    }}\n  />{!isLoadingPositions ? combinedPositions.length > 0 ? <Flex gap=\"$gap16\" mb=\"$spacing16\" opacity={isPlaceholderData ? 0.6 : 1}>{combinedPositions.map((position) => {\n    return position ? <Link\n      key={`${position.poolId}-${position.tokenId}-${position.chainId}`}\n      style={{ textDecoration: \"none\" }}\n      to={getPositionUrl(position)}\n    ><LiquidityPositionCard\n      isClickableStyle\n      key={`LiquidityPositionCard-${position?.tokenId}`}\n      liquidityPosition={position}\n    /></Link> : null;\n  })}</Flex> : <EmptyPositionsView chainId={chainFilter} isConnected={isConnected} /> : <Flex gap=\"$gap16\">{Array.from({ length: 5 }, (_, index) => <LiquidityPositionCardLoader key={index} />)}</Flex>}{hasNextPage && <Flex mx=\"auto\"><Button theme=\"outline\" onPress={loadMorePositions} disabled={isFetching}><Text variant=\"buttonLabel3\">{t(\"common.loadMore\")}</Text></Button></Flex>}{!statusFilter.includes(PositionStatus.CLOSED) && !closedCTADismissed && account.address && <Flex\n    borderWidth=\"$spacing1\"\n    borderColor=\"$surface3\"\n    borderRadius=\"$rounded12\"\n    mb=\"$spacing24\"\n    p=\"$padding12\"\n    gap=\"$gap12\"\n    row\n    centered\n  ><Flex height=\"100%\"><InfoCircleFilled color=\"$neutral2\" size=\"$icon.20\" /></Flex><Flex grow flexBasis={0}><Text variant=\"body3\" color=\"$neutral1\"><Trans i18nKey=\"pool.closedCTA.title\" /></Text><Text variant=\"body3\" color=\"$neutral2\"><Trans i18nKey=\"pool.closedCTA.description\" /></Text></Flex><Flex height=\"100%\" onPress={() => setClosedCTADismissed(true)} cursor=\"pointer\"><X color=\"$neutral2\" size=\"$icon.20\" /></Flex></Flex>}<Flex row centered mb=\"$spacing24\" gap=\"$gap4\"><Text variant=\"body3\" color=\"$neutral2\">{t(\"pool.import.link.description\")}</Text><Anchor href=\"/pools/v2/find\" textDecorationLine=\"none\"><Text variant=\"body3\" color=\"$neutral1\" {...ClickableTamaguiStyle}>{t(\"pool.import.positions.v2\")}</Text></Anchor></Flex></Flex><Flex gap=\"$gap32\" pt={64} $xl={{ pt: \"$spacing12\" }}>{!media.xl && !showingEmptyPositions && !isLoading && <TopPools chainId={chainFilter} />}<Flex gap=\"$gap20\" mb=\"$spacing24\"><Text variant=\"subheading1\">{t(\"liquidity.learnMoreLabel\")}</Text><Flex gap=\"$gap12\"><LearnMoreTile\n    img={PROVIDE_LIQUIDITY}\n    text={t(\"liquidity.provideOnProtocols\")}\n    link={uniswapUrls.helpArticleUrls.providingLiquidityInfo}\n  />{isV4DataEnabled && <LearnMoreTile\n    img={V4_HOOK}\n    text={t(\"liquidity.hooks\")}\n    link={uniswapUrls.helpArticleUrls.v4HooksInfo}\n  />}</Flex><ExternalArrowLink href={uniswapUrls.helpArticleUrls.positionsLearnMore}>{t(\"common.button.learn\")}</ExternalArrowLink></Flex></Flex></Flex></Trace>;\n}\n"],"names":["StyledDropdownButton","borderRadius","py","px","backgroundColor","borderWidth","hoverStyle","ClickableTamaguiStyle","PositionsHeader","showFilters","selectedChain","selectedVersions","selectedStatus","onChainChange","onVersionChange","onStatusChange","t","useTranslation","isConnected","useAccount","chains","useEnabledChains","navigate","useNavigate","isV4DataEnabled","useFeatureFlag","FeatureFlags","V4Data","protocolVersions","useMemo","ProtocolVersion","V4","V3","V2","statusFilterOptions","PositionStatus","IN_RANGE","OUT_OF_RANGE","CLOSED","map","status","config","lpStatusConfig","Flex","row","gap","width","justifyContent","alignItems","StatusIndicatorCircle","color","LabeledCheckbox","size","opacity","containerStyle","flex","checkboxPosition","checked","includes","text","getProtocolStatusLabel","onCheckPressed","versionFilterOptions","version","getProtocolVersionLabel","createOptions","protocolVersionLabel","p","onPress","Text","variant","Trans","i18nKey","values","protocol","createDropdownOpen","setCreateDropdownOpen","useState","protocolDropdownOpen","setProtocolDropdownOpen","statusDropdownOpen","setStatusDropdownOpen","$sm","flexDirection","borderTopLeftRadius","borderBottomLeftRadius","Plus","DropdownSelector","menuLabel","borderTopRightRadius","borderBottomRightRadius","RotatableChevron","direction","height","buttonStyle","dropdownStyle","internalMenuItems","hideChevron","isOpen","toggleOpen","prev","shrink","NetworkFilter","includeAllNetworks","onPressChain","chainIds","styles","buttonPaddingY","TopPoolCard","pool","token0","token1","defaultChainId","formatPercent","useLocalizationContext","chainId","supportedChainIdFromGQLChain","chain","gqlToCurrency","unwrapToken","borderColor","toGraphQLChain","toLowerCase","id","DoubleCurrencyAndChainLogo","currencies","symbol","LiquidityPositionInfoBadges","versionLabel","protocolVersion","feeTier","apr","toFixed","TopPools","topPools","data","exploreStatsData","isLoading","exploreStatsLoading","error","exploreStatsError","useExploreStatsQuery","toString","ALL_NETWORKS_ARG","useTopPools","isError","sortDirection","OrderDirection","Desc","sortBy","PoolSortFields","TVL","LoadingRows","LoadingRow","slice","ExternalArrowLink","href","openInNewTab","PAGE_SIZE","EmptyPositionsView","colors","useSporeColors","accountDrawer","useAccountDrawer","sortMethod","useAtomValue","sortMethodAtom","sortAscending","sortAscendingAtom","resetSortMethod","useResetAtom","resetSortAscending","useEffect","Asc","borderStyle","overflow","cursor","toggle","$md","PoolIcon","iconSizes","icon24","accent1","val","Button","theme","TopPoolTable","topPoolData","pageSize","staticSize","LearnMoreTile","img","link","Anchor","textDecorationLine","target","rel","src","style","objectFit","chainFilterAtom","atom","versionFilterAtom","statusFilterAtom","Pool","value","lpRedesignEnabled","isLoadingFeatureFlag","useFeatureFlagWithLoading","LPRedesign","media","useMedia","chainFilter","setChainFilter","useAtom","currentModeChains","versionFilter","setVersionFilter","statusFilter","setStatusFilter","closedCTADismissed","setClosedCTADismissed","account","address","isPlaceholderData","refetch","fetchNextPage","hasNextPage","isFetching","useGetPositionsInfiniteQuery","positionStatuses","pageToken","loadedPositions","pages","flatMap","positionsResponse","positions","savedPositions","useRequestPositionsForSavedPairs","isLoadingPositions","combinedPositions","position","parseRestPosition","filter","usePendingLPTransactionsChangeListener","showingEmptyPositions","length","Trace","logImpression","page","InterfacePageNameLocal","Positions","$xl","maxWidth","$lg","grow","toggledVersion","v","toggledStatus","s","Array","from","_","index","LiquidityPositionCardLoader","mb","Link","textDecoration","to","getPositionUrl","LiquidityPositionCard","isClickableStyle","liquidityPosition","tokenId","poolId","mx","disabled","centered","InfoCircleFilled","flexBasis","X","pt","xl","PROVIDE_LIQUIDITY","uniswapUrls","helpArticleUrls","providingLiquidityInfo","V4_HOOK","v4HooksInfo","positionsLearnMore","Navigate","replace"],"sourceRoot":""}