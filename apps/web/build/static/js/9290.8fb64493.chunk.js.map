{"version":3,"file":"static/js/9290.8fb64493.chunk.js","mappings":"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","sources":["../../../packages/uniswap/src/data/rest/getPosition.ts","components/BreadcrumbNav/index.tsx","components/Liquidity/PositionNFT.tsx","hooks/usePositionOwner.ts","hooks/usePositionTokenURI.ts","pages/NotFound/index.tsx","components/Liquidity/LiquidityPositionAmountsTile.tsx","components/Liquidity/LiquidityPositionPriceRangeTile.tsx","pages/Pool/Positions/PositionPage.tsx"],"sourcesContent":["/* eslint-disable no-restricted-imports */\nimport { PartialMessage } from '@bufbuild/protobuf'\nimport { ConnectError } from '@connectrpc/connect'\nimport { useQuery } from '@connectrpc/connect-query'\nimport { UseQueryResult } from '@tanstack/react-query'\nimport { getPosition } from '@uniswap/client-pools/dist/pools/v1/api-PoolsService_connectquery'\nimport { GetPositionRequest, GetPositionResponse } from '@uniswap/client-pools/dist/pools/v1/api_pb'\nimport { uniswapGetTransport } from 'uniswap/src/data/rest/base'\n\nexport function useGetPositionQuery(\n  input?: PartialMessage<GetPositionRequest>,\n): UseQueryResult<GetPositionResponse, ConnectError> {\n  return useQuery(getPosition, input, { transport: uniswapGetTransport, enabled: !!input })\n}\n","\"use strict\";\nimport Tooltip, { TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ClickableStyle } from \"theme/components\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nexport const BreadcrumbNavContainer = styled.nav`\n  display: flex;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 16px;\n  line-height: 24px;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n  width: fit-content;\n`;\nexport const BreadcrumbNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral2};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  text-decoration: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.neutral3};\n  }\n`;\nconst CurrentPageBreadcrumbContainer = styled(Row)`\n  gap: 6px;\n`;\nconst PageTitleText = styled.h1`\n  font-weight: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: ${({ theme }) => theme.neutral1};\n  white-space: nowrap;\n  margin: 0;\n`;\nconst TokenAddressHoverContainer = styled(Row)`\n  cursor: ${({ isDisabled }) => isDisabled ? \"default\" : \"pointer\"};\n  gap: 10px;\n  white-space: nowrap;\n`;\nconst CopyIcon = styled(Copy)`\n  ${ClickableStyle}\n`;\nexport const CurrentPageBreadcrumb = ({\n  address,\n  currency,\n  poolName\n}) => {\n  const { t } = useTranslation();\n  const { neutral2 } = useTheme();\n  const screenSize = useScreenSize();\n  const [hover, setHover] = useState(false);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const isNative = currency?.isNative;\n  const tokenSymbolName = currency?.symbol ?? t(\"tdp.symbolNotFound\");\n  const shouldEnableCopy = screenSize[\"sm\"];\n  const shouldShowActions = shouldEnableCopy && hover && !isCopied;\n  return <CurrentPageBreadcrumbContainer\n    aria-current=\"page\"\n    data-testid=\"current-breadcrumb\"\n    onMouseEnter={() => setHover(true)}\n    onMouseLeave={() => setHover(false)}\n  ><PageTitleText>{currency ? tokenSymbolName : poolName}</PageTitleText>{\" \"}{(!currency || currency && !isNative) && <TokenAddressHoverContainer\n    data-testid=\"breadcrumb-token-address\"\n    isDisabled={!shouldEnableCopy}\n    onClick={shouldEnableCopy ? copy : void 0}\n  ><Tooltip placement=\"bottom\" size={TooltipSize.Max} show={isCopied} text={t(\"common.copied\")}>{shortenAddress(address)}</Tooltip>{shouldShowActions && <CopyIcon data-testid=\"breadcrumb-hover-copy\" width={16} height={16} color={neutral2} />}</TokenAddressHoverContainer>}</CurrentPageBreadcrumbContainer>;\n};\n","\"use strict\";\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nfunction getSnapshot(src, canvas, targetHeight) {\n  const context = canvas.getContext(\"2d\");\n  if (context) {\n    let { width, height } = src;\n    const ratio = width / height;\n    height = targetHeight;\n    width = Math.round(ratio * targetHeight);\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n    context.scale(devicePixelRatio, devicePixelRatio);\n    context.clearRect(0, 0, width, height);\n    context.drawImage(src, 0, 0, width, height);\n  }\n}\nconst NFTGrid = styled.div`\n  display: grid;\n  grid-template: 'overlap';\n  min-height: 400px;\n`;\nconst NFTCanvas = styled.canvas`\n  grid-area: overlap;\n`;\nconst NFTImage = styled.img`\n  grid-area: overlap;\n  height: 400px;\n  /* Ensures SVG appears on top of canvas. */\n  z-index: 1;\n`;\nexport function PositionNFT({ image, height: targetHeight }) {\n  const [animate, setAnimate] = useState(false);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  return <NFTGrid\n    onMouseEnter={() => {\n      setAnimate(true);\n    }}\n    onMouseLeave={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n      setAnimate(false);\n    }}\n  ><NFTCanvas ref={canvasRef} /><NFTImage\n    ref={imageRef}\n    src={image}\n    hidden={!animate}\n    onLoad={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n    }}\n  /></NFTGrid>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useTokenContract } from \"hooks/useContract\";\nimport { useNFTPositionManagerContract } from \"hooks/usePositionTokenURI\";\nimport JSBI from \"jsbi\";\nimport { useSingleCallResult } from \"lib/hooks/multicall\";\nexport function usePositionOwner(tokenId, chainId, version) {\n  const contract = useNFTPositionManagerContract(version ?? ProtocolVersion.V3, chainId);\n  const input = tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16);\n  return useSingleCallResult(tokenId ? contract : null, \"ownerOf\", [input]).result?.[0];\n}\nexport function usePositionOwnerV2(account, address, chainId) {\n  const contract = useTokenContract(address ?? void 0, false, chainId);\n  const resultBalance = useSingleCallResult(contract, \"balanceOf\", [account ?? void 0]).result?.[0].toString();\n  const isOwner = resultBalance ? JSBI.GT(JSBI.BigInt(resultBalance), JSBI.BigInt(0)) : false;\n  return isOwner;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useV3NFTPositionManagerContract, useV4NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useMemo } from \"react\";\nconst STARTS_WITH = \"data:application/json;base64,\";\nexport function useNFTPositionManagerContract(version, chainId) {\n  const v3Contract = useV3NFTPositionManagerContract(false, chainId);\n  const v4Contract = useV4NFTPositionManagerContract(false, chainId);\n  return version === ProtocolVersion.V3 ? v3Contract : v4Contract;\n}\nexport function usePositionTokenURI(tokenId, chainId, version) {\n  const contract = useNFTPositionManagerContract(version ?? ProtocolVersion.V3, chainId);\n  const { data, isLoading, error } = useQuery({\n    queryKey: [\"PositionTokenURI\", tokenId, chainId, version],\n    queryFn: async () => {\n      const input = tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16);\n      if (!input) {\n        return null;\n      }\n      return await contract?.tokenURI(input);\n    }\n  });\n  return useMemo(() => {\n    if (error || !tokenId) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (isLoading) {\n      return {\n        valid: true,\n        loading: true\n      };\n    }\n    if (!data) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (!data || !data.startsWith(STARTS_WITH)) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    try {\n      const json = JSON.parse(atob(data.slice(STARTS_WITH.length)));\n      return {\n        valid: true,\n        loading: false,\n        result: json\n      };\n    } catch (error2) {\n      return { valid: false, loading: false };\n    }\n  }, [error, isLoading, data, tokenId]);\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport darkImage from \"assets/images/404-page-dark.png\";\nimport lightImage from \"assets/images/404-page-light.png\";\nimport { SmallButtonPrimary } from \"components/Button/buttons\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsDarkMode } from \"theme/components/ThemeToggle\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled(Container)`\n  gap: 30px;\n`;\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`;\nexport default function NotFound({ title, subtitle, actionButton }) {\n  const isDarkMode = useIsDarkMode();\n  const isMobile = useIsMobile();\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero;\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge;\n  return <PageWrapper><Trace logImpression page={InterfacePageName.NOT_FOUND}><Header><Container>{title ?? <Title>404</Title>}{subtitle ?? <Paragraph color=\"neutral2\"><Trans i18nKey=\"common.pageNotFound\" /></Paragraph>}</Container><Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" /></Header>{actionButton ?? <SmallButtonPrimary as={Link} to=\"/\"><Trans i18nKey=\"notFound.oops\" /></SmallButtonPrimary>}</Trace></PageWrapper>;\n}\n","\"use strict\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, Text, TouchableArea } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function LiquidityPositionAmountsTile({\n  currency0Amount,\n  currency1Amount,\n  fiatValue0,\n  fiatValue1\n}) {\n  const navigate = useNavigate();\n  const currencyInfo0 = useCurrencyInfo(currency0Amount.currency);\n  const currencyInfo1 = useCurrencyInfo(currency1Amount.currency);\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const totalFiatValue = fiatValue0?.add(fiatValue1 ?? CurrencyAmount.fromRawAmount(fiatValue0.currency, 0));\n  const chainUrlParam = getChainInfo(currencyInfo0?.currency.chainId || UniverseChainId.Mainnet).urlParam;\n  const currency0Link = getTokenDetailsURL({\n    address: currencyInfo0?.currency.isToken ? currencyInfo0?.currency.address : void 0,\n    // util handles native addresses\n    chainUrlParam\n  });\n  const currency1Link = getTokenDetailsURL({\n    address: currencyInfo1?.currency.isToken ? currencyInfo1?.currency.address : void 0,\n    // util handles native addresses\n    chainUrlParam\n  });\n  return <Flex borderRadius=\"$rounded12\" gap=\"$gap12\" backgroundColor=\"$surface3\" p=\"$padding16\"><Flex row alignItems=\"center\" justifyContent=\"space-between\"><TouchableArea onPress={() => navigate(currency0Link)} {...ClickableTamaguiStyle}><Flex row alignItems=\"center\" gap=\"$gap16\"><CurrencyLogo currencyInfo={currencyInfo0} size={20} /><Text variant=\"body2\" color=\"neutral1\">{currency0Amount.currency.symbol}</Text></Flex></TouchableArea><Flex row alignItems=\"center\" gap=\"$gap8\"><Text variant=\"body2\" color=\"$neutral1\">{formatCurrencyAmount({ value: currency0Amount })}</Text>{fiatValue0?.greaterThan(0) && <Text variant=\"body2\" color=\"$neutral2\">\n              ({formatCurrencyAmount({ value: fiatValue0, type: NumberType.FiatTokenPrice })})\n            </Text>}{totalFiatValue && totalFiatValue?.toExact() !== \"0\" && fiatValue0 && <Text variant=\"body2\" color=\"$neutral1\">{formatPercent(new Percent(fiatValue0.quotient, totalFiatValue.quotient).toFixed(6))}</Text>}</Flex></Flex><Flex row alignItems=\"center\" justifyContent=\"space-between\"><TouchableArea onPress={() => navigate(currency1Link)} {...ClickableTamaguiStyle}><Flex row alignItems=\"center\" gap=\"$gap16\"><CurrencyLogo currencyInfo={currencyInfo1} size={20} /><Text variant=\"body2\" color=\"$neutral1\">{currency1Amount.currency.symbol}</Text></Flex></TouchableArea><Flex row alignItems=\"center\" gap=\"$gap8\"><Text variant=\"body2\" color=\"neutral1\">{formatCurrencyAmount({ value: currency1Amount })}</Text>{fiatValue1?.greaterThan(0) && <Text variant=\"body2\" color=\"$neutral2\">\n              ({formatCurrencyAmount({ value: fiatValue1, type: NumberType.FiatTokenPrice })})\n            </Text>}{totalFiatValue && totalFiatValue?.toExact() !== \"0\" && fiatValue1 && <Text variant=\"body2\" color=\"$neutral1\">{formatPercent(new Percent(fiatValue1.quotient, totalFiatValue.quotient).toFixed(6))}</Text>}</Flex></Flex></Flex>;\n}\n","\"use strict\";\nimport { useGetRangeDisplay } from \"components/Liquidity/hooks\";\nimport { useMemo, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, SegmentedControl, Text, styled } from \"ui/src\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst InnerTile = styled(Flex, {\n  grow: true,\n  alignItems: \"center\",\n  gap: \"$gap8\",\n  borderRadius: \"$rounded12\",\n  backgroundColor: \"$surface3\",\n  p: \"$padding16\"\n});\nexport function LiquidityPositionPriceRangeTile({\n  token1,\n  priceOrdering,\n  token0CurrentPrice,\n  token1CurrentPrice,\n  feeTier,\n  tickLower,\n  tickUpper\n}) {\n  const { formatPrice } = useFormatter();\n  const [pricesInverted, setPricesInverted] = useState(false);\n  const currencyASymbol = token0CurrentPrice.baseCurrency.symbol;\n  const currencyBSymbol = token0CurrentPrice.quoteCurrency.symbol;\n  const controlOptions = useMemo(() => {\n    return [\n      {\n        value: currencyASymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyASymbol}</Text>\n      },\n      {\n        value: currencyBSymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyBSymbol}</Text>\n      }\n    ];\n  }, [currencyASymbol, currencyBSymbol]);\n  if (!currencyASymbol || !currencyBSymbol) {\n    throw new Error(\"LiquidityPositionPriceRangeTile: Currency symbols are required\");\n  }\n  const { minPrice, maxPrice, tokenASymbol, tokenBSymbol } = useGetRangeDisplay({\n    priceOrdering,\n    feeTier,\n    tickLower,\n    tickUpper,\n    pricesInverted\n  });\n  const currentPrice = useMemo(() => {\n    const { base } = priceOrdering;\n    if (!base) {\n      return void 0;\n    }\n    if (!pricesInverted) {\n      return base?.equals(token1) ? token1CurrentPrice : token0CurrentPrice;\n    }\n    return base?.equals(token1) ? token0CurrentPrice : token1CurrentPrice;\n  }, [priceOrdering, token0CurrentPrice, token1CurrentPrice, token1, pricesInverted]);\n  return <Flex backgroundColor=\"$surface2\" borderRadius=\"$rounded12\" p=\"$padding12\" width=\"100%\" gap=\"$gap12\"><Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\"><Flex row alignItems=\"center\" gap=\"$gap12\"><Text variant=\"subheading1\"><Trans i18nKey=\"pool.priceRange\" /></Text></Flex><SegmentedControl\n    size=\"large\"\n    options={controlOptions}\n    selectedOption={pricesInverted ? currencyBSymbol : currencyASymbol}\n    onSelectOption={(selected) => {\n      setPricesInverted(selected !== currencyASymbol);\n    }}\n  /></Flex><Flex row width=\"100%\" gap=\"$gap12\" $lg={{ row: false }}><InnerTile><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.minPrice\" /></Text><Text variant=\"heading2\" color=\"$neutral1\">{minPrice}</Text><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  /></Text></InnerTile><InnerTile><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.maxPrice\" /></Text><Text variant=\"heading2\" color=\"$neutral1\">{maxPrice}</Text><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  /></Text></InnerTile></Flex><InnerTile><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"common.currentPrice\" /></Text><Text variant=\"heading2\" color=\"$neutral1\">{formatPrice({ price: currentPrice, type: NumberType.TokenTx })}</Text><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  /></Text></InnerTile></Flex>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { LiquidityPositionAmountsTile } from \"components/Liquidity/LiquidityPositionAmountsTile\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { LiquidityPositionPriceRangeTile } from \"components/Liquidity/LiquidityPositionPriceRangeTile\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { useV3OrV4PositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { LoadingFullscreen, LoadingRows } from \"components/Loader/styled\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePositionOwner } from \"hooks/usePositionOwner\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport NotFound from \"pages/NotFound\";\nimport { useCanUnwrapCurrency } from \"pages/Pool/Positions/create/utils\";\nimport { LoadingRow } from \"pages/Pool/Positions/shared\";\nimport { useMemo, useState } from \"react\";\nimport { ArrowLeft } from \"react-feather\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { MultichainContextProvider } from \"state/multichain/MultichainContext\";\nimport { usePendingLPTransactionsChangeListener } from \"state/transactions/hooks\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Button, Flex, Main, Switch, Text, styled } from \"ui/src\";\nimport { useGetPositionQuery } from \"uniswap/src/data/rest/getPosition\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag, useFeatureFlagWithLoading } from \"uniswap/src/features/gating/hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal, ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useNativeCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { currencyId, currencyIdToAddress } from \"uniswap/src/utils/currencyId\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { useAccount } from \"wagmi\";\nconst BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"$spacing32\",\n  width: \"100%\",\n  maxWidth: 1200,\n  zIndex: \"$default\",\n  py: \"$spacing24\",\n  px: \"$spacing40\",\n  $lg: {\n    px: \"$padding20\"\n  }\n});\nexport const HeaderButton = styled(Flex, {\n  row: true,\n  backgroundColor: \"$surface2\",\n  borderRadius: \"$rounded12\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  gap: \"$gap4\",\n  py: \"$padding8\",\n  px: \"$padding12\",\n  ...ClickableTamaguiStyle,\n  variants: {\n    emphasis: {\n      primary: {\n        backgroundColor: \"$accent3\"\n      },\n      secondary: {\n        backgroundColor: \"$surface2\"\n      }\n    },\n    disabled: {\n      true: {\n        cursor: \"default\",\n        hoverStyle: {\n          opacity: 1\n        },\n        pressStyle: {\n          opacity: 1\n        }\n      }\n    }\n  }\n});\nfunction parseTokenId(tokenId) {\n  if (!tokenId) {\n    return void 0;\n  }\n  try {\n    return BigNumber.from(tokenId);\n  } catch (error) {\n    return void 0;\n  }\n}\nexport default function PositionPageWrapper() {\n  const chainId = useChainIdFromUrlParam();\n  return <MultichainContextProvider initialChainId={chainId}><PositionPage /></MultichainContextProvider>;\n}\nfunction PositionPage() {\n  const { tokenId: tokenIdFromUrl } = useParams();\n  const tokenId = parseTokenId(tokenIdFromUrl);\n  const chainId = useChainIdFromUrlParam();\n  const chainInfo = chainId ? getChainInfo(chainId) : void 0;\n  const account = useAccount();\n  const { pathname } = useLocation();\n  const {\n    data,\n    isLoading: positionLoading,\n    refetch\n  } = useGetPositionQuery({\n    owner: account?.address ?? ZERO_ADDRESS,\n    protocolVersion: pathname.includes(\"v3\") ? ProtocolVersion.V3 : pathname.includes(\"v4\") ? ProtocolVersion.V4 : ProtocolVersion.UNSPECIFIED,\n    tokenId: tokenIdFromUrl,\n    chainId: chainId ?? account.chainId\n  });\n  const position = data?.position;\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const metadata = usePositionTokenURI(tokenId, chainInfo?.id, positionInfo?.version);\n  const owner = usePositionOwner(tokenId, chainInfo?.id, positionInfo?.version);\n  usePendingLPTransactionsChangeListener(refetch);\n  const dispatch = useAppDispatch();\n  const [collectAsWeth, setCollectAsWeth] = useState(false);\n  const { value: lpRedesignEnabled, isLoading } = useFeatureFlagWithLoading(FeatureFlags.LPRedesign);\n  const isV4DataEnabled = useFeatureFlag(FeatureFlags.V4Data);\n  const { formatCurrencyAmount } = useFormatter();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { currency0Amount, currency1Amount, status } = positionInfo ?? {};\n  const {\n    feeValue0,\n    feeValue1,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    token0CurrentPrice,\n    token1CurrentPrice,\n    fiatValue0,\n    fiatValue1,\n    priceOrdering\n  } = useV3OrV4PositionDerivedInfo(positionInfo);\n  const canUnwrap0 = useCanUnwrapCurrency(currency0Amount?.currency);\n  const canUnwrap1 = useCanUnwrapCurrency(currency1Amount?.currency);\n  const canUnwrap = positionInfo && chainId && positionInfo.version !== ProtocolVersion.V4 && (canUnwrap0 || canUnwrap1);\n  const nativeCurrencyInfo = useNativeCurrencyInfo(chainId ?? UniverseChainId.Mainnet);\n  if (!isLoading && !lpRedesignEnabled) {\n    return <Navigate to=\"/pools\" replace />;\n  }\n  if (positionLoading) {\n    return <BodyWrapper><LoadingRows><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /><LoadingRow /></LoadingRows></BodyWrapper>;\n  }\n  if (!position || !positionInfo || !currency0Amount || !currency1Amount) {\n    return <NotFound\n      title={<Text variant=\"heading2\">{t(\"position.notFound\")}</Text>}\n      subtitle={<Flex centered maxWidth=\"75%\" mt=\"$spacing20\"><Text color=\"$neutral2\" variant=\"heading3\" textAlign=\"center\">{t(\"position.notFound.description\")}</Text></Flex>}\n      actionButton={<Button onPress={() => navigate(\"/positions\")}>{t(\"common.backToPositions\")}</Button>}\n    />;\n  }\n  const hasFees = feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || false;\n  const isOwner = addressesAreEquivalent(owner, account?.address);\n  return <Trace\n    logImpression\n    page={InterfacePageNameLocal.PositionDetails}\n    properties={{\n      pool_address: positionInfo.poolId,\n      label: [currency0Amount.currency.symbol, currency1Amount.currency.symbol].join(\"/\"),\n      type: positionInfo.version,\n      fee_tier: typeof positionInfo.feeTier === \"string\" ? parseInt(positionInfo.feeTier) : positionInfo.feeTier,\n      baseCurrencyId: currencyIdToAddress(currencyId(currency0Amount.currency)),\n      quoteCurrencyId: currencyIdToAddress(currencyId(currency1Amount.currency))\n    }}\n  ><Helmet><title>{t(`liquidityPool.positions.page.title`, {\n    quoteSymbol: currency1Amount.currency.symbol,\n    baseSymbol: currency0Amount.currency.symbol\n  })}</title></Helmet><BodyWrapper><Flex gap=\"$gap20\"><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink style={{ gap: \"8px\" }} to=\"/positions\"><ArrowLeft size={14} /> <Trans i18nKey=\"pool.positions.title\" /></BreadcrumbNavLink></BreadcrumbNavContainer><Flex\n    row\n    $lg={{ row: false, alignItems: \"flex-start\", gap: \"$gap16\" }}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  ><LiquidityPositionInfo positionInfo={positionInfo} />{status !== PositionStatus.CLOSED && isOwner && <Flex row gap=\"$gap12\" alignItems=\"center\" flexWrap=\"wrap\">{positionInfo.version === ProtocolVersion.V3 && isV4DataEnabled && <HeaderButton\n    emphasis=\"secondary\"\n    onPress={() => {\n      navigate(`/migrate/v3/${chainInfo?.urlParam}/${tokenIdFromUrl}`);\n    }}\n  ><Text variant=\"buttonLabel2\" color=\"$neutral1\"><Trans i18nKey=\"pool.migrateToV4\" /></Text></HeaderButton>}<HeaderButton\n    emphasis=\"secondary\"\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.AddLiquidity,\n          initialState: { ...positionInfo, collectAsWeth }\n        })\n      );\n    }}\n  ><Text variant=\"buttonLabel2\" color=\"$neutral1\"><Trans i18nKey=\"common.addLiquidity\" /></Text></HeaderButton><HeaderButton\n    emphasis=\"primary\"\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.RemoveLiquidity,\n          initialState: { ...positionInfo, collectAsWeth }\n        })\n      );\n    }}\n  ><Text variant=\"buttonLabel2\" color=\"$surface1\"><Trans i18nKey=\"pool.removeLiquidity\" /></Text></HeaderButton></Flex>}</Flex></Flex><Flex row $lg={{ row: false }} width=\"100%\" gap=\"$gap16\"><Flex\n    grow\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded12\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    flexBasis=\"50%\"\n  >{\"result\" in metadata ? <PositionNFT image={metadata.result.image} height={400} /> : <LoadingFullscreen style={{ borderRadius: 12, backgroundColor: \"transparent\" }} />}</Flex><Flex grow gap=\"$gap12\" flexBasis=\"50%\"><Flex borderRadius=\"$rounded16\" backgroundColor=\"$surface2\" p=\"$padding12\" gap=\"$gap16\"><Flex gap=\"$gap8\"><Text variant=\"subheading1\"><Trans i18nKey=\"common.liquidity\" /></Text><Text variant=\"heading2\">{fiatValue0 && fiatValue1 ? formatCurrencyAmount({\n    amount: fiatValue0.add(fiatValue1),\n    type: NumberType.FiatTokenPrice\n  }) : \"-\"}</Text></Flex><LiquidityPositionAmountsTile\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    fiatValue0={fiatValue0}\n    fiatValue1={fiatValue1}\n  /></Flex><Flex p=\"$padding12\" backgroundColor=\"$surface2\" borderRadius=\"$rounded16\"><Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\"><Text variant=\"subheading1\"><Trans i18nKey=\"pool.uncollectedFees\" /></Text>{hasFees && isOwner && <HeaderButton\n    emphasis=\"primary\"\n    onPress={() => {\n      if (hasFees) {\n        dispatch(\n          setOpenModal({\n            name: ModalName.ClaimFee,\n            initialState: { ...positionInfo, collectAsWeth }\n          })\n        );\n      }\n    }}\n  ><Text variant=\"buttonLabel4\" color=\"$surface1\"><Trans i18nKey=\"pool.collectFees\" /></Text></HeaderButton>}</Flex><Text variant=\"heading2\" mt=\"$spacing8\" mb=\"$spacing16\">{fiatFeeValue0 && fiatFeeValue1 ? formatCurrencyAmount({\n    amount: fiatFeeValue0.add(fiatFeeValue1),\n    type: NumberType.FiatTokenPrice\n  }) : \"-\"}</Text>{feeValue0 && feeValue1 && <LiquidityPositionAmountsTile\n    currency0Amount={feeValue0}\n    currency1Amount={feeValue1}\n    fiatValue0={fiatFeeValue0}\n    fiatValue1={fiatFeeValue1}\n  />}{canUnwrap && <Flex row width=\"100%\" justifyContent=\"space-between\" mt=\"$spacing16\" alignItems=\"center\"><Text variant=\"body1\"><Trans\n    i18nKey=\"pool.collectAs\"\n    values={{ nativeWrappedSymbol: nativeCurrencyInfo?.currency.wrapped.symbol }}\n  /></Text><Switch\n    variant=\"default\"\n    checked={collectAsWeth}\n    onCheckedChange={() => {\n      setCollectAsWeth((prev) => !prev);\n    }}\n  /></Flex>}</Flex></Flex></Flex>{priceOrdering && token0CurrentPrice && token1CurrentPrice && <LiquidityPositionPriceRangeTile\n    token1={positionInfo.currency1Amount.currency}\n    priceOrdering={priceOrdering}\n    feeTier={positionInfo.feeTier?.toString()}\n    tickLower={positionInfo.tickLower}\n    tickUpper={positionInfo.tickUpper}\n    token0CurrentPrice={token0CurrentPrice}\n    token1CurrentPrice={token1CurrentPrice}\n  />}</BodyWrapper></Trace>;\n}\n"],"names":["input","useQuery","getPosition","transport","uniswapGetTransport","enabled","_connectQuery","require","_apiPoolsService_connectquery","_base","BreadcrumbNavContainer","styled","nav","theme","neutral2","BreadcrumbNavLink","Link","transition","duration","fast","neutral3","CurrentPageBreadcrumbContainer","Row","PageTitleText","h1","neutral1","TokenAddressHoverContainer","isDisabled","CopyIcon","Copy","ClickableStyle","CurrentPageBreadcrumb","address","currency","poolName","t","useTranslation","useTheme","screenSize","useScreenSize","hover","setHover","useState","isCopied","setCopied","useCopyClipboard","copy","useCallback","isNative","tokenSymbolName","symbol","shouldEnableCopy","shouldShowActions","aria-current","data-testid","onMouseEnter","onMouseLeave","onClick","Tooltip","placement","size","TooltipSize","Max","show","text","shortenAddress","width","height","color","getSnapshot","src","canvas","targetHeight","context","getContext","ratio","Math","round","devicePixelRatio","style","scale","clearRect","drawImage","NFTGrid","div","NFTCanvas","NFTImage","img","PositionNFT","image","animate","setAnimate","canvasRef","useRef","imageRef","current","ref","hidden","onLoad","usePositionOwner","tokenId","chainId","version","useSingleCallResult","contract","useNFTPositionManagerContract","ProtocolVersion","V3","BigNumber","toHexString","toString","result","usePositionOwnerV2","account","useTokenContract","resultBalance","JSBI","STARTS_WITH","v3Contract","useV3NFTPositionManagerContract","v4Contract","useV4NFTPositionManagerContract","usePositionTokenURI","data","isLoading","error","queryKey","queryFn","tokenURI","useMemo","valid","loading","startsWith","JSON","parse","atob","slice","length","error2","Image","Container","Header","PageWrapper","breakpoint","md","NotFound","title","subtitle","actionButton","isDarkMode","useIsDarkMode","isMobile","useIsMobile","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","logImpression","page","InterfacePageName","NOT_FOUND","Trans","i18nKey","darkImage","lightImage","alt","SmallButtonPrimary","as","to","LiquidityPositionAmountsTile","currency0Amount","currency1Amount","fiatValue0","fiatValue1","currencyInfo0","currencyInfo1","totalFiatValue","navigate","useNavigate","useCurrencyInfo","formatCurrencyAmount","formatPercent","useLocalizationContext","add","CurrencyAmount","fromRawAmount","chainUrlParam","getChainInfo","UniverseChainId","Mainnet","urlParam","currency0Link","getTokenDetailsURL","isToken","currency1Link","Flex","borderRadius","gap","backgroundColor","p","row","alignItems","justifyContent","TouchableArea","onPress","ClickableTamaguiStyle","CurrencyLogo","currencyInfo","Text","variant","value","greaterThan","type","NumberType","FiatTokenPrice","toExact","Percent","quotient","toFixed","InnerTile","grow","LiquidityPositionPriceRangeTile","token1","priceOrdering","token0CurrentPrice","token1CurrentPrice","feeTier","tickLower","tickUpper","formatPrice","useFormatter","pricesInverted","setPricesInverted","currencyASymbol","baseCurrency","currencyBSymbol","quoteCurrency","controlOptions","display","Error","minPrice","maxPrice","tokenASymbol","tokenBSymbol","useGetRangeDisplay","currentPrice","base","equals","SegmentedControl","options","selectedOption","onSelectOption","selected","$lg","values","symbolA","symbolB","price","TokenTx","BodyWrapper","Main","flexDirection","maxWidth","zIndex","py","px","HeaderButton","variants","emphasis","primary","secondary","disabled","true","cursor","hoverStyle","opacity","pressStyle","PositionPageWrapper","useChainIdFromUrlParam","MultichainContextProvider","initialChainId","PositionPage","chainInfo","positionInfo","feeValue0","feeValue1","nativeCurrencyInfo","tokenIdFromUrl","useParams","from","parseTokenId","useAccount","pathname","useLocation","positionLoading","refetch","useGetPositionQuery","owner","ZERO_ADDRESS","protocolVersion","includes","V4","UNSPECIFIED","position","parseRestPosition","metadata","id","usePendingLPTransactionsChangeListener","dispatch","useAppDispatch","collectAsWeth","setCollectAsWeth","lpRedesignEnabled","useFeatureFlagWithLoading","FeatureFlags","LPRedesign","isV4DataEnabled","useFeatureFlag","V4Data","status","fiatFeeValue0","fiatFeeValue1","useV3OrV4PositionDerivedInfo","canUnwrap0","useCanUnwrapCurrency","canUnwrap1","canUnwrap","useNativeCurrencyInfo","Navigate","replace","LoadingRows","LoadingRow","centered","mt","textAlign","Button","hasFees","isOwner","addressesAreEquivalent","InterfacePageNameLocal","PositionDetails","properties","pool_address","poolId","label","join","fee_tier","parseInt","baseCurrencyId","currencyIdToAddress","currencyId","quoteCurrencyId","Helmet","quoteSymbol","baseSymbol","aria-label","ArrowLeft","LiquidityPositionInfo","PositionStatus","CLOSED","flexWrap","setOpenModal","name","ModalName","AddLiquidity","initialState","RemoveLiquidity","flexBasis","LoadingFullscreen","amount","ClaimFee","mb","nativeWrappedSymbol","wrapped","Switch","checked","onCheckedChange","prev"],"sourceRoot":""}