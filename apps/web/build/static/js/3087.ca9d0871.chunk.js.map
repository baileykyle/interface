{"version":3,"file":"static/js/3087.ca9d0871.chunk.js","mappings":"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","sources":["components/PositionList.tsx","hooks/useTokenContractsConstant.ts","utils/urlChecks.ts","hooks/useFilterPossiblyMaliciousPositions.ts","pages/LegacyPool/CTACards.tsx","pages/LegacyPool/shared.tsx","pages/LegacyPool/index.tsx","state/stake/hooks.tsx","pages/LegacyPool/v2.tsx","pages/PoolFinder/index.tsx","pages/LegacyPool/redirects.tsx"],"sourcesContent":["\"use strict\";\nimport PositionListItem from \"components/PositionListItem\";\nimport styled from \"lib/styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { MEDIA_WIDTHS } from \"theme\";\nconst DesktopHeader = styled.div`\n  display: none;\n  font-size: 14px;\n  padding: 16px;\n  border-bottom: 1px solid ${({ theme }) => theme.surface3};\n\n  @media screen and (min-width: ${MEDIA_WIDTHS.deprecated_upToSmall}px) {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    & > div:last-child {\n      text-align: right;\n      margin-right: 12px;\n    }\n  }\n`;\nconst MobileHeader = styled.div`\n  font-weight: medium;\n  padding: 8px;\n  font-weight: 535;\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  border-bottom: 1px solid ${({ theme }) => theme.surface3};\n\n  @media screen and (min-width: ${MEDIA_WIDTHS.deprecated_upToSmall}px) {\n    display: none;\n  }\n\n  @media screen and (max-width: ${MEDIA_WIDTHS.deprecated_upToExtraSmall}px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\nconst ToggleWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst ToggleLabel = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  color: ${({ theme }) => theme.accent1};\n  font-size: 14px;\n  font-weight: 485;\n`;\nexport default function PositionList({\n  positions,\n  setUserHideClosedPositions,\n  userHideClosedPositions\n}) {\n  const { t } = useTranslation();\n  return <><DesktopHeader><div>{t(\"pool.positions.title\")}{positions && \" (\" + positions.length + \")\"}</div><ToggleLabel\n    id=\"desktop-hide-closed-positions\"\n    onClick={() => {\n      setUserHideClosedPositions(!userHideClosedPositions);\n    }}\n  >{userHideClosedPositions ? t(\"pool.showClosed\") : t(\"pool.hideClosed\")}</ToggleLabel></DesktopHeader><MobileHeader>{t(\"pool.positions.title\")}<ToggleWrap><ToggleLabel\n    onClick={() => {\n      setUserHideClosedPositions(!userHideClosedPositions);\n    }}\n  >{userHideClosedPositions ? t(\"pool.showClosed\") : t(\"pool.hideClosed\")}</ToggleLabel></ToggleWrap></MobileHeader>{positions.map((p) => <PositionListItem key={p.tokenId.toString()} {...p} />)}</>;\n}\n","\"use strict\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { NEVER_RELOAD, useMultipleContractSingleData } from \"lib/hooks/multicall\";\nimport ERC20ABI from \"uniswap/src/abis/erc20.json\";\nconst ERC20Interface = new Interface(ERC20ABI);\nexport function useTokenContractsConstant(tokens, field) {\n  return useMultipleContractSingleData(tokens, ERC20Interface, field, void 0, NEVER_RELOAD);\n}\n","\"use strict\";\nexport function hasURL(str) {\n  if (!str) {\n    return false;\n  }\n  const pattern = new RegExp(\n    \"([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?\"\n    // optional port and path\n  );\n  return pattern.test(str);\n}\n","\"use strict\";\nimport { useQueries } from \"@tanstack/react-query\";\nimport { apolloClient } from \"graphql/data/apollo/client\";\nimport { gqlTokenToCurrencyInfo } from \"graphql/data/types\";\nimport { apolloQueryOptions } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useTokenContractsConstant } from \"hooks/useTokenContractsConstant\";\nimport { useMemo } from \"react\";\nimport {\n  SafetyLevel,\n  TokenDocument\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { hasURL } from \"utils/urlChecks\";\nfunction getUniqueAddressesFromPositions(positions) {\n  return Array.from(\n    new Set(positions.reduce((acc, position) => acc.concat(position.token0, position.token1), []))\n  );\n}\nfunction getPositionCurrencyInfosQueryOptions(position, chainId) {\n  return apolloQueryOptions({\n    queryKey: [\"positionCurrencyInfo\", position],\n    queryFn: async () => {\n      const queries = [\n        apolloClient.query({\n          query: TokenDocument,\n          variables: {\n            address: position.token0,\n            chain: toGraphQLChain(chainId)\n          },\n          fetchPolicy: \"cache-first\"\n        }),\n        apolloClient.query({\n          query: TokenDocument,\n          variables: {\n            address: position.token1,\n            chain: toGraphQLChain(chainId)\n          },\n          fetchPolicy: \"cache-first\"\n        })\n      ];\n      const [currency0, currency1] = await Promise.all(queries);\n      return {\n        position,\n        currency0Info: gqlTokenToCurrencyInfo(currency0.data.token),\n        currency1Info: gqlTokenToCurrencyInfo(currency1.data.token)\n      };\n    }\n  });\n}\nexport function useFilterPossiblyMaliciousPositions(positions) {\n  const { chainId } = useAccount();\n  const { defaultChainId } = useEnabledChains();\n  const nonListPositionTokenAddresses = useMemo(() => getUniqueAddressesFromPositions(positions), [positions]);\n  const positionCurrencyInfos = useQueries({\n    queries: positions.map((position) => getPositionCurrencyInfosQueryOptions(position, chainId ?? defaultChainId))\n  });\n  const symbolCallStates = useTokenContractsConstant(nonListPositionTokenAddresses, \"symbol\");\n  const addressesToSymbol = useMemo(() => {\n    const result = {};\n    for (let i = 0; i < nonListPositionTokenAddresses.length; i++) {\n      const callResult = symbolCallStates[i]?.result;\n      if (!callResult) {\n        continue;\n      }\n      const address = nonListPositionTokenAddresses[i];\n      result[address] = callResult;\n    }\n    return result;\n  }, [nonListPositionTokenAddresses, symbolCallStates]);\n  return useMemo(() => {\n    return positionCurrencyInfos.map((result) => {\n      if (!result.data) {\n        return void 0;\n      }\n      const { currency0Info, currency1Info, position } = result.data;\n      let tokensInListCount = 0;\n      if (!currency0Info?.isSpam && currency0Info?.safetyLevel === SafetyLevel.Verified) {\n        tokensInListCount++;\n      }\n      if (!currency1Info?.isSpam && currency1Info?.safetyLevel === SafetyLevel.Verified) {\n        tokensInListCount++;\n      }\n      if (tokensInListCount === 2) {\n        return position;\n      }\n      let urlSymbolCount = 0;\n      if (hasURL(currency0Info?.currency?.symbol ?? addressesToSymbol[position.token0])) {\n        urlSymbolCount++;\n      }\n      if (hasURL(currency1Info?.currency?.symbol ?? addressesToSymbol[position.token1])) {\n        urlSymbolCount++;\n      }\n      if (tokensInListCount === 1 && urlSymbolCount < 2) {\n        return position;\n      }\n      return urlSymbolCount === 0 ? position : void 0;\n    }).filter((position) => !!position);\n  }, [addressesToSymbol, positionCurrencyInfos]);\n}\n","\"use strict\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled, { css } from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { ExternalLink, StyledInternalLink, ThemedText } from \"theme/components\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nconst CTASection = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 8px;\n  opacity: 0.8;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n  `};\n`;\nconst CTAStyle = css`\n  padding: 16px;\n  border-radius: 20px;\n  position: relative;\n  overflow: hidden;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  text-decoration: none;\n\n  * {\n    color: ${({ theme }) => theme.neutral1};\n    text-decoration: none !important;\n  }\n\n  :hover {\n    border: 1px solid ${({ theme }) => theme.surface3};\n\n    * {\n      text-decoration: none !important;\n    }\n  }\n`;\nconst CTAExternalLink = styled(ExternalLink)`\n  ${CTAStyle}\n`;\nconst CTALink = styled(StyledInternalLink)`\n  ${CTAStyle}\n`;\nconst HeaderText = styled(ThemedText.DeprecatedLabel)`\n  align-items: center;\n  display: flex;\n  font-size: 16px;\n  font-weight: 535 !important;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    font-size: 16px;\n  `};\n`;\nconst ResponsiveColumn = styled(AutoColumn)`\n  grid-template-columns: 1fr;\n  width: 100%;\n  gap: 8px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    gap: 8px;\n  `};\n  justify-content: space-between;\n`;\nexport default function CTACards() {\n  const { chainId } = useAccount();\n  const chain = getChainInfo(useSupportedChainId(chainId) ?? UniverseChainId.Mainnet);\n  return <CTASection><CTAExternalLink href=\"https://support.uniswap.org/hc/en-us/categories/8122334631437-Providing-Liquidity-\"><ResponsiveColumn><HeaderText><Trans i18nKey=\"pool.learnLiquidity\" /> ↗\n          </HeaderText><ThemedText.DeprecatedBody style={{ alignItems: \"center\", display: \"flex\", fontWeight: 485 }}><Trans i18nKey=\"pool.learnv3LP\" /></ThemedText.DeprecatedBody></ResponsiveColumn></CTAExternalLink><CTALink data-testid=\"cta-poolslink\" to={`/explore/pools/${chain.urlParam}`}><ResponsiveColumn><HeaderText style={{ alignSelf: \"flex-start\" }}><Trans i18nKey=\"pool.top\" /> ↗\n          </HeaderText><ThemedText.DeprecatedBody style={{ alignSelf: \"flex-start\", fontWeight: 485 }}><Trans i18nKey=\"pool.exporeAnalytics\" /></ThemedText.DeprecatedBody></ResponsiveColumn></CTALink></CTASection>;\n}\n","\"use strict\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { Pool } from \"components/Icons/Pool\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Anchor, styled, Text } from \"ui/src\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nconst PoolVersionItem = styled(Anchor, {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  width: \"100%\",\n  gap: \"$gap12\",\n  textDecorationLine: \"none\",\n  color: \"$neutral2\",\n  hoverStyle: {\n    color: \"$neutral1\"\n  }\n});\nconst titles = {\n  [ProtocolVersion.V4]: \"v4\",\n  [ProtocolVersion.V3]: \"v3\",\n  [ProtocolVersion.V2]: \"v2\"\n};\nexport function PoolVersionMenu({ protocolVersion }) {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const isLPRedesignEnabled = useFeatureFlag(FeatureFlags.LPRedesign);\n  const menuItems = {\n    [ProtocolVersion.V4]: {\n      title: t(\"pool.v4\"),\n      link: \"/pool\"\n    },\n    [ProtocolVersion.V3]: {\n      title: t(\"pool.v3\"),\n      link: \"/pool\"\n    },\n    [ProtocolVersion.V2]: {\n      title: t(\"pool.v2\"),\n      link: \"/pools/v2\"\n    }\n  };\n  return <DropdownSelector\n    isOpen={isOpen}\n    menuLabel={<Text variant=\"body1\">{titles[protocolVersion]}</Text>}\n    internalMenuItems={<>{Object.entries(menuItems).filter(([protocol, info]) => {\n      if (!isLPRedesignEnabled && protocol === ProtocolVersion.V4) {\n        return false;\n      }\n      return info.title !== menuItems[protocolVersion].title;\n    }).map(([, info]) => <PoolVersionItem href={info.link} key={info.title}><Pool width=\"20px\" height=\"20px\" /><Text variant=\"body1\" style={{ color: \"inherit\" }}>{info.title}</Text></PoolVersionItem>)}</>}\n    toggleOpen={setIsOpen}\n    buttonStyle={{ height: 36 }}\n    adaptToSheet={false}\n  />;\n}\n","\"use strict\";\nimport { InterfaceElementName, InterfaceEventName, InterfacePageName } from \"@uniswap/analytics-events\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { ButtonPrimary, ButtonText } from \"components/Button/buttons\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport PositionList from \"components/PositionList\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useFilterPossiblyMaliciousPositions } from \"hooks/useFilterPossiblyMaliciousPositions\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useV3Positions } from \"hooks/useV3Positions\";\nimport deprecatedStyled, { css, useTheme } from \"lib/styled-components\";\nimport CTACards from \"pages/LegacyPool/CTACards\";\nimport { PoolVersionMenu } from \"pages/LegacyPool/shared\";\nimport { LoadingRows } from \"pages/LegacyPool/styled\";\nimport { useMemo, useState } from \"react\";\nimport { AlertTriangle, BookOpen, ChevronsRight, Inbox, Layers } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useUserHideClosedPositions } from \"state/user/hooks\";\nimport { HideSmall, ThemedText } from \"theme/components\";\nimport { Anchor, Flex, Text, styled } from \"ui/src\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useIsSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst PageWrapper = deprecatedStyled(AutoColumn)`\n  padding: 68px 8px 0px;\n  max-width: 870px;\n  width: 100%;\n\n  @media (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    max-width: 800px;\n    padding-top: 48px;\n  }\n\n  @media (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    max-width: 500px;\n    padding-top: 20px;\n  }\n`;\nconst PoolMenuItem = styled(Anchor, {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\n  fontWeight: \"$book\",\n  p: \"$spacing8\",\n  textDecorationLine: \"none\",\n  color: \"$neutral2\",\n  hoverStyle: {\n    color: \"$neutral1\"\n  }\n});\nconst ErrorContainer = deprecatedStyled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: auto;\n  max-width: 300px;\n  min-height: 25vh;\n`;\nconst IconStyle = css`\n  width: 48px;\n  height: 48px;\n  margin-bottom: 0.5rem;\n`;\nconst NetworkIcon = deprecatedStyled(AlertTriangle)`\n  ${IconStyle}\n`;\nconst InboxIcon = deprecatedStyled(Inbox)`\n  ${IconStyle}\n`;\nconst ResponsiveButtonPrimary = deprecatedStyled(ButtonPrimary)`\n  border-radius: 12px;\n  font-size: 16px;\n  padding: 6px 8px;\n  white-space: nowrap;\n  @media (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    flex: 1 1 auto;\n    width: 50%;\n  }\n`;\nconst MainContentWrapper = deprecatedStyled.main`\n  background-color: ${({ theme }) => theme.surface1};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  padding: 0;\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\nfunction PositionsLoadingPlaceholder() {\n  return <LoadingRows><div /><div /><div /><div /><div /><div /><div /><div /><div /><div /><div /><div /></LoadingRows>;\n}\nfunction WrongNetworkCard() {\n  const { t } = useTranslation();\n  return <><PageWrapper><AutoColumn gap=\"lg\" justify=\"center\"><AutoColumn gap=\"lg\" style={{ width: \"100%\" }}><Flex row p=\"$none\" gap=\"$gap12\"><Text variant=\"heading2\">{t(\"pool.positions\")}</Text></Flex><MainContentWrapper><ErrorContainer><Text variant=\"body1\" color=\"$neutral3\" textAlign=\"center\"><NetworkIcon strokeWidth={1.2} /><div data-testid=\"pools-unsupported-err\">{t(\"pool.connection.networkUnsupported\")}</div></Text></ErrorContainer></MainContentWrapper></AutoColumn></AutoColumn></PageWrapper><SwitchLocaleLink /></>;\n}\nexport default function Pool() {\n  const { t } = useTranslation();\n  const account = useAccount();\n  const isSupportedChain = useIsSupportedChainId(account.chainId);\n  const networkSupportsV2 = useNetworkSupportsV2();\n  const accountDrawer = useAccountDrawer();\n  const [isMenuOpen, toggleMenu] = useState(false);\n  const theme = useTheme();\n  const [userHideClosedPositions, setUserHideClosedPositions] = useUserHideClosedPositions();\n  const { positions, loading: positionsLoading } = useV3Positions(account.address);\n  const [openPositions, closedPositions] = positions?.reduce(\n    (acc, p) => {\n      acc[p.liquidity?.isZero() ? 1 : 0].push(p);\n      return acc;\n    },\n    [[], []]\n  ) ?? [[], []];\n  const userSelectedPositionSet = useMemo(\n    () => [...openPositions, ...userHideClosedPositions ? [] : closedPositions],\n    [closedPositions, openPositions, userHideClosedPositions]\n  );\n  const filteredPositions = useFilterPossiblyMaliciousPositions(userSelectedPositionSet);\n  if (!isSupportedChain) {\n    return <WrongNetworkCard />;\n  }\n  const showConnectAWallet = Boolean(!account);\n  const menuItems = [\n    <PoolMenuItem href=\"/migrate/v2\" key=\"migrate\">{t(\"common.migrate\")}<ChevronsRight size={16} /></PoolMenuItem>,\n    <PoolMenuItem href=\"/pools/v2\" key=\"v2-liquidity\">{t(\"pool.v2liquidity\")}<Layers size={16} /></PoolMenuItem>,\n    <PoolMenuItem href=\"https://support.uniswap.org/hc/en-us/categories/8122334631437-Providing-Liquidity-\" key=\"learn\">{t(\"pool.learn\")}<BookOpen size={16} /></PoolMenuItem>\n  ];\n  return <Trace logImpression page={InterfacePageName.POOL_PAGE}><PageWrapper><AutoColumn gap=\"lg\" justify=\"center\"><AutoColumn gap=\"lg\" style={{ width: \"100%\" }}><Flex\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    p=\"$none\"\n    gap=\"$gap12\"\n    $md={{ flexWrap: \"wrap\", width: \"100%\" }}\n  ><Flex row alignItems=\"center\" gap=\"$spacing8\" width=\"min-content\"><Text variant=\"heading2\">{t(\"pool.positions\")}</Text><div><PoolVersionMenu protocolVersion={ProtocolVersion.V3} /></div></Flex><Flex row gap=\"8px\" $md={{ width: \"100%\" }}>{networkSupportsV2 && <Flex grow $md={{ width: \"calc(50% - 4px)\" }}><DropdownSelector\n    isOpen={isMenuOpen}\n    toggleOpen={toggleMenu}\n    menuLabel={<>{t(\"common.more\")}</>}\n    internalMenuItems={<>{...menuItems}</>}\n    buttonStyle={{ height: 40, justifyContent: \"center\" }}\n    dropdownStyle={{ width: 200, top: \"calc(100% + 20px)\" }}\n    adaptToSheet={false}\n  /></Flex>}<ResponsiveButtonPrimary data-cy=\"join-pool-button\" id=\"join-pool-button\" as={Link} to=\"/add/ETH\">{t(\"pool.newPosition.plus\")}</ResponsiveButtonPrimary></Flex></Flex><MainContentWrapper>{positionsLoading ? <PositionsLoadingPlaceholder /> : filteredPositions && closedPositions && filteredPositions.length > 0 ? <PositionList\n    positions={filteredPositions}\n    setUserHideClosedPositions={setUserHideClosedPositions}\n    userHideClosedPositions={userHideClosedPositions}\n  /> : <ErrorContainer><ThemedText.BodyPrimary color={theme.neutral3} textAlign=\"center\"><InboxIcon strokeWidth={1} style={{ marginTop: \"2em\" }} /><div>{t(\"pool.activePositions.appear\")}</div></ThemedText.BodyPrimary>{!showConnectAWallet && closedPositions.length > 0 && <ButtonText\n    style={{ marginTop: \".5rem\" }}\n    onClick={() => setUserHideClosedPositions(!userHideClosedPositions)}\n  >{t(\"pool.showClosed\")}</ButtonText>}{showConnectAWallet && <Trace\n    logPress\n    eventOnTrigger={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n    properties={{ received_swap_quote: false }}\n    element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n  ><ButtonPrimary\n    style={{ marginTop: \"2em\", marginBottom: \"2em\", padding: \"8px 16px\" }}\n    onClick={accountDrawer.open}\n  >{t(\"common.connectAWallet.button\")}</ButtonPrimary></Trace>}</ErrorContainer>}</MainContentWrapper><HideSmall><CTACards /></HideSmall></AutoColumn></AutoColumn></PageWrapper><SwitchLocaleLink /></Trace>;\n}\n","\"use strict\";\nimport { Interface } from \"@ethersproject/abi\";\nimport StakingRewardsJSON from \"@uniswap/liquidity-staker/build/StakingRewards.json\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { Pair } from \"@uniswap/v2-sdk\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useCurrentBlockTimestamp from \"hooks/useCurrentBlockTimestamp\";\nimport JSBI from \"jsbi\";\nimport { NEVER_RELOAD, useMultipleContractSingleData } from \"lib/hooks/multicall\";\nimport { useMemo } from \"react\";\nimport { DAI, UNI, USDC_MAINNET, USDT, WBTC, WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { logger } from \"utilities/src/logger/logger\";\nconst STAKING_REWARDS_INTERFACE = new Interface(StakingRewardsJSON.abi);\nexport const STAKING_GENESIS = 1600387200;\nconst STAKING_REWARDS_INFO = {\n  1: [\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], DAI],\n      stakingRewardAddress: \"0xa1484C3aa22a66C62b77E0AE78E15258bd0cB711\"\n    },\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], USDC_MAINNET],\n      stakingRewardAddress: \"0x7FBa4B8Dc5E7616e59622806932DBea72537A56b\"\n    },\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], USDT],\n      stakingRewardAddress: \"0x6C3e4cb2E96B01F4b866965A91ed4437839A121a\"\n    },\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], WBTC],\n      stakingRewardAddress: \"0xCA35e32e7926b96A9988f61d510E038108d8068e\"\n    }\n  ]\n};\nexport function useStakingInfo(pairToFilterBy) {\n  const account = useAccount();\n  const currentBlockTimestamp = useCurrentBlockTimestamp(NEVER_RELOAD);\n  const info = useMemo(\n    () => account.chainId ? STAKING_REWARDS_INFO[account.chainId]?.filter(\n      (stakingRewardInfo) => pairToFilterBy === void 0 ? true : pairToFilterBy === null ? false : pairToFilterBy.involvesToken(stakingRewardInfo.tokens[0]) && pairToFilterBy.involvesToken(stakingRewardInfo.tokens[1])\n    ) ?? [] : [],\n    [account.chainId, pairToFilterBy]\n  );\n  const uni = account.chainId ? UNI[account.chainId] : void 0;\n  const rewardsAddresses = useMemo(() => info.map(({ stakingRewardAddress }) => stakingRewardAddress), [info]);\n  const accountArg = useMemo(() => [account.address], [account.address]);\n  const balances = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, \"balanceOf\", accountArg);\n  const earnedAmounts = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, \"earned\", accountArg);\n  const totalSupplies = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, \"totalSupply\");\n  const rewardRates = useMultipleContractSingleData(\n    rewardsAddresses,\n    STAKING_REWARDS_INTERFACE,\n    \"rewardRate\",\n    void 0,\n    NEVER_RELOAD\n  );\n  const periodFinishes = useMultipleContractSingleData(\n    rewardsAddresses,\n    STAKING_REWARDS_INTERFACE,\n    \"periodFinish\",\n    void 0,\n    NEVER_RELOAD\n  );\n  return useMemo(() => {\n    if (!account.chainId || !uni) {\n      return [];\n    }\n    return rewardsAddresses.reduce((memo, rewardsAddress, index) => {\n      const balanceState = balances[index];\n      const earnedAmountState = earnedAmounts[index];\n      const totalSupplyState = totalSupplies[index];\n      const rewardRateState = rewardRates[index];\n      const periodFinishState = periodFinishes[index];\n      if (\n        // these may be undefined if not logged in\n        !balanceState?.loading && !earnedAmountState?.loading && // always need these\n        totalSupplyState && !totalSupplyState.loading && rewardRateState && !rewardRateState.loading && periodFinishState && !periodFinishState.loading\n      ) {\n        if (balanceState?.error || earnedAmountState?.error || totalSupplyState.error || rewardRateState.error || periodFinishState.error) {\n          logger.warn(\"stake/hooks\", \"useStakingInfo\", \"Failed to load staking rewards info\");\n          return memo;\n        }\n        const tokens = info[index].tokens;\n        const dummyPair = new Pair(\n          CurrencyAmount.fromRawAmount(tokens[0], \"0\"),\n          CurrencyAmount.fromRawAmount(tokens[1], \"0\")\n        );\n        const stakedAmount = CurrencyAmount.fromRawAmount(\n          dummyPair.liquidityToken,\n          JSBI.BigInt(balanceState?.result?.[0] ?? 0)\n        );\n        const totalStakedAmount = CurrencyAmount.fromRawAmount(\n          dummyPair.liquidityToken,\n          JSBI.BigInt(totalSupplyState.result?.[0])\n        );\n        const totalRewardRate = CurrencyAmount.fromRawAmount(uni, JSBI.BigInt(rewardRateState.result?.[0]));\n        const getHypotheticalRewardRate = (stakedAmount2, totalStakedAmount2, totalRewardRate2) => {\n          return CurrencyAmount.fromRawAmount(\n            uni,\n            JSBI.greaterThan(totalStakedAmount2.quotient, JSBI.BigInt(0)) ? JSBI.divide(JSBI.multiply(totalRewardRate2.quotient, stakedAmount2.quotient), totalStakedAmount2.quotient) : JSBI.BigInt(0)\n          );\n        };\n        const individualRewardRate = getHypotheticalRewardRate(stakedAmount, totalStakedAmount, totalRewardRate);\n        const periodFinishSeconds = periodFinishState.result?.[0]?.toNumber();\n        const periodFinishMs = periodFinishSeconds * 1e3;\n        const active = periodFinishSeconds && currentBlockTimestamp ? periodFinishSeconds > currentBlockTimestamp.toNumber() : true;\n        memo.push({\n          stakingRewardAddress: rewardsAddress,\n          tokens: info[index].tokens,\n          periodFinish: periodFinishMs > 0 ? new Date(periodFinishMs) : void 0,\n          earnedAmount: CurrencyAmount.fromRawAmount(uni, JSBI.BigInt(earnedAmountState?.result?.[0] ?? 0)),\n          rewardRate: individualRewardRate,\n          totalRewardRate,\n          stakedAmount,\n          totalStakedAmount,\n          getHypotheticalRewardRate,\n          active\n        });\n      }\n      return memo;\n    }, []);\n  }, [\n    balances,\n    account.chainId,\n    currentBlockTimestamp,\n    earnedAmounts,\n    info,\n    periodFinishes,\n    rewardRates,\n    rewardsAddresses,\n    totalSupplies,\n    uni\n  ]);\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { ButtonOutlined, ButtonPrimary, ButtonSecondary } from \"components/Button/buttons\";\nimport Card from \"components/Card/cards\";\nimport FullPositionCard from \"components/PositionCard\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport Row, { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { CardBGImage, CardNoise, CardSection, DataCard } from \"components/earn/styled\";\nimport { Dots } from \"components/swap/styled\";\nimport { BIG_INT_ZERO } from \"constants/misc\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useV2Pairs } from \"hooks/useV2Pairs\";\nimport JSBI from \"jsbi\";\nimport { useRpcTokenBalancesWithLoadingIndicator } from \"lib/hooks/useCurrencyBalance\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { PoolVersionMenu } from \"pages/LegacyPool/shared\";\nimport { useMemo } from \"react\";\nimport { ChevronsRight } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { useStakingInfo } from \"state/stake/hooks\";\nimport { toV2LiquidityToken, useTrackedTokenPairs } from \"state/user/hooks\";\nimport { ExternalLink, HideSmall, ThemedText } from \"theme/components\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    padding: 0px 8px;\n  `};\n`;\nconst LPFeeExplainer = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  margin: 0 0 16px 0;\n  overflow: hidden;\n`;\nconst ButtonRow = styled(RowFixed)`\n  gap: 8px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  `};\n`;\nconst ResponsiveButtonPrimary = styled(ButtonPrimary)`\n  height: 40px;\n  width: fit-content;\n  border-radius: 12px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    width: 48%;\n  `};\n`;\nconst ResponsiveButtonSecondary = styled(ButtonSecondary)`\n  height: 40px;\n  width: fit-content;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    width: 48%;\n  `};\n`;\nconst EmptyProposals = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral2};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst Header = styled(ThemedText.H1Small)`\n  margin-top: 8px;\n  justify-self: flex-start;\n  font-weight: 535;\n  text-wrap: nowrap;\n`;\nexport default function Pool() {\n  const theme = useTheme();\n  const account = useAccount();\n  const networkSupportsV2 = useNetworkSupportsV2();\n  let trackedTokenPairs = useTrackedTokenPairs();\n  if (!networkSupportsV2) {\n    trackedTokenPairs = [];\n  }\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  );\n  const [balanceMap, fetchingV2PairBalances] = useRpcTokenBalancesWithLoadingIndicator(\n    account.address,\n    tokenPairsWithLiquidityTokens.map(({ liquidityToken }) => liquidityToken),\n    !account?.address\n  );\n  const liquidityTokensWithBalances = useMemo(\n    () => tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) => {\n      return balanceMap[liquidityToken.address]?.greaterThan(0);\n    }),\n    [tokenPairsWithLiquidityTokens, balanceMap]\n  );\n  const v2Pairs = useV2Pairs(liquidityTokensWithBalances.map(({ tokens }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair);\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair) => Boolean(v2Pair));\n  const stakingInfo = useStakingInfo();\n  const stakingInfosWithBalance = stakingInfo?.filter(\n    (pool) => JSBI.greaterThan(pool.stakedAmount.quotient, BIG_INT_ZERO)\n  );\n  const stakingPairs = useV2Pairs(stakingInfosWithBalance?.map((stakingInfo2) => stakingInfo2.tokens));\n  const v2PairsWithoutStakedAmount = allV2PairsWithLiquidity.filter((v2Pair) => {\n    return stakingPairs?.map((stakingPair) => stakingPair[1]).filter((stakingPair) => stakingPair?.liquidityToken.address === v2Pair.liquidityToken.address).length === 0;\n  });\n  return <Trace logImpression page={InterfacePageName.POOL_PAGE}><><PageWrapper><LPFeeExplainer><CardBGImage /><CardNoise /><CardSection><AutoColumn gap=\"md\"><RowBetween><ThemedText.DeprecatedWhite fontWeight={535}><Trans i18nKey=\"pool.liquidity.rewards\" /></ThemedText.DeprecatedWhite></RowBetween><RowBetween><ThemedText.DeprecatedWhite fontSize={14}><Trans i18nKey=\"pool.liquidity.earn.fee\" /></ThemedText.DeprecatedWhite></RowBetween><ExternalLink\n    style={{ color: theme.white, textDecoration: \"underline\" }}\n    target=\"_blank\"\n    href=\"https://docs.uniswap.org/contracts/v2/concepts/core-concepts/pools\"\n  ><ThemedText.DeprecatedWhite fontSize={14}><Trans i18nKey=\"pool.learnAbout\" /></ThemedText.DeprecatedWhite></ExternalLink></AutoColumn></CardSection><CardBGImage /><CardNoise /></LPFeeExplainer>{!networkSupportsV2 ? <V2Unsupported /> : <AutoColumn gap=\"lg\" justify=\"center\"><AutoColumn gap=\"md\" style={{ width: \"100%\" }}><Row gap=\"md\" justify=\"space-between\" style={{ marginTop: \"1rem\" }} padding=\"0\"><Row gap=\"md\" width=\"content\"><HideSmall><Header><Trans i18nKey=\"pool.yourv2\" /></Header></HideSmall><PoolVersionMenu protocolVersion={ProtocolVersion.V2} /></Row><ButtonRow><ResponsiveButtonSecondary as={Link} padding=\"6px 8px\" to=\"/add/v2/ETH\"><Trans i18nKey=\"pool.create.pair\" /></ResponsiveButtonSecondary><ResponsiveButtonPrimary id=\"find-pool-button\" as={Link} to=\"/pools/v2/find\" padding=\"6px 8px\"><Text fontWeight={535} fontSize={16}><Trans i18nKey=\"pool.import\" /></Text></ResponsiveButtonPrimary><ResponsiveButtonPrimary id=\"join-pool-button\" as={Link} to=\"/add/v2/ETH\" padding=\"6px 8px\"><Text fontWeight={535} fontSize={16}><Trans i18nKey=\"pool.v2.add\" /></Text></ResponsiveButtonPrimary></ButtonRow></Row>{!account ? <Card padding=\"40px\"><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Trans i18nKey=\"pool.liquidity.connectToAdd\" /></ThemedText.DeprecatedBody></Card> : v2IsLoading ? <EmptyProposals><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Dots><Trans i18nKey=\"common.loading\" /></Dots></ThemedText.DeprecatedBody></EmptyProposals> : allV2PairsWithLiquidity?.length > 0 || stakingPairs?.length > 0 ? <>{v2PairsWithoutStakedAmount.map((v2Pair) => <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />)}{stakingPairs.map(\n    (stakingPair, i) => stakingPair[1] && // skip pairs that arent loaded\n    <FullPositionCard\n      key={stakingInfosWithBalance[i].stakingRewardAddress}\n      pair={stakingPair[1]}\n      stakedBalance={stakingInfosWithBalance[i].stakedAmount}\n    />\n  )}<RowFixed justify=\"center\" style={{ width: \"100%\" }}><ButtonOutlined\n    as={Link}\n    to=\"/migrate/v2\"\n    id=\"import-pool-link\"\n    style={{\n      padding: \"8px 16px\",\n      margin: \"0 4px\",\n      borderRadius: \"12px\",\n      width: \"fit-content\",\n      fontSize: \"14px\"\n    }}\n  ><ChevronsRight size={16} style={{ marginRight: \"8px\" }} /><Trans i18nKey=\"pool.v2.migratev3\" /></ButtonOutlined></RowFixed></> : <EmptyProposals><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Trans i18nKey=\"pool.noLiquidity\" /></ThemedText.DeprecatedBody></EmptyProposals>}</AutoColumn></AutoColumn>}</PageWrapper><SwitchLocaleLink /></></Trace>;\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport CurrencySearchModal from \"components/SearchModal/CurrencySearchModal\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useTotalSupply } from \"hooks/useTotalSupply\";\nimport { useV2Pair } from \"hooks/useV2Pairs\";\nimport JSBI from \"jsbi\";\nimport ms from \"ms\";\nimport { CurrencySelector } from \"pages/Pool/Positions/create/SelectTokenStep\";\nimport { useEffect, useState } from \"react\";\nimport { ArrowLeft } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useTokenBalance } from \"state/connection/hooks\";\nimport { usePairAdder } from \"state/user/hooks\";\nimport { PositionField } from \"types/position\";\nimport { Button, Flex, Text } from \"ui/src\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport default function PoolFinder() {\n  const account = useAccount();\n  const { t } = useTranslation();\n  const accountDrawer = useAccountDrawer();\n  const { formatCurrencyAmount } = useFormatter();\n  const [success, setSuccess] = useState(false);\n  const [currency0, setCurrency0] = useState(\n    () => account.chainId ? nativeOnChain(account.chainId) : void 0\n  );\n  const [currency1, setCurrency1] = useState();\n  const [currencySearchInputState, setCurrencySearchInputState] = useState(void 0);\n  const [, pair] = useV2Pair(currency0, currency1);\n  const addPair = usePairAdder();\n  useEffect(() => {\n    if (pair) {\n      addPair(pair);\n    }\n  }, [pair, addPair]);\n  const position = useTokenBalance(account.address, pair?.liquidityToken);\n  const hasPosition = Boolean(position && JSBI.greaterThan(position.quotient, JSBI.BigInt(0)));\n  const userPoolBalance = useTokenBalance(account.address, pair?.liquidityToken);\n  const totalPoolTokens = useTotalSupply(pair?.liquidityToken);\n  const [token0Deposited, token1Deposited] = !!pair && !!totalPoolTokens && !!userPoolBalance && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient) ? [\n    pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n    pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false)\n  ] : [void 0, void 0];\n  const token0UsdValue = useUSDCValue(token0Deposited);\n  const token1UsdValue = useUSDCValue(token1Deposited);\n  const networkSupportsV2 = useNetworkSupportsV2();\n  if (!networkSupportsV2) {\n    return <V2Unsupported />;\n  }\n  return <Trace logImpression page={InterfacePageName.POOL_PAGE}><Flex width=\"100%\" py=\"$spacing48\" px=\"$spacing40\" maxWidth={650}><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink style={{ gap: \"8px\" }} to=\"/positions\"><ArrowLeft size={14} /> <Trans i18nKey=\"pool.positions.title\" /></BreadcrumbNavLink></BreadcrumbNavContainer><Text variant=\"heading2\">{t(\"pool.import.positions.v2\")}</Text><Flex mt=\"$spacing40\" borderRadius=\"$rounded20\" borderColor=\"$surface3\" borderWidth={1} p=\"$spacing24\"><Text variant=\"subheading1\">{t(\"pool.selectPair\")}</Text><Text variant=\"body3\" mt=\"$gap4\">{t(\"pool.import.positions.v2.selectPair.description\")}</Text><Flex row gap=\"$gap16\" $md={{ flexDirection: \"column\" }} mt=\"$spacing12\"><CurrencySelector\n    currency={currency0 ?? void 0}\n    onPress={() => setCurrencySearchInputState(PositionField.TOKEN0)}\n  /><CurrencySelector\n    currency={currency1 ?? void 0}\n    onPress={() => setCurrencySearchInputState(PositionField.TOKEN1)}\n  /></Flex>{currency0 && currency1 && account.isConnected ? <><Text variant=\"subheading1\" mt=\"$gap32\">{t(\"poolFinder.availablePools\")}</Text><Text variant=\"body3\" mt=\"$gap4\">{hasPosition ? t(\"poolFinder.availablePools.found.description\") : t(\"poolFinder.availablePools.notFound.description\")}</Text></> : null}{hasPosition && pair && token0UsdValue && token1UsdValue && <Flex\n    mt=\"$gap12\"\n    width=\"100%\"\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    p=\"$padding16\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"$spacing1\"\n    borderColor=\"$surface3\"\n    $md={{ row: false, gap: \"$gap16\", alignItems: \"flex-start\" }}\n  ><Flex row alignItems=\"center\" gap=\"$gap16\" $md={{ justifyContent: \"space-between\" }}><DoubleCurrencyLogo currencies={[currency0, currency1]} size={40} /><Text variant=\"subheading1\">{currency0?.symbol}/{currency1?.symbol}</Text></Flex><Flex\n    $md={{\n      row: true,\n      gap: \"$gap8\",\n      alignItems: \"center\",\n      flexDirection: \"row-reverse\",\n      justifyContent: \"space-between\"\n    }}\n  ><Text variant=\"body2\" textAlign=\"right\">{formatCurrencyAmount({\n    amount: token0UsdValue.add(token1UsdValue),\n    type: NumberType.FiatTokenQuantity\n  })}</Text><Text variant=\"body3\" color=\"$neutral2\">{t(\"position.value\")}</Text></Flex></Flex>}{!account.isConnected ? <Button theme=\"secondary\" mt=\"$gap32\" onPress={accountDrawer.open}>{t(\"common.connectWallet.button\")}</Button> : <Button\n    theme=\"secondary\"\n    mt=\"$gap32\"\n    disabled={!hasPosition || success}\n    onPress={() => {\n      if (hasPosition && pair) {\n        addPair(pair);\n        setSuccess(true);\n        setTimeout(() => {\n          setSuccess(false);\n        }, ms(\"3s\"));\n      }\n    }}\n  >{hasPosition ? success ? t(\"pool.import.success\") : t(\"pool.import\") : t(\"common.button.continue\")}</Button>}</Flex><CurrencySearchModal\n    isOpen={currencySearchInputState !== void 0}\n    onDismiss={() => setCurrencySearchInputState(void 0)}\n    onCurrencySelect={(currency) => {\n      if (currencySearchInputState === PositionField.TOKEN0) {\n        setCurrency0(currency);\n      } else if (currencySearchInputState === PositionField.TOKEN1) {\n        setCurrency1(currency);\n      }\n      setCurrencySearchInputState(void 0);\n    }}\n  /></Flex></Trace>;\n}\n","\"use strict\";\nimport LegacyPool from \"pages/LegacyPool\";\nimport LegacyPositionPage from \"pages/LegacyPool/PositionPage\";\nimport LegacyPoolV2 from \"pages/LegacyPool/v2\";\nimport PoolFinder from \"pages/PoolFinder\";\nimport { Navigate, useParams, useSearchParams } from \"react-router-dom\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { searchParamToBackendName } from \"utils/chainParams\";\nimport { useAccount } from \"wagmi\";\nexport function LegacyPoolRedirects() {\n  const isLPRedesignEnabled = useFeatureFlag(FeatureFlags.LPRedesign);\n  if (isLPRedesignEnabled) {\n    return <Navigate to=\"/positions\" replace />;\n  }\n  return <LegacyPool />;\n}\nexport function LegacyPoolV2Redirects() {\n  const isLPRedesignEnabled = useFeatureFlag(FeatureFlags.LPRedesign);\n  if (isLPRedesignEnabled) {\n    return <Navigate to=\"/positions\" replace />;\n  }\n  return <LegacyPoolV2 />;\n}\nexport function PoolFinderRedirects() {\n  return <PoolFinder />;\n}\nexport function LegacyPositionPageRedirects() {\n  const isLPRedesignEnabled = useFeatureFlag(FeatureFlags.LPRedesign);\n  const { tokenId } = useParams();\n  const [searchParams] = useSearchParams();\n  const { chainId: connectedChainId } = useAccount();\n  const { defaultChainId } = useEnabledChains();\n  if (isLPRedesignEnabled) {\n    const chainName = searchParamToBackendName(searchParams.get(\"chain\"))?.toLowerCase() ?? toGraphQLChain(connectedChainId ?? defaultChainId).toLowerCase();\n    return <Navigate to={`/positions/v3/${chainName}/${tokenId}`} replace />;\n  }\n  return <LegacyPositionPage />;\n}\n"],"names":["DesktopHeader","styled","div","theme","surface3","MEDIA_WIDTHS","deprecated_upToSmall","MobileHeader","deprecated_upToExtraSmall","ToggleWrap","ToggleLabel","button","accent1","PositionList","positions","setUserHideClosedPositions","userHideClosedPositions","t","useTranslation","length","id","onClick","map","p","PositionListItem","tokenId","toString","ERC20Interface","Interface","ERC20ABI","hasURL","str","RegExp","test","useFilterPossiblyMaliciousPositions","chainId","useAccount","defaultChainId","useEnabledChains","nonListPositionTokenAddresses","useMemo","Array","from","Set","reduce","acc","position","concat","token0","token1","getUniqueAddressesFromPositions","positionCurrencyInfos","useQueries","queries","apolloQueryOptions","queryKey","queryFn","apolloClient","query","TokenDocument","variables","address","chain","toGraphQLChain","fetchPolicy","currency0","currency1","Promise","all","currency0Info","gqlTokenToCurrencyInfo","data","token","currency1Info","getPositionCurrencyInfosQueryOptions","symbolCallStates","tokens","field","useMultipleContractSingleData","NEVER_RELOAD","useTokenContractsConstant","addressesToSymbol","result","i","callResult","tokensInListCount","isSpam","safetyLevel","SafetyLevel","Verified","urlSymbolCount","currency","symbol","filter","CTASection","section","deprecated_mediaWidth","CTAStyle","css","neutral1","CTAExternalLink","ExternalLink","CTALink","StyledInternalLink","HeaderText","ThemedText","DeprecatedLabel","deprecated_upToMedium","ResponsiveColumn","AutoColumn","CTACards","getChainInfo","useSupportedChainId","UniverseChainId","Mainnet","href","Trans","i18nKey","DeprecatedBody","style","alignItems","display","fontWeight","data-testid","to","urlParam","alignSelf","PoolVersionItem","Anchor","flexDirection","width","gap","textDecorationLine","color","hoverStyle","titles","ProtocolVersion","V4","V3","V2","PoolVersionMenu","protocolVersion","isOpen","setIsOpen","useState","isLPRedesignEnabled","useFeatureFlag","FeatureFlags","LPRedesign","menuItems","title","link","DropdownSelector","menuLabel","Text","variant","internalMenuItems","Object","entries","protocol","info","Pool","height","toggleOpen","buttonStyle","adaptToSheet","PageWrapper","deprecatedStyled","breakpoint","md","sm","PoolMenuItem","justifyContent","ErrorContainer","IconStyle","NetworkIcon","AlertTriangle","InboxIcon","Inbox","ResponsiveButtonPrimary","ButtonPrimary","MainContentWrapper","main","surface1","PositionsLoadingPlaceholder","LoadingRows","WrongNetworkCard","justify","Flex","row","textAlign","strokeWidth","SwitchLocaleLink","account","isSupportedChain","useIsSupportedChainId","networkSupportsV2","useNetworkSupportsV2","accountDrawer","useAccountDrawer","isMenuOpen","toggleMenu","useTheme","useUserHideClosedPositions","loading","positionsLoading","useV3Positions","openPositions","closedPositions","liquidity","isZero","push","filteredPositions","showConnectAWallet","Boolean","ChevronsRight","size","Layers","BookOpen","Trace","logImpression","page","InterfacePageName","POOL_PAGE","$md","flexWrap","grow","dropdownStyle","top","data-cy","as","Link","BodyPrimary","neutral3","marginTop","ButtonText","logPress","eventOnTrigger","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","marginBottom","padding","open","HideSmall","STAKING_REWARDS_INTERFACE","StakingRewardsJSON","STAKING_REWARDS_INFO","WRAPPED_NATIVE_CURRENCY","DAI","stakingRewardAddress","USDC_MAINNET","USDT","WBTC","LPFeeExplainer","DataCard","ButtonRow","RowFixed","ResponsiveButtonSecondary","ButtonSecondary","EmptyProposals","neutral2","Header","H1Small","v2Pairs","stakingInfo","stakingInfosWithBalance","allV2PairsWithLiquidity","stakingPairs","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","liquidityToken","toV2LiquidityToken","balanceMap","fetchingV2PairBalances","useRpcTokenBalancesWithLoadingIndicator","liquidityTokensWithBalances","greaterThan","useV2Pairs","v2IsLoading","some","V2Pair","pair","v2Pair","pairToFilterBy","currentBlockTimestamp","useCurrentBlockTimestamp","stakingRewardInfo","involvesToken","uni","UNI","rewardsAddresses","accountArg","balances","earnedAmounts","totalSupplies","rewardRates","periodFinishes","memo","rewardsAddress","index","balanceState","earnedAmountState","totalSupplyState","rewardRateState","periodFinishState","error","logger","warn","dummyPair","Pair","CurrencyAmount","fromRawAmount","stakedAmount","JSBI","totalStakedAmount","totalRewardRate","getHypotheticalRewardRate","stakedAmount2","totalStakedAmount2","totalRewardRate2","quotient","individualRewardRate","periodFinishSeconds","toNumber","periodFinishMs","active","periodFinish","Date","earnedAmount","rewardRate","useStakingInfo","pool","BIG_INT_ZERO","stakingInfo2","v2PairsWithoutStakedAmount","stakingPair","CardBGImage","CardNoise","CardSection","RowBetween","DeprecatedWhite","fontSize","white","textDecoration","target","Row","Dots","FullPositionCard","stakedBalance","ButtonOutlined","margin","borderRadius","marginRight","Card","V2Unsupported","PoolFinder","formatCurrencyAmount","useFormatter","success","setSuccess","setCurrency0","nativeOnChain","setCurrency1","currencySearchInputState","setCurrencySearchInputState","useV2Pair","addPair","usePairAdder","useEffect","useTokenBalance","hasPosition","userPoolBalance","totalPoolTokens","useTotalSupply","token0Deposited","token1Deposited","getLiquidityValue","token0UsdValue","useUSDCValue","token1UsdValue","py","px","maxWidth","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","ArrowLeft","mt","borderColor","borderWidth","CurrencySelector","onPress","PositionField","TOKEN0","TOKEN1","isConnected","DoubleCurrencyLogo","currencies","amount","add","type","NumberType","FiatTokenQuantity","Button","disabled","setTimeout","ms","CurrencySearchModal","onDismiss","onCurrencySelect","LegacyPoolRedirects","Navigate","replace","LegacyPool","LegacyPoolV2Redirects","LegacyPoolV2","PoolFinderRedirects","LegacyPositionPageRedirects","useParams","searchParams","useSearchParams","connectedChainId","searchParamToBackendName","chainName","get","toLowerCase","LegacyPositionPage"],"sourceRoot":""}