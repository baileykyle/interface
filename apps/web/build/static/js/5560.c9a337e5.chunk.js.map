{"version":3,"file":"static/js/5560.c9a337e5.chunk.js","mappings":"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","sources":["components/swap/UnsupportedCurrencyFooter.tsx","pages/AddLiquidityV3/blastAlerts.tsx","components/PositionPreview.tsx","components/RangeSelector/PresetsButtons.tsx","components/addLiquidity/PoolWarning.tsx","components/addLiquidity/OutOfSyncWarning.tsx","components/addLiquidity/OwnershipWarning.tsx","components/addLiquidity/TokenTaxV3Warning.tsx","pages/AddLiquidityV3/Review.tsx","utils/approveAmountCalldata.ts","pages/AddLiquidityV3/index.tsx","hooks/useDerivedPositionInfo.ts","hooks/useArgentWalletContract.ts","pages/AddLiquidityV3/redirects.tsx"],"sourcesContent":["\"use strict\";\nimport { ButtonEmpty } from \"components/Button/buttons\";\nimport Card, { OutlineCard } from \"components/Card/cards\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow, RowBetween } from \"components/deprecated/Row\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { CloseIcon, ExternalLink, ThemedText } from \"theme/components\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Text } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { SafetyLevel } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nconst DetailsFooter = styled.div`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  background-color: ${({ theme }) => theme.surface2};\n  z-index: ${Z_INDEX.deprecated_zero};\n\n  transform: ${({ show }) => show ? \"translateY(0%)\" : \"translateY(-100%)\"};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`;\nconst StyledButtonEmpty = styled(ButtonEmpty)`\n  text-decoration: none;\n`;\nconst AddressText = styled(Text)`\n  color: ${({ theme }) => theme.accent1};\n  font-size: 12px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 10px;\n`}\n`;\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies\n}) {\n  const { chainId } = useAccount();\n  const [showDetails, setShowDetails] = useState(false);\n  const tokens = chainId && currencies ? currencies.map((currency) => {\n    return currency?.wrapped;\n  }) : [];\n  return <DetailsFooter show={show}><Modal\n    name={ModalName.UnsupportedCurrency}\n    isModalOpen={showDetails}\n    onClose={() => setShowDetails(false)}\n    padding={0}\n  ><Card padding=\"2rem\"><AutoColumn gap=\"lg\"><RowBetween><ThemedText.DeprecatedMediumHeader><Trans i18nKey=\"common.unsupportedAsset_other\" /></ThemedText.DeprecatedMediumHeader><CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" /></RowBetween>{tokens.map((token) => {\n    return <UnsupportedTokenCard key={token?.address?.concat(\"not-supported\")} token={token} chainId={chainId} />;\n  })}<AutoColumn gap=\"lg\"><ThemedText.DeprecatedBody fontWeight={535}><Trans i18nKey=\"swap.limitedAssets.warning\" /></ThemedText.DeprecatedBody></AutoColumn></AutoColumn></Card></Modal><StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\"><Text color=\"$accent1\"><Trans i18nKey=\"swap.unsupportedAssets.readMore\" /></Text></StyledButtonEmpty></DetailsFooter>;\n}\nfunction UnsupportedTokenCard({ token, chainId }) {\n  const currencyInfo = useCurrencyInfo(token);\n  if (!token || !currencyInfo?.isSpam && currencyInfo?.safetyLevel === SafetyLevel.Verified) {\n    return null;\n  }\n  return <OutlineCard key={token?.address?.concat(\"not-supported\")} data-testid=\"unsupported-token-card\"><AutoColumn gap=\"10px\"><AutoRow gap=\"5px\" align=\"center\"><CurrencyLogo currency={token} size={24} /><ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody></AutoRow>{chainId && <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}><AddressText>{shortenAddress(token.address)}</AddressText></ExternalLink>}</AutoColumn></OutlineCard>;\n}\n","\"use strict\";\nimport { Dialog, DialogButtonType } from \"components/Dialog/Dialog\";\nimport AlertTriangleFilled from \"components/Icons/AlertTriangleFilled\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport styled from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { ChevronDown } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ButtonText, ExternalLink, ThemedText } from \"theme/components\";\nconst StyledAlertIcon = styled(AlertTriangleFilled)`\n  path {\n    fill: ${({ theme }) => theme.neutral2};\n  }\n`;\nconst AlertContainer = styled(Row)`\n  background-color: ${({ theme }) => theme.surface2};\n  padding: 12px;\n  border-radius: 20px;\n  gap: 12px;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\nconst AlertIconContainer = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  background-color: ${({ theme }) => theme.surface3};\n  width: 40px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n`;\nconst StyledLearnMore = styled(ExternalLink)`\n  display: inline-block;\n`;\nexport function BlastRebasingModal({ currencyIdA, currencyIdB, onContinue }) {\n  const navigate = useNavigate();\n  return <Dialog\n    isVisible={true}\n    icon={<StyledAlertIcon size=\"28px\" />}\n    title={<ThemedText.HeadlineMedium fontSize=\"24px\"><Trans i18nKey=\"v3.rebase.unavailable\" /></ThemedText.HeadlineMedium>}\n    description={<Trans i18nKey=\"v3.blast.yield.usdbAndWeth\" />}\n    body={<ExternalLink href=\"https://support.uniswap.org/hc/en-us/articles/25351747812109-Blast-Rebase-Tokens\"><ThemedText.BodyPrimary fontWeight={535} lineHeight=\"24px\">\n            Learn more\n          </ThemedText.BodyPrimary></ExternalLink>}\n    onCancel={onContinue}\n    buttonsConfig={{\n      left: {\n        title: <Trans i18nKey=\"v3.continue\" />,\n        onClick: onContinue\n      },\n      right: {\n        title: <Trans i18nKey=\"v2.switchTo\" />,\n        onClick: () => navigate(`/add/v2/${currencyIdA ?? \"ETH\"}/${currencyIdB ?? \"\"}`),\n        type: DialogButtonType.Accent\n      },\n      gap: \"sm\"\n    }}\n  />;\n}\nconst TextWrapper = styled(ThemedText.SubHeaderSmall)`\n  display: -webkit-box;\n  -webkit-line-clamp: ${({ $expanded }) => $expanded ? \"none\" : 2};\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\nconst ReadMore = styled(ButtonText)`\n  display: flex;\n  color: ${({ theme }) => theme.neutral2};\n  justify-content: flex-start;\n  gap: 4px;\n  align-items: center;\n\n  :focus {\n    text-decoration: none;\n  }\n`;\nconst StyledChevronDown = styled(ChevronDown)`\n  transform: ${({ $expanded }) => $expanded && \"rotate(-180deg)\"};\n  transition: ${({\n  theme: {\n    transition: { duration, timing }\n  }\n}) => `transform ${duration.fast} ${timing.inOut}`};\n`;\nexport function BlastRebasingAlert() {\n  const { t } = useTranslation();\n  const [expanded, setExpanded] = useState(false);\n  const handleSetExpanded = useCallback(() => setExpanded(!expanded), [expanded]);\n  return <AlertContainer><AlertIconContainer><StyledAlertIcon size=\"20px\" /></AlertIconContainer><Column gap=\"xs\"><ThemedText.SubHeader lineHeight=\"24px\"><Trans i18nKey=\"v3.rebase.unavailable\" /></ThemedText.SubHeader><TextWrapper lineHeight=\"20px\" $expanded={expanded}><Trans i18nKey=\"v3.blast.yield.usdbAndWeth\" />{\" \"}<StyledLearnMore href=\"https://support.uniswap.org/hc/en-us/articles/25351747812109-Blast-Rebase-Tokens\"><ThemedText.SubHeaderSmall fontWeight={535} lineHeight=\"20px\" color=\"neutral1\"><Trans i18nKey=\"common.button.learn\" /></ThemedText.SubHeaderSmall></StyledLearnMore></TextWrapper><ReadMore onClick={handleSetExpanded}><ThemedText.SubHeaderSmall lineHeight=\"20px\" fontWeight={535}>{expanded ? t(\"common.longText.button.less\") : t(\"common.longText.button.more\")}</ThemedText.SubHeaderSmall><StyledChevronDown $expanded={expanded} size={16} /></ReadMore></Column></AlertContainer>;\n}\n","\"use strict\";\nimport RangeBadge from \"components/Badge/RangeBadge\";\nimport { LightCard } from \"components/Card/cards\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport RateToggle from \"components/RateToggle\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { Break } from \"components/earn/styled\";\nimport JSBI from \"jsbi\";\nimport { BlastRebasingAlert } from \"pages/AddLiquidityV3/blastAlerts\";\nimport { useCallback, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { ThemedText } from \"theme/components\";\nimport { Text } from \"ui/src\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nexport const PositionPreview = ({\n  position,\n  title,\n  inRange,\n  baseCurrencyDefault,\n  ticksAtLimit,\n  showBlastAlert\n}) => {\n  const { formatCurrencyAmount, formatDelta, formatPrice, formatTickPrice } = useFormatter();\n  const currency0 = unwrappedToken(position.pool.token0);\n  const currency1 = unwrappedToken(position.pool.token1);\n  const [baseCurrency, setBaseCurrency] = useState(\n    baseCurrencyDefault ? baseCurrencyDefault === currency0 ? currency0 : baseCurrencyDefault === currency1 ? currency1 : currency0 : currency0\n  );\n  const sorted = baseCurrency === currency0;\n  const quoteCurrency = sorted ? currency1 : currency0;\n  const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1);\n  const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert();\n  const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert();\n  const handleRateChange = useCallback(() => {\n    setBaseCurrency(quoteCurrency);\n  }, [quoteCurrency]);\n  const removed = position?.liquidity && JSBI.equal(position?.liquidity, JSBI.BigInt(0));\n  return <AutoColumn gap=\"md\" style={{ marginTop: \"0.5rem\" }}><RowBetween style={{ marginBottom: \"0.5rem\" }}><RowFixed><DoubleCurrencyLogo currencies={[currency0, currency1]} size={24} /><ThemedText.DeprecatedLabel ml=\"10px\" fontSize=\"24px\">{currency0?.symbol} / {currency1?.symbol}</ThemedText.DeprecatedLabel></RowFixed><RangeBadge removed={removed} inRange={inRange} /></RowBetween>{showBlastAlert && <BlastRebasingAlert />}<LightCard><AutoColumn gap=\"md\"><RowBetween><RowFixed><CurrencyLogo currency={currency0} /><ThemedText.DeprecatedLabel ml=\"8px\">{currency0?.symbol}</ThemedText.DeprecatedLabel></RowFixed><RowFixed><ThemedText.DeprecatedLabel mr=\"8px\">{formatCurrencyAmount({ amount: position.amount0 })}</ThemedText.DeprecatedLabel></RowFixed></RowBetween><RowBetween><RowFixed><CurrencyLogo currency={currency1} /><ThemedText.DeprecatedLabel ml=\"8px\">{currency1?.symbol}</ThemedText.DeprecatedLabel></RowFixed><RowFixed><ThemedText.DeprecatedLabel mr=\"8px\">{formatCurrencyAmount({ amount: position.amount1 })}</ThemedText.DeprecatedLabel></RowFixed></RowBetween><Break /><RowBetween><ThemedText.DeprecatedLabel><Trans i18nKey=\"fee.tier\" /></ThemedText.DeprecatedLabel><ThemedText.DeprecatedLabel>{formatDelta(position?.pool?.fee / BIPS_BASE)}</ThemedText.DeprecatedLabel></RowBetween></AutoColumn></LightCard><AutoColumn gap=\"md\"><RowBetween>{title ? <ThemedText.DeprecatedMain>{title}</ThemedText.DeprecatedMain> : <div />}<RateToggle\n    currencyA={sorted ? currency0 : currency1}\n    currencyB={sorted ? currency1 : currency0}\n    handleRateToggle={handleRateChange}\n  /></RowBetween><RowBetween><LightCard width=\"48%\" padding=\"8px\"><AutoColumn gap=\"4px\" justify=\"center\"><ThemedText.DeprecatedMain fontSize=\"12px\"><Trans i18nKey=\"pool.minPrice\" /></ThemedText.DeprecatedMain><ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatTickPrice({\n    price: priceLower,\n    atLimit: ticksAtLimit,\n    direction: Bound.LOWER\n  })}</ThemedText.DeprecatedMediumHeader><ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: quoteCurrency.symbol, symbolB: baseCurrency.symbol }}\n  /></ThemedText.DeprecatedMain><Text fontSize={11} textAlign=\"center\" color=\"$neutral3\" mt={4}><Trans i18nKey=\"pool.position.willBe100\" values={{ sym: baseCurrency?.symbol }} /></Text></AutoColumn></LightCard><LightCard width=\"48%\" padding=\"8px\"><AutoColumn gap=\"4px\" justify=\"center\"><ThemedText.DeprecatedMain fontSize=\"12px\"><Trans i18nKey=\"pool.maxPrice\" /></ThemedText.DeprecatedMain><ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatTickPrice({\n    price: priceUpper,\n    atLimit: ticksAtLimit,\n    direction: Bound.UPPER\n  })}</ThemedText.DeprecatedMediumHeader><ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: quoteCurrency.symbol, symbolB: baseCurrency.symbol }}\n  /></ThemedText.DeprecatedMain><Text fontSize={11} textAlign=\"center\" color=\"$neutral3\" mt={4}><Trans i18nKey=\"pool.position.willBe100\" values={{ sym: quoteCurrency?.symbol }} /></Text></AutoColumn></LightCard></RowBetween><LightCard padding=\"12px \"><AutoColumn gap=\"4px\" justify=\"center\"><ThemedText.DeprecatedMain fontSize=\"12px\"><Trans i18nKey=\"common.currentPrice\" /></ThemedText.DeprecatedMain><ThemedText.DeprecatedMediumHeader>{`${formatPrice({\n    price,\n    type: NumberType.TokenTx\n  })} `}</ThemedText.DeprecatedMediumHeader><ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\"><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: quoteCurrency.symbol, symbolB: baseCurrency.symbol }}\n  /></ThemedText.DeprecatedMain></AutoColumn></LightCard></AutoColumn></AutoColumn>;\n};\n","\"use strict\";\nimport { ButtonOutlined } from \"components/Button/buttons\";\nimport { AutoRow } from \"components/deprecated/Row\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nconst Button = styled(ButtonOutlined).attrs(() => ({\n  padding: \"6px\",\n  $borderRadius: \"8px\"\n}))`\n  color: ${({ theme }) => theme.neutral1};\n  flex: 1;\n`;\nexport default function PresetsButtons({ onSetFullRange }) {\n  return <AutoRow gap=\"4px\" width=\"auto\"><Button data-testid=\"set-full-range\" onClick={onSetFullRange}><ThemedText.DeprecatedBody fontSize={12}><Trans i18nKey=\"common.fullRange\" /></ThemedText.DeprecatedBody></Button></AutoRow>;\n}\n","\"use strict\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { ExternalLink } from \"theme/components\";\nimport { Text } from \"ui/src\";\nimport { AlertTriangleFilled } from \"ui/src/components/icons/AlertTriangleFilled\";\nimport { iconSizes } from \"ui/src/theme\";\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  max-width: 550px;\n  padding: 12px;\n  border-radius: 20px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background: ${({ theme }) => theme.surface2};\n`;\nconst StyledColumn = styled(Column)`\n  height: 100%;\n`;\nconst IconContainer = styled.div`\n  height: 40px;\n  width: 40px;\n  padding: 10px;\n  border-radius: 12px;\n  background: ${({ theme }) => theme.critical2};\n`;\nexport function PoolWarning({ title, subtitle, link }) {\n  return <Container><Row gap=\"md\" height=\"100%\"><StyledColumn><IconContainer><AlertTriangleFilled color=\"$statusCritical\" size={iconSizes.icon20} /></IconContainer></StyledColumn><StyledColumn gap=\"xs\"><Text variant=\"body3\" color=\"$neutral1\">{title}</Text><Text variant=\"body3\" color=\"$neutral2\">{subtitle}</Text><ExternalLink href={link}><Text variant=\"buttonLabel3\" color=\"$neutral1\"><Trans i18nKey=\"common.button.learn\" /></Text></ExternalLink></StyledColumn></Row></Container>;\n}\n","\"use strict\";\nimport { PoolWarning } from \"components/addLiquidity/PoolWarning\";\nimport { Trans } from \"react-i18next\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nexport function OutOfSyncWarning() {\n  return <PoolWarning\n    title={<Trans i18nKey=\"pool.liquidity.outOfSync\" />}\n    subtitle={<Trans i18nKey=\"pool.liquidity.outOfSync.message\" />}\n    link={uniswapUrls.helpArticleUrls.impermanentLoss}\n  />;\n}\n","\"use strict\";\nimport styled from \"lib/styled-components\";\nimport { AlertTriangle } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nconst ExplainerText = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n`;\nconst TitleRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  color: ${({ theme }) => theme.deprecated_accentWarning};\n  margin-bottom: 8px;\n`;\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.deprecated_accentWarningSoft};\n  border-radius: 16px;\n  margin-top: 12px;\n  max-width: 480px;\n  padding: 12px 20px;\n  width: 100%;\n`;\nconst OwnershipWarning = ({ ownerAddress }) => <Wrapper><TitleRow><AlertTriangle style={{ marginRight: \"8px\" }} /><ThemedText.SubHeader color=\"deprecated_accentWarning\"><Trans i18nKey=\"token.safetyLevel.strong.header\" /></ThemedText.SubHeader></TitleRow><ExplainerText><Trans i18nKey=\"pool.liquidity.ownershipWarning.message\" values={{ ownerAddress }} /></ExplainerText></Wrapper>;\nexport default OwnershipWarning;\n","\"use strict\";\nimport { PoolWarning } from \"components/addLiquidity/PoolWarning\";\nimport { Trans } from \"react-i18next\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nexport function TokenTaxV3Warning() {\n  return <PoolWarning\n    title={<Trans i18nKey=\"pool.liquidity.taxWarning\" />}\n    subtitle={<Trans i18nKey=\"pool.liquidity.taxWarning.message\" />}\n    link={uniswapUrls.helpArticleUrls.feeOnTransferHelp}\n  />;\n}\n","\"use strict\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { PositionPreview } from \"components/PositionPreview\";\nimport styled from \"lib/styled-components\";\nconst Wrapper = styled.div`\n  padding-top: 12px;\n`;\nexport function Review({\n  position,\n  outOfRange,\n  ticksAtLimit\n}) {\n  return <Wrapper><AutoColumn gap=\"lg\">{position ? <PositionPreview\n    position={position}\n    inRange={!outOfRange}\n    ticksAtLimit={ticksAtLimit}\n    title=\"Selected Range\"\n  /> : null}</AutoColumn></Wrapper>;\n}\n","\"use strict\";\nimport { Interface } from \"@ethersproject/abi\";\nimport { toHex } from \"@uniswap/v3-sdk\";\nconst ERC20_INTERFACE = new Interface([\n  {\n    constant: false,\n    inputs: [\n      { name: \"_spender\", type: \"address\" },\n      { name: \"_value\", type: \"uint256\" }\n    ],\n    name: \"approve\",\n    outputs: [{ name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n]);\nexport default function approveAmountCalldata(amount, spender) {\n  if (!amount.currency.isToken) {\n    throw new Error(\"Must call with an amount of token\");\n  }\n  const approveData = ERC20_INTERFACE.encodeFunctionData(\"approve\", [spender, toHex(amount.quotient)]);\n  return {\n    to: amount.currency.address,\n    data: approveData,\n    value: \"0x0\"\n  };\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { InterfaceElementName, InterfaceEventName, LiquidityEventName } from \"@uniswap/analytics-events\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport {\n  NONFUNGIBLE_POSITION_MANAGER_ADDRESSES,\n  Percent,\n  V3_CORE_FACTORY_ADDRESSES\n} from \"@uniswap/sdk-core\";\nimport { FeeAmount, NonfungiblePositionManager, TICK_SPACINGS } from \"@uniswap/v3-sdk\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText } from \"components/Button/buttons\";\nimport { BlueCard, OutlineCard, YellowCard } from \"components/Card/cards\";\nimport CurrencyInputPanel from \"components/CurrencyInputPanel\";\nimport FeeSelector from \"components/FeeSelector\";\nimport HoverInlineText from \"components/HoverInlineText\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport LiquidityChartRangeInput from \"components/LiquidityChartRangeInput\";\nimport { ConnectWalletButtonText } from \"components/NavBar/accountCTAsExperimentUtils\";\nimport { AddRemoveTabs } from \"components/NavigationTabs\";\nimport { PositionPreview } from \"components/PositionPreview\";\nimport RangeSelector from \"components/RangeSelector\";\nimport PresetsButtons from \"components/RangeSelector/PresetsButtons\";\nimport RateToggle from \"components/RateToggle\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"components/TransactionConfirmationModal\";\nimport { OutOfSyncWarning } from \"components/addLiquidity/OutOfSyncWarning\";\nimport OwnershipWarning from \"components/addLiquidity/OwnershipWarning\";\nimport { TokenTaxV3Warning } from \"components/addLiquidity/TokenTaxV3Warning\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport Row, { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport UnsupportedCurrencyFooter from \"components/swap/UnsupportedCurrencyFooter\";\nimport { ZERO_PERCENT } from \"constants/misc\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { ApprovalState, useApproveCallback } from \"hooks/useApproveCallback\";\nimport { useArgentWalletContract } from \"hooks/useArgentWalletContract\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useDerivedPositionInfo } from \"hooks/useDerivedPositionInfo\";\nimport { useEthersSigner } from \"hooks/useEthersSigner\";\nimport { useIsPoolOutOfSync } from \"hooks/useIsPoolOutOfSync\";\nimport { useIsSwapUnsupported } from \"hooks/useIsSwapUnsupported\";\nimport { PoolCache } from \"hooks/usePools\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { useGetTransactionDeadline } from \"hooks/useTransactionDeadline\";\nimport { useV3PositionFromTokenId } from \"hooks/useV3Positions\";\nimport { atomWithStorage, useAtomValue, useUpdateAtom } from \"jotai/utils\";\nimport { useSingleCallResult } from \"lib/hooks/multicall\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { Review } from \"pages/AddLiquidityV3/Review\";\nimport { BlastRebasingAlert, BlastRebasingModal } from \"pages/AddLiquidityV3/blastAlerts\";\nimport {\n  DynamicSection,\n  MediumOnly,\n  ResponsiveTwoColumns,\n  ScrollablePage,\n  StyledInput,\n  Wrapper\n} from \"pages/AddLiquidityV3/styled\";\nimport { BodyWrapper } from \"pages/App/AppBody\";\nimport { PositionPageUnsupportedContent } from \"pages/LegacyPool/PositionPage\";\nimport { Dots } from \"pages/LegacyPool/styled\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AlertTriangle } from \"react-feather\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport { Bound, Field } from \"state/mint/v3/actions\";\nimport {\n  useRangeHopCallbacks,\n  useV3DerivedMintInfo,\n  useV3MintActionHandlers,\n  useV3MintState\n} from \"state/mint/v3/hooks\";\nimport { useTransactionAdder } from \"state/transactions/hooks\";\nimport { TransactionType } from \"state/transactions/types\";\nimport { useUserSlippageToleranceWithDefault } from \"state/user/hooks\";\nimport { ThemedText } from \"theme/components\";\nimport { Text } from \"ui/src\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { useIsSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId, isUniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { getChainLabel } from \"uniswap/src/features/chains/utils\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport approveAmountCalldata from \"utils/approveAmountCalldata\";\nimport { calculateGasMargin } from \"utils/calculateGasMargin\";\nimport { currencyId } from \"utils/currencyId\";\nimport { WrongChainError } from \"utils/errors\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { maxAmountSpend } from \"utils/maxAmountSpend\";\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 1e4);\nconst blastRebasingAlertAtom = atomWithStorage(\"shouldShowBlastRebasingAlert\", true);\nconst StyledBodyWrapper = styled(BodyWrapper)`\n  padding: ${({ $hasExistingPosition }) => $hasExistingPosition ? \"10px\" : 0};\n  max-width: 640px;\n`;\nconst BLAST_REBASING_TOKENS = [\n  \"ETH\",\n  \"0x4300000000000000000000000000000000000004\",\n  \"0x4300000000000000000000000000000000000003\"\n];\nexport default function AddLiquidityWrapper() {\n  const { chainId } = useAccount();\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  if (isSupportedChain) {\n    return <AddLiquidity />;\n  } else {\n    return <PositionPageUnsupportedContent />;\n  }\n}\nfunction AddLiquidity() {\n  const navigate = useNavigate();\n  const {\n    currencyIdA,\n    currencyIdB,\n    feeAmount: feeAmountFromUrl,\n    tokenId\n  } = useParams();\n  const { t } = useTranslation();\n  const account = useAccount();\n  const signer = useEthersSigner();\n  const theme = useTheme();\n  const trace = useTrace();\n  const accountDrawer = useAccountDrawer();\n  const addTransaction = useTransactionAdder();\n  const positionManager = useV3NFTPositionManagerContract();\n  const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(\n    tokenId ? BigNumber.from(tokenId) : void 0\n  );\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading;\n  const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails);\n  const feeAmount = feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl)) ? parseFloat(feeAmountFromUrl) : void 0;\n  const baseCurrency = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const quoteCurrency = baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? void 0 : currencyB;\n  const { independentField, typedValue, startPriceTypedValue } = useV3MintState();\n  const {\n    pool,\n    ticks,\n    dependentField,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n    isTaxed\n  } = useV3DerivedMintInfo(\n    baseCurrency ?? void 0,\n    quoteCurrency ?? void 0,\n    feeAmount,\n    baseCurrency ?? void 0,\n    existingPosition\n  );\n  const { formatPrice } = useFormatter();\n  const formattedPrice = formatPrice({\n    price: invertPrice ? price?.invert() : price,\n    type: NumberType.TokenTx\n  });\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } = useV3MintActionHandlers(noLiquidity);\n  const isValid = !errorMessage && !invalidRange;\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false);\n  const getDeadline = useGetTransactionDeadline();\n  const [txHash, setTxHash] = useState(\"\");\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? \"\"\n  };\n  const usdcValues = {\n    [Field.CURRENCY_A]: useUSDCValue(parsedAmounts[Field.CURRENCY_A]),\n    [Field.CURRENCY_B]: useUSDCValue(parsedAmounts[Field.CURRENCY_B])\n  };\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field])\n      };\n    },\n    {}\n  );\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? \"0\")\n      };\n    },\n    {}\n  );\n  const argentWalletContract = useArgentWalletContract();\n  const [approvalA, approveACallback] = useApproveCallback(\n    argentWalletContract ? void 0 : parsedAmounts[Field.CURRENCY_A],\n    account.status === \"connected\" && account.chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[account.chainId] : void 0\n  );\n  const [approvalB, approveBCallback] = useApproveCallback(\n    argentWalletContract ? void 0 : parsedAmounts[Field.CURRENCY_B],\n    account.status === \"connected\" && account.chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[account.chainId] : void 0\n  );\n  const allowedSlippage = useUserSlippageToleranceWithDefault(\n    outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE\n  );\n  const usdcValueCurrencyA = usdcValues[Field.CURRENCY_A];\n  const usdcValueCurrencyB = usdcValues[Field.CURRENCY_B];\n  const currencyAFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyA ? parseFloat(usdcValueCurrencyA.toSignificant()) : void 0,\n      isLoading: false\n    }),\n    [usdcValueCurrencyA]\n  );\n  const currencyBFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyB ? parseFloat(usdcValueCurrencyB.toSignificant()) : void 0,\n      isLoading: false\n    }),\n    [usdcValueCurrencyB]\n  );\n  async function onAdd() {\n    if (account.status !== \"connected\" || !signer || !account.chainId) {\n      return;\n    }\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\n      return;\n    }\n    const deadline = await getDeadline();\n    if (position && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : void 0;\n      const { calldata, value } = hasExistingPosition && tokenId ? NonfungiblePositionManager.addCallParameters(position, {\n        tokenId,\n        slippageTolerance: allowedSlippage,\n        deadline: deadline.toString(),\n        useNative\n      }) : NonfungiblePositionManager.addCallParameters(position, {\n        slippageTolerance: allowedSlippage,\n        recipient: account.address,\n        deadline: deadline.toString(),\n        useNative,\n        createPool: noLiquidity\n      });\n      let txn = {\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[account.chainId],\n        data: calldata,\n        value\n      };\n      if (argentWalletContract) {\n        const amountA = parsedAmounts[Field.CURRENCY_A];\n        const amountB = parsedAmounts[Field.CURRENCY_B];\n        const batch = [\n          ...amountA && amountA.currency.isToken ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[account.chainId])] : [],\n          ...amountB && amountB.currency.isToken ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[account.chainId])] : [],\n          {\n            to: txn.to,\n            data: txn.data,\n            value: txn.value\n          }\n        ];\n        const data = argentWalletContract.interface.encodeFunctionData(\"wc_multiCall\", [batch]);\n        txn = {\n          to: argentWalletContract.address,\n          data,\n          value: \"0x0\"\n        };\n      }\n      const connectedChainId = await signer.getChainId();\n      if (account.chainId !== connectedChainId) {\n        throw new WrongChainError();\n      }\n      setAttemptingTxn(true);\n      signer.estimateGas(txn).then((estimate) => {\n        const newTxn = {\n          ...txn,\n          gasLimit: calculateGasMargin(estimate)\n        };\n        return signer.sendTransaction(newTxn).then((response) => {\n          setAttemptingTxn(false);\n          const transactionInfo = {\n            type: TransactionType.ADD_LIQUIDITY_V3_POOL,\n            baseCurrencyId: currencyId(baseCurrency),\n            quoteCurrencyId: currencyId(quoteCurrency),\n            createPool: Boolean(noLiquidity),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient?.toString() ?? \"0\",\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient?.toString() ?? \"0\",\n            feeAmount: position.pool.fee\n          };\n          addTransaction(response, transactionInfo);\n          setTxHash(response.hash);\n          sendAnalyticsEvent(LiquidityEventName.ADD_LIQUIDITY_SUBMITTED, {\n            ...transactionInfo,\n            ...getLPBaseAnalyticsProperties({\n              trace,\n              fee: feeAmount,\n              version: ProtocolVersion.V3,\n              poolId: feeAmount && account.chainId ? PoolCache.getPoolAddress(\n                V3_CORE_FACTORY_ADDRESSES[account.chainId],\n                baseCurrency.wrapped,\n                quoteCurrency.wrapped,\n                feeAmount,\n                account.chainId\n              ) : void 0,\n              currency0: baseCurrency,\n              currency1: quoteCurrency,\n              currency0AmountUsd: currencyAFiat.data,\n              currency1AmountUsd: currencyBFiat.data,\n              chainId: account.chainId\n            }),\n            createPosition: false,\n            transaction_hash: response.hash\n          });\n        });\n      }).catch((error) => {\n        setAttemptingTxn(false);\n        if (error?.code !== 4001) {\n          logger.warn(\"AddLiquidity\", \"addLiquidity\", \"Error completing add liquidity tx\", error);\n        }\n      });\n    } else {\n      return;\n    }\n  }\n  const handleCurrencySelect = useCallback(\n    (currencyNew, currencyIdOther) => {\n      const currencyIdNew = currencyId(currencyNew);\n      if (currencyIdNew === currencyIdOther) {\n        return [currencyIdNew, void 0];\n      } else {\n        const isETHOrWETHNew = currencyIdNew === \"ETH\" || account.status === \"connected\" && account.chainId && currencyIdNew === WRAPPED_NATIVE_CURRENCY[account.chainId]?.address;\n        const isETHOrWETHOther = currencyIdOther !== void 0 && (currencyIdOther === \"ETH\" || account.status === \"connected\" && account.chainId && currencyIdOther === WRAPPED_NATIVE_CURRENCY[account.chainId]?.address);\n        if (isETHOrWETHNew && isETHOrWETHOther) {\n          return [currencyIdNew, void 0];\n        } else {\n          return [currencyIdNew, currencyIdOther];\n        }\n      }\n    },\n    [account.chainId, account.status]\n  );\n  const handleCurrencyASelect = useCallback(\n    (currencyANew) => {\n      const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB);\n      if (idB === void 0) {\n        navigate(`/add/${idA}`);\n      } else {\n        navigate(`/add/${idA}/${idB}`);\n      }\n    },\n    [handleCurrencySelect, currencyIdB, navigate]\n  );\n  const handleCurrencyBSelect = useCallback(\n    (currencyBNew) => {\n      const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA);\n      if (idA === void 0) {\n        navigate(`/add/${idB}`);\n      } else {\n        navigate(`/add/${idA}/${idB}`);\n      }\n    },\n    [handleCurrencySelect, currencyIdA, navigate]\n  );\n  const handleFeePoolSelect = useCallback(\n    (newFeeAmount) => {\n      onLeftRangeInput(\"\");\n      onRightRangeInput(\"\");\n      navigate(`/add/${currencyIdA}/${currencyIdB}/${newFeeAmount}`);\n    },\n    [currencyIdA, currencyIdB, navigate, onLeftRangeInput, onRightRangeInput]\n  );\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    if (txHash) {\n      onFieldAInput(\"\");\n      navigate(\"/pools\");\n    }\n    setTxHash(\"\");\n  }, [navigate, onFieldAInput, txHash]);\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B);\n  const clearAll = useCallback(() => {\n    onFieldAInput(\"\");\n    onFieldBInput(\"\");\n    onLeftRangeInput(\"\");\n    onRightRangeInput(\"\");\n    navigate(`/add`);\n  }, [navigate, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput]);\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks;\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks;\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } = useRangeHopCallbacks({\n    baseCurrency,\n    quoteCurrency,\n    feeAmount,\n    tickLower,\n    tickUpper,\n    pool\n  });\n  const showApprovalA = !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A];\n  const showApprovalB = !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B];\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : \"\"} ${!depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : \"\"} ${!outOfRange ? \"and\" : \"\"} ${!depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : \"\"} ${!depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : \"\"}`;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleSetFullRange = useCallback(() => {\n    getSetFullRange();\n    const minPrice = pricesAtLimit[Bound.LOWER];\n    if (minPrice) {\n      searchParams.set(\"minPrice\", minPrice.toSignificant(5));\n    }\n    const maxPrice = pricesAtLimit[Bound.UPPER];\n    if (maxPrice) {\n      searchParams.set(\"maxPrice\", maxPrice.toSignificant(5));\n    }\n    setSearchParams(searchParams);\n  }, [getSetFullRange, pricesAtLimit, searchParams, setSearchParams]);\n  const oldSearchParams = usePrevious(searchParams);\n  useEffect(() => {\n    const minPrice = searchParams.get(\"minPrice\");\n    const oldMinPrice = oldSearchParams?.get(\"minPrice\");\n    if (minPrice && typeof minPrice === \"string\" && !isNaN(minPrice) && (!oldMinPrice || oldMinPrice !== minPrice)) {\n      onLeftRangeInput(minPrice);\n    }\n  }, [searchParams]);\n  useEffect(() => {\n    const maxPrice = searchParams.get(\"maxPrice\");\n    const oldMaxPrice = oldSearchParams?.get(\"maxPrice\");\n    if (maxPrice && typeof maxPrice === \"string\" && !isNaN(maxPrice) && (!oldMaxPrice || oldMaxPrice !== maxPrice)) {\n      onRightRangeInput(maxPrice);\n    }\n  }, [searchParams]);\n  const Buttons = () => addIsUnsupported ? <ButtonPrimary disabled={true} $borderRadius=\"12px\" padding=\"12px\"><ThemedText.DeprecatedMain mb=\"4px\" style={{ textTransform: \"capitalize\" }}><Trans i18nKey=\"common.unsupportedAsset_one\" /></ThemedText.DeprecatedMain></ButtonPrimary> : account.status !== \"connected\" ? <Trace\n    logPress\n    eventOnTrigger={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n    properties={{ received_swap_quote: false }}\n    element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n  ><ButtonLight onClick={accountDrawer.open} $borderRadius=\"12px\" padding=\"12px\"><ConnectWalletButtonText /></ButtonLight></Trace> : <AutoColumn gap=\"md\">{(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && <RowBetween>{showApprovalA && <ButtonPrimary\n    onClick={approveACallback}\n    disabled={approvalA === ApprovalState.PENDING}\n    width={showApprovalB ? \"48%\" : \"100%\"}\n  >{approvalA === ApprovalState.PENDING ? <Dots><Trans\n    i18nKey=\"pools.approving.amount\"\n    values={{ amount: currencies[Field.CURRENCY_A]?.symbol }}\n  /></Dots> : <Trans\n    i18nKey=\"account.transactionSummary.approve\"\n    values={{ tokenSymbol: currencies[Field.CURRENCY_A]?.symbol }}\n  />}</ButtonPrimary>}{showApprovalB && <ButtonPrimary\n    onClick={approveBCallback}\n    disabled={approvalB === ApprovalState.PENDING}\n    width={showApprovalA ? \"48%\" : \"100%\"}\n  >{approvalB === ApprovalState.PENDING ? <Dots><Trans\n    i18nKey=\"pools.approving.amount\"\n    values={{ amount: currencies[Field.CURRENCY_B]?.symbol }}\n  /></Dots> : <Trans\n    i18nKey=\"account.transactionSummary.approve\"\n    values={{ tokenSymbol: currencies[Field.CURRENCY_B]?.symbol }}\n  />}</ButtonPrimary>}</RowBetween>}<ButtonError\n    onClick={() => {\n      setShowConfirm(true);\n    }}\n    disabled={!isValid || !argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled || !argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled}\n    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n  ><Text fontWeight=\"$medium\" color=\"$neutralContrast\">{errorMessage ? errorMessage : <Trans i18nKey=\"common.preview\" />}</Text></ButtonError></AutoColumn>;\n  const owner = useSingleCallResult(tokenId ? positionManager : null, \"ownerOf\", [tokenId]).result?.[0];\n  const ownsNFT = addressesAreEquivalent(owner, account.address) || addressesAreEquivalent(existingPositionDetails?.operator, account.address);\n  const showOwnershipWarning = Boolean(hasExistingPosition && account.address && !ownsNFT);\n  const showBlastRebasingWarning = account.chainId === UniverseChainId.Blast && (!!currencyIdA && BLAST_REBASING_TOKENS.includes(currencyIdA) || !!currencyIdB && BLAST_REBASING_TOKENS.includes(currencyIdB));\n  const showBlastRebasingModal = useAtomValue(blastRebasingAlertAtom) && showBlastRebasingWarning;\n  const updateShowBlastRebasingModal = useUpdateAtom(blastRebasingAlertAtom);\n  const handleBlastModalContinue = useCallback(() => {\n    updateShowBlastRebasingModal(false);\n  }, [updateShowBlastRebasingModal]);\n  const outOfSync = useIsPoolOutOfSync(price);\n  return <><Helmet><title>{t(\"pool.addLiquidity.seoTitle\", {\n    tokenPair: quoteCurrency?.symbol && baseCurrency?.symbol ? `${quoteCurrency.symbol}/${baseCurrency.symbol}` : quoteCurrency?.symbol ?? baseCurrency?.symbol ?? \"pools\",\n    chain: getChainLabel(isUniverseChainId(account.chainId) ? account.chainId : UniverseChainId.Mainnet)\n  })}</title></Helmet><ScrollablePage><TransactionConfirmationModal\n    isOpen={showConfirm}\n    onDismiss={handleDismissConfirmation}\n    attemptingTxn={attemptingTxn}\n    hash={txHash}\n    reviewContent={() => <ConfirmationModalContent\n      title={<Trans i18nKey=\"common.addLiquidity\" />}\n      onDismiss={handleDismissConfirmation}\n      topContent={() => <Review\n        parsedAmounts={parsedAmounts}\n        position={position}\n        existingPosition={existingPosition}\n        priceLower={priceLower}\n        priceUpper={priceUpper}\n        outOfRange={outOfRange}\n        ticksAtLimit={ticksAtLimit}\n      />}\n      bottomContent={() => <ButtonPrimary style={{ marginTop: \"1rem\" }} onClick={onAdd}><Text fontWeight=\"$medium\" fontSize={20} color=\"$neutralContrast\"><Trans i18nKey=\"common.add.label\" /></Text></ButtonPrimary>}\n    />}\n    pendingText={pendingText}\n  /><StyledBodyWrapper $hasExistingPosition={hasExistingPosition}><AddRemoveTabs\n    creating={false}\n    adding={true}\n    positionID={tokenId}\n    autoSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE}\n    showBackLink={!hasExistingPosition}\n  >{!hasExistingPosition && <Row justify=\"flex-end\" style={{ width: \"fit-content\", minWidth: \"fit-content\" }}><MediumOnly><ButtonText onClick={clearAll}><Text color=\"$accent1\" fontSize=\"12px\"><Trans i18nKey=\"tokens.selector.button.clear\" /></Text></ButtonText></MediumOnly></Row>}</AddRemoveTabs><Wrapper><ResponsiveTwoColumns wide={!hasExistingPosition}><AutoColumn gap=\"lg\">{!hasExistingPosition && <><AutoColumn gap=\"md\">{outOfSync && <RowBetween paddingBottom=\"20px\"><OutOfSyncWarning /></RowBetween>}{isTaxed && <RowBetween paddingBottom=\"20px\"><TokenTaxV3Warning /></RowBetween>}<RowBetween paddingBottom=\"20px\"><ThemedText.DeprecatedLabel><Trans i18nKey=\"pool.selectPair\" /></ThemedText.DeprecatedLabel></RowBetween><RowBetween gap=\"md\"><CurrencyInputPanel\n    value={formattedAmounts[Field.CURRENCY_A]}\n    onUserInput={onFieldAInput}\n    hideInput\n    onMax={() => {\n      onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? \"\");\n    }}\n    onCurrencySelect={handleCurrencyASelect}\n    showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n    currency={currencies[Field.CURRENCY_A] ?? null}\n    id=\"add-liquidity-input-tokena\"\n  /><CurrencyInputPanel\n    value={formattedAmounts[Field.CURRENCY_B]}\n    hideInput\n    onUserInput={onFieldBInput}\n    onCurrencySelect={handleCurrencyBSelect}\n    onMax={() => {\n      onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? \"\");\n    }}\n    showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n    currency={currencies[Field.CURRENCY_B] ?? null}\n    id=\"add-liquidity-input-tokenb\"\n  /></RowBetween>{showBlastRebasingWarning && <BlastRebasingAlert />}<FeeSelector\n    disabled={!quoteCurrency || !baseCurrency}\n    feeAmount={feeAmount}\n    handleFeePoolSelect={handleFeePoolSelect}\n    currencyA={baseCurrency ?? void 0}\n    currencyB={quoteCurrency ?? void 0}\n  /></AutoColumn>{\" \"}</>}{hasExistingPosition && existingPosition && <PositionPreview\n    position={existingPosition}\n    title={<Trans i18nKey=\"pool.selectedRange\" />}\n    inRange={!outOfRange}\n    ticksAtLimit={ticksAtLimit}\n    showBlastAlert={showBlastRebasingWarning}\n  />}</AutoColumn>{!hasExistingPosition && <><DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}><RowBetween><ThemedText.DeprecatedLabel><Trans i18nKey=\"migrate.setRange\" /></ThemedText.DeprecatedLabel>{Boolean(baseCurrency && quoteCurrency) && <RowFixed gap=\"8px\"><PresetsButtons onSetFullRange={handleSetFullRange} /><RateToggle\n    currencyA={baseCurrency}\n    currencyB={quoteCurrency}\n    handleRateToggle={() => {\n      if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n        onLeftRangeInput(\n          (invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? \"\"\n        );\n        onRightRangeInput(\n          (invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? \"\"\n        );\n        onFieldAInput(formattedAmounts[Field.CURRENCY_B] ?? \"\");\n      }\n      navigate(\n        `/add/${currencyIdB}/${currencyIdA}${feeAmount ? \"/\" + feeAmount : \"\"}`\n      );\n    }}\n  /></RowFixed>}</RowBetween><RangeSelector\n    priceLower={priceLower}\n    priceUpper={priceUpper}\n    getDecrementLower={getDecrementLower}\n    getIncrementLower={getIncrementLower}\n    getDecrementUpper={getDecrementUpper}\n    getIncrementUpper={getIncrementUpper}\n    onLeftRangeInput={onLeftRangeInput}\n    onRightRangeInput={onRightRangeInput}\n    currencyA={baseCurrency}\n    currencyB={quoteCurrency}\n    feeAmount={feeAmount}\n    ticksAtLimit={ticksAtLimit}\n  />{outOfRange && <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\"><RowBetween><AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" /><Text color=\"$yellow600\" ml=\"12px\" fontSize=\"12px\"><Trans i18nKey=\"migrate.positionNoFees\" /></Text></RowBetween></YellowCard>}{invalidRange && <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\"><RowBetween><AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" /><Text color=\"$yellow600\" ml=\"12px\" fontSize=\"12px\"><Trans i18nKey=\"migrate.invalidRange\" /></Text></RowBetween></YellowCard>}</DynamicSection><DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>{!noLiquidity ? <>{Boolean(price && baseCurrency && quoteCurrency && !noLiquidity) && <AutoColumn gap=\"2px\" style={{ marginTop: \"0.5rem\" }}><ThemedText.DeprecatedMain fontWeight={535} fontSize={12} color=\"text1\"><Trans i18nKey=\"common.currentPrice.label\" /></ThemedText.DeprecatedMain><ThemedText.DeprecatedBody color=\"text2\" fontSize={12}><Trans\n    i18nKey=\"liquidityPool.positions.price.formatted\"\n    components={{\n      amountWithSymbol: <ThemedText.DeprecatedBody fontWeight={535} fontSize={20} color=\"text1\">{price && <HoverInlineText maxCharacters={20} text={formattedPrice} />}</ThemedText.DeprecatedBody>,\n      outputToken: <ThemedText.DeprecatedBody color=\"text2\" fontSize={12}>{baseCurrency?.symbol ?? \"\"}</ThemedText.DeprecatedBody>\n    }}\n  /></ThemedText.DeprecatedBody></AutoColumn>}<LiquidityChartRangeInput\n    currencyA={baseCurrency ?? void 0}\n    currencyB={quoteCurrency ?? void 0}\n    feeAmount={feeAmount}\n    ticksAtLimit={ticksAtLimit}\n    price={price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : void 0}\n    priceLower={priceLower}\n    priceUpper={priceUpper}\n    onLeftRangeInput={onLeftRangeInput}\n    onRightRangeInput={onRightRangeInput}\n    interactive={!hasExistingPosition}\n    protocolVersion={ProtocolVersion.V3}\n    tickSpacing={feeAmount ? TICK_SPACINGS[feeAmount] : void 0}\n  /></> : <AutoColumn gap=\"md\">{noLiquidity && <BlueCard\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      padding: \"1rem 1rem\"\n    }}\n  ><ThemedText.DeprecatedBody\n    fontSize={14}\n    style={{ fontWeight: 535 }}\n    textAlign=\"left\"\n    color={theme.accent1}\n  ><Trans i18nKey=\"pool.mustBeInitialized\" /></ThemedText.DeprecatedBody></BlueCard>}<OutlineCard padding=\"12px\"><StyledInput\n    className=\"start-price-input\"\n    value={startPriceTypedValue}\n    onUserInput={onStartPriceInput}\n  /></OutlineCard><RowBetween\n    style={{\n      backgroundColor: theme.surface1,\n      padding: \"12px\",\n      borderRadius: \"12px\"\n    }}\n  ><ThemedText.DeprecatedMain><Trans i18nKey=\"pool.startingPrice\" values={{ sym: baseCurrency?.symbol }} /></ThemedText.DeprecatedMain><ThemedText.DeprecatedMain>{price ? <ThemedText.DeprecatedMain><RowFixed><HoverInlineText\n    maxCharacters={20}\n    text={invertPrice ? price?.invert()?.toSignificant(8) : price?.toSignificant(8)}\n  />{\" \"}<span style={{ marginLeft: \"4px\" }}><Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{ symbolA: quoteCurrency?.symbol, symbolB: baseCurrency?.symbol }}\n  /></span></RowFixed></ThemedText.DeprecatedMain> : \"-\"}</ThemedText.DeprecatedMain></RowBetween></AutoColumn>}</DynamicSection></>}<div><DynamicSection disabled={invalidPool || invalidRange || noLiquidity && !startPriceTypedValue}><AutoColumn gap=\"md\"><ThemedText.DeprecatedLabel>{hasExistingPosition ? <Trans i18nKey=\"pool.addMoreLiquidity\" /> : <Trans i18nKey=\"pool.depositAmounts\" />}</ThemedText.DeprecatedLabel><CurrencyInputPanel\n    value={formattedAmounts[Field.CURRENCY_A]}\n    onUserInput={onFieldAInput}\n    onMax={() => {\n      onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? \"\");\n    }}\n    showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n    currency={currencies[Field.CURRENCY_A] ?? null}\n    id=\"add-liquidity-input-tokena\"\n    fiatValue={currencyAFiat}\n    locked={depositADisabled}\n  /><CurrencyInputPanel\n    value={formattedAmounts[Field.CURRENCY_B]}\n    onUserInput={onFieldBInput}\n    onMax={() => {\n      onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? \"\");\n    }}\n    showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n    fiatValue={currencyBFiat}\n    currency={currencies[Field.CURRENCY_B] ?? null}\n    id=\"add-liquidity-input-tokenb\"\n    locked={depositBDisabled}\n  /></AutoColumn></DynamicSection></div><Buttons /></ResponsiveTwoColumns></Wrapper></StyledBodyWrapper>{showOwnershipWarning && <OwnershipWarning ownerAddress={owner} />}{addIsUnsupported && <UnsupportedCurrencyFooter\n    show={addIsUnsupported}\n    currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n  />}</ScrollablePage><SwitchLocaleLink />{showBlastRebasingModal && <BlastRebasingModal currencyIdA={currencyIdA} currencyIdB={currencyIdB} onContinue={handleBlastModalContinue} />}</>;\n}\n","\"use strict\";\nimport { Position } from \"@uniswap/v3-sdk\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { usePool } from \"hooks/usePools\";\nexport function useDerivedPositionInfo(positionDetails) {\n  const currency0 = useCurrency(positionDetails?.token0);\n  const currency1 = useCurrency(positionDetails?.token1);\n  const [, pool] = usePool(currency0 ?? void 0, currency1 ?? void 0, positionDetails?.fee);\n  let position = void 0;\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper\n    });\n  }\n  return {\n    position,\n    pool: pool ?? void 0\n  };\n}\n","\"use strict\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useContract } from \"hooks/useContract\";\nimport useIsArgentWallet from \"hooks/useIsArgentWallet\";\nimport ArgentWalletContractABI from \"uniswap/src/abis/argent-wallet-contract.json\";\nexport function useArgentWalletContract() {\n  const account = useAccount();\n  const isArgentWallet = useIsArgentWallet();\n  return useContract(\n    isArgentWallet ? account.address : void 0,\n    ArgentWalletContractABI,\n    true\n  );\n}\n","\"use strict\";\nimport { checkIsNative } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport AddLiquidity from \"pages/AddLiquidityV3/index\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nexport default function AddLiquidityV3WithTokenRedirects() {\n  const isLPRedesignEnabled = useFeatureFlag(FeatureFlags.LPRedesign);\n  const { currencyIdA, currencyIdB, tokenId } = useParams();\n  const { chainId: connectedChainId } = useAccount();\n  const { defaultChainId } = useEnabledChains();\n  if (isLPRedesignEnabled) {\n    if (tokenId) {\n      const chainName = getChainInfo(connectedChainId ?? defaultChainId)?.urlParam;\n      return <Navigate to={`/positions/v3/${chainName}/${tokenId}`} replace />;\n    }\n    const url = new URL(\"/positions/create/v3\", window.location.origin);\n    if (currencyIdA) {\n      url.searchParams.append(\"currencyA\", currencyIdA);\n    }\n    if (currencyIdB && currencyIdA?.toLowerCase() !== currencyIdB?.toLowerCase()) {\n      url.searchParams.append(\"currencyB\", currencyIdB);\n    }\n    return <Navigate to={url.pathname + url.search} replace />;\n  }\n  const isETHOrWETHA = checkIsNative(currencyIdA) || connectedChainId !== void 0 && currencyIdA === WRAPPED_NATIVE_CURRENCY[connectedChainId]?.address;\n  const isETHOrWETHB = checkIsNative(currencyIdB) || connectedChainId !== void 0 && currencyIdB === WRAPPED_NATIVE_CURRENCY[connectedChainId]?.address;\n  if (currencyIdA && currencyIdB && (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || isETHOrWETHA && isETHOrWETHB)) {\n    return <Navigate to={`/add/${currencyIdA}`} replace />;\n  }\n  return <AddLiquidity />;\n}\n"],"names":["DetailsFooter","styled","div","theme","neutral2","surface2","Z_INDEX","deprecated_zero","show","StyledButtonEmpty","ButtonEmpty","AddressText","Text","accent1","deprecated_mediaWidth","deprecated_upToSmall","UnsupportedCurrencyFooter","currencies","chainId","useAccount","showDetails","setShowDetails","useState","tokens","map","currency","wrapped","Modal","name","ModalName","UnsupportedCurrency","isModalOpen","onClose","padding","Card","AutoColumn","gap","RowBetween","ThemedText","DeprecatedMediumHeader","Trans","i18nKey","CloseIcon","onClick","data-testid","token","UnsupportedTokenCard","address","concat","DeprecatedBody","fontWeight","color","currencyInfo","useCurrencyInfo","isSpam","safetyLevel","SafetyLevel","Verified","OutlineCard","AutoRow","align","CurrencyLogo","size","symbol","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","shortenAddress","StyledAlertIcon","AlertTriangleFilled","AlertContainer","Row","AlertIconContainer","surface3","StyledLearnMore","BlastRebasingModal","currencyIdA","currencyIdB","onContinue","navigate","useNavigate","Dialog","isVisible","icon","title","HeadlineMedium","fontSize","description","body","BodyPrimary","lineHeight","onCancel","buttonsConfig","left","right","type","DialogButtonType","Accent","TextWrapper","SubHeaderSmall","$expanded","ReadMore","ButtonText","StyledChevronDown","ChevronDown","transition","duration","timing","fast","inOut","BlastRebasingAlert","t","useTranslation","expanded","setExpanded","handleSetExpanded","useCallback","Column","SubHeader","PositionPreview","position","inRange","baseCurrencyDefault","ticksAtLimit","showBlastAlert","currency0","currency1","baseCurrency","quoteCurrency","formatCurrencyAmount","formatDelta","formatPrice","formatTickPrice","useFormatter","unwrappedToken","pool","token0","token1","setBaseCurrency","sorted","price","priceOf","priceLower","token0PriceLower","token0PriceUpper","invert","priceUpper","handleRateChange","removed","liquidity","JSBI","style","marginTop","marginBottom","RowFixed","DoubleCurrencyLogo","DeprecatedLabel","ml","RangeBadge","LightCard","mr","amount","amount0","amount1","Break","fee","BIPS_BASE","DeprecatedMain","RateToggle","currencyA","currencyB","handleRateToggle","width","justify","textAlign","atLimit","direction","Bound","LOWER","values","symbolA","symbolB","mt","sym","UPPER","NumberType","TokenTx","Button","ButtonOutlined","attrs","$borderRadius","neutral1","PresetsButtons","onSetFullRange","Container","StyledColumn","IconContainer","critical2","PoolWarning","subtitle","link","height","iconSizes","icon20","variant","OutOfSyncWarning","uniswapUrls","helpArticleUrls","impermanentLoss","ExplainerText","TitleRow","deprecated_accentWarning","Wrapper","deprecated_accentWarningSoft","ownerAddress","AlertTriangle","marginRight","TokenTaxV3Warning","feeOnTransferHelp","Review","outOfRange","ERC20_INTERFACE","Interface","constant","inputs","outputs","payable","stateMutability","approveAmountCalldata","spender","isToken","Error","approveData","encodeFunctionData","toHex","quotient","to","data","value","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","Percent","blastRebasingAlertAtom","atomWithStorage","StyledBodyWrapper","BodyWrapper","$hasExistingPosition","BLAST_REBASING_TOKENS","AddLiquidityWrapper","useIsSupportedChainId","AddLiquidity","PositionPageUnsupportedContent","parsedAmounts","useSingleCallResult","existingPositionDetails","feeAmount","feeAmountFromUrl","tokenId","useParams","account","signer","useEthersSigner","useTheme","trace","useTrace","accountDrawer","useAccountDrawer","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","loading","positionLoading","useV3PositionFromTokenId","BigNumber","from","hasExistingPosition","existingPosition","positionDetails","useCurrency","usePool","Position","toString","tickLower","tickUpper","useDerivedPositionInfo","Object","FeeAmount","includes","parseFloat","equals","independentField","typedValue","startPriceTypedValue","useV3MintState","ticks","dependentField","pricesAtTicks","pricesAtLimit","currencyBalances","noLiquidity","errorMessage","invalidPool","invalidRange","depositADisabled","depositBDisabled","invertPrice","isTaxed","useV3DerivedMintInfo","formattedPrice","onFieldAInput","onFieldBInput","onLeftRangeInput","onRightRangeInput","onStartPriceInput","useV3MintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","getDeadline","useGetTransactionDeadline","txHash","setTxHash","formattedAmounts","toSignificant","usdcValues","Field","CURRENCY_A","useUSDCValue","CURRENCY_B","maxAmounts","reduce","accumulator","field","maxAmountSpend","atMaxAmounts","equalTo","argentWalletContract","isArgentWallet","useIsArgentWallet","useContract","ArgentWalletContractABI","useArgentWalletContract","approvalA","approveACallback","useApproveCallback","status","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","approvalB","approveBCallback","allowedSlippage","useUserSlippageToleranceWithDefault","ZERO_PERCENT","usdcValueCurrencyA","usdcValueCurrencyB","currencyAFiat","useMemo","isLoading","currencyBFiat","onAdd","deadline","useNative","isNative","calldata","NonfungiblePositionManager","addCallParameters","slippageTolerance","recipient","createPool","txn","amountA","amountB","batch","interface","connectedChainId","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","transactionInfo","TransactionType","ADD_LIQUIDITY_V3_POOL","baseCurrencyId","currencyId","quoteCurrencyId","Boolean","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","ADD_LIQUIDITY_SUBMITTED","getLPBaseAnalyticsProperties","version","ProtocolVersion","V3","poolId","PoolCache","getPoolAddress","V3_CORE_FACTORY_ADDRESSES","currency0AmountUsd","currency1AmountUsd","createPosition","transaction_hash","catch","error","code","logger","warn","handleCurrencySelect","currencyNew","currencyIdOther","currencyIdNew","WRAPPED_NATIVE_CURRENCY","isETHOrWETHNew","isETHOrWETHOther","handleCurrencyASelect","currencyANew","idA","idB","handleCurrencyBSelect","currencyBNew","handleFeePoolSelect","newFeeAmount","handleDismissConfirmation","addIsUnsupported","useIsSwapUnsupported","clearAll","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","useRangeHopCallbacks","showApprovalA","ApprovalState","APPROVED","showApprovalB","pendingText","searchParams","setSearchParams","useSearchParams","handleSetFullRange","minPrice","set","maxPrice","oldSearchParams","usePrevious","useEffect","get","oldMinPrice","isNaN","oldMaxPrice","Buttons","ButtonPrimary","disabled","mb","textTransform","Trace","logPress","eventOnTrigger","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","open","ConnectWalletButtonText","NOT_APPROVED","PENDING","Dots","tokenSymbol","ButtonError","owner","result","ownsNFT","addressesAreEquivalent","operator","showOwnershipWarning","showBlastRebasingWarning","UniverseChainId","Blast","showBlastRebasingModal","useAtomValue","updateShowBlastRebasingModal","useUpdateAtom","handleBlastModalContinue","outOfSync","useIsPoolOutOfSync","Helmet","tokenPair","chain","getChainLabel","isUniverseChainId","Mainnet","ScrollablePage","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","topContent","bottomContent","AddRemoveTabs","creating","adding","positionID","autoSlippage","showBackLink","minWidth","MediumOnly","ResponsiveTwoColumns","wide","paddingBottom","CurrencyInputPanel","onUserInput","hideInput","onMax","toExact","onCurrencySelect","showMaxButton","id","FeeSelector","DynamicSection","RangeSelector","YellowCard","stroke","deprecated_yellow3","BlueCard","display","flexDirection","alignItems","StyledInput","className","backgroundColor","surface1","borderRadius","HoverInlineText","maxCharacters","text","span","marginLeft","components","amountWithSymbol","outputToken","LiquidityChartRangeInput","interactive","protocolVersion","tickSpacing","TICK_SPACINGS","fiatValue","locked","OwnershipWarning","SwitchLocaleLink","AddLiquidityV3WithTokenRedirects","isLPRedesignEnabled","useFeatureFlag","FeatureFlags","LPRedesign","defaultChainId","useEnabledChains","getChainInfo","chainName","urlParam","Navigate","replace","url","URL","window","location","origin","append","toLowerCase","pathname","search","isETHOrWETHA","checkIsNative","isETHOrWETHB"],"sourceRoot":""}