{"version":3,"file":"static/js/9713.c82c8d2c.chunk.js","mappings":"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","sources":["pages/Pool/Positions/V2PositionPage.tsx"],"sourcesContent":["\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { LiquidityPositionInfo, LiquidityPositionInfoLoader } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { useGetPoolTokenPercentage } from \"components/Liquidity/hooks\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePositionOwnerV2 } from \"hooks/usePositionOwner\";\nimport NotFound from \"pages/NotFound\";\nimport { HeaderButton } from \"pages/Pool/Positions/PositionPage\";\nimport { TextLoader } from \"pages/Pool/Positions/shared\";\nimport { useMemo } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { MultichainContextProvider } from \"state/multichain/MultichainContext\";\nimport { usePendingLPTransactionsChangeListener } from \"state/transactions/hooks\";\nimport { Button, Circle, Flex, Main, Shine, Text, styled } from \"ui/src\";\nimport { useGetPositionQuery } from \"uniswap/src/data/rest/getPosition\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlagWithLoading } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/swap/hooks/useUSDCPrice\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { useAccount } from \"wagmi\";\nconst BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: \"100%\",\n  maxWidth: 600,\n  // intentionally less than the other LP screens\n  zIndex: \"$default\",\n  py: \"$spacing24\",\n  px: \"$spacing40\",\n  $lg: {\n    px: \"$padding20\"\n  }\n});\nfunction RowLoader({ withIcon }) {\n  return <Flex row width=\"100%\" justifyContent=\"space-between\"><TextLoader variant=\"subheading2\" width={120} />{withIcon ? <Flex row alignItems=\"center\" gap=\"$gap4\"><TextLoader variant=\"body2\" width={78} /><Circle size={24} backgroundColor=\"$surface3\" /></Flex> : <TextLoader variant=\"body2\" width={72} />}</Flex>;\n}\nexport default function V2PositionPageWrapper() {\n  const chainId = useChainIdFromUrlParam();\n  return <MultichainContextProvider initialChainId={chainId}><V2PositionPage /></MultichainContextProvider>;\n}\nfunction V2PositionPage() {\n  const { pairAddress } = useParams();\n  const chainId = useChainIdFromUrlParam();\n  const account = useAccount();\n  const {\n    data,\n    isLoading: positionLoading,\n    refetch\n  } = useGetPositionQuery({\n    owner: account?.address ?? ZERO_ADDRESS,\n    protocolVersion: ProtocolVersion.V2,\n    pairAddress,\n    chainId: chainId ?? account.chainId\n  });\n  const position = data?.position;\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const { t } = useTranslation();\n  usePendingLPTransactionsChangeListener(refetch);\n  const { value: lpRedesignEnabled, isLoading } = useFeatureFlagWithLoading(FeatureFlags.LPRedesign);\n  const { currency0Amount, currency1Amount, liquidityAmount } = positionInfo ?? {};\n  const token0USDValue = useUSDCValue(currency0Amount);\n  const token1USDValue = useUSDCValue(currency1Amount);\n  const poolTokenPercentage = useGetPoolTokenPercentage(positionInfo);\n  const liquidityTokenAddress = positionInfo?.liquidityToken?.isToken ? positionInfo.liquidityToken.address : null;\n  const isOwner = usePositionOwnerV2(account?.address, liquidityTokenAddress, positionInfo?.chainId);\n  if (!isLoading && !lpRedesignEnabled) {\n    return <Navigate to=\"/pools\" replace />;\n  }\n  if (!positionLoading && (!positionInfo || !liquidityAmount || !currency0Amount || !currency1Amount)) {\n    return <NotFound\n      title={<Text variant=\"heading2\">{t(\"position.notFound\")}</Text>}\n      subtitle={<Flex centered maxWidth=\"75%\" mt=\"$spacing20\"><Text color=\"$neutral2\" variant=\"heading3\" textAlign=\"center\">{t(\"position.notFound.description\")}</Text></Flex>}\n      actionButton={<Button onPress={() => navigate(\"/positions\")}>{t(\"common.backToPositions\")}</Button>}\n    />;\n  }\n  return <><Helmet><title>{t(`liquidityPool.positions.page.title`, {\n    quoteSymbol: currency1Amount?.currency.symbol,\n    baseSymbol: currency0Amount?.currency.symbol\n  })}</title></Helmet><BodyWrapper><Flex gap=\"$gap20\" width=\"100%\"><Flex row width=\"100%\" justifyContent=\"flex-start\" alignItems=\"center\"><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to=\"/positions\"><Trans i18nKey=\"pool.positions.title\" /> <ChevronRight size={14} /></BreadcrumbNavLink>{positionInfo && <Text variant=\"subheading2\">{shortenAddress(positionInfo.poolId)}</Text>}</BreadcrumbNavContainer></Flex>{positionLoading || !positionInfo ? <Shine><LiquidityPositionInfoLoader hideStatus /></Shine> : <LiquidityPositionInfo positionInfo={positionInfo} />}{isOwner && <Flex row gap=\"$gap12\" alignItems=\"center\" maxWidth=\"100%\" flexWrap=\"wrap\"><HeaderButton\n    disabled={positionLoading}\n    emphasis=\"secondary\"\n    onPress={() => {\n      navigate(\"/migrate/v2\");\n    }}\n  ><Text variant=\"buttonLabel2\" color=\"$neutral1\"><Trans i18nKey=\"common.migrate.v3\" /></Text></HeaderButton><HeaderButton\n    disabled={positionLoading}\n    emphasis=\"secondary\"\n    onPress={() => {\n      dispatch(setOpenModal({ name: ModalName.AddLiquidity, initialState: positionInfo }));\n    }}\n  ><Text variant=\"buttonLabel2\" color=\"$neutral1\"><Trans i18nKey=\"common.addLiquidity\" /></Text></HeaderButton><HeaderButton\n    disabled={positionLoading}\n    emphasis=\"primary\"\n    onPress={() => {\n      dispatch(setOpenModal({ name: ModalName.RemoveLiquidity, initialState: positionInfo }));\n    }}\n  ><Text variant=\"buttonLabel2\" color=\"$surface1\"><Trans i18nKey=\"pool.removeLiquidity\" /></Text></HeaderButton></Flex>}<Flex borderColor=\"$surface3\" borderWidth={1} p=\"$spacing24\" gap=\"$gap12\" borderRadius=\"$rounded20\">{positionLoading || !currency0Amount || !currency1Amount ? <Shine><Flex gap=\"$gap12\"><RowLoader /><RowLoader withIcon /><RowLoader withIcon /><RowLoader withIcon /><RowLoader /></Flex></Shine> : <><Flex row width=\"100%\" justifyContent=\"space-between\"><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"position.currentValue\" /></Text><Text variant=\"body2\">{token0USDValue && token1USDValue ? formatCurrencyAmount({\n    value: token0USDValue.add(token1USDValue),\n    type: NumberType.FiatStandard\n  }) : \"-\"}</Text></Flex><Flex row width=\"100%\" justifyContent=\"space-between\"><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.totalTokens\" /></Text><Flex row gap=\"$gap8\"><Text variant=\"body2\">{formatCurrencyAmount({ value: liquidityAmount, type: NumberType.TokenNonTx })}</Text><DoubleCurrencyAndChainLogo\n    chainId={currency0Amount.currency.chainId}\n    currencies={[currency0Amount?.currency, currency1Amount?.currency]}\n    size={24}\n  /></Flex></Flex><Flex row width=\"100%\" justifyContent=\"space-between\"><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"position.depositedCurrency\"\n    values={{ currencySymbol: currency0Amount.currency.symbol }}\n  /></Text><Flex row gap=\"$gap8\"><Text variant=\"body2\">{formatCurrencyAmount({ value: currency0Amount, type: NumberType.TokenNonTx })}</Text><DoubleCurrencyAndChainLogo\n    chainId={currency0Amount?.currency.chainId}\n    currencies={[currency0Amount?.currency]}\n    size={24}\n  /></Flex></Flex><Flex row width=\"100%\" justifyContent=\"space-between\"><Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n    i18nKey=\"position.depositedCurrency\"\n    values={{ currencySymbol: currency1Amount.currency.symbol }}\n  /></Text><Flex row gap=\"$gap8\"><Text variant=\"body2\">{formatCurrencyAmount({ value: currency1Amount, type: NumberType.TokenNonTx })}</Text><DoubleCurrencyAndChainLogo\n    chainId={currency1Amount?.currency.chainId}\n    currencies={[currency1Amount?.currency]}\n    size={24}\n  /></Flex></Flex><Flex row width=\"100%\" justifyContent=\"space-between\"><Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"addLiquidity.shareOfPool\" /></Text><Text variant=\"body2\">{formatPercent(poolTokenPercentage?.toSignificant(6))}</Text></Flex></>}</Flex></Flex></BodyWrapper></>;\n}\n"],"names":["BodyWrapper","styled","Main","backgroundColor","display","flexDirection","alignItems","width","maxWidth","zIndex","py","px","$lg","RowLoader","withIcon","Flex","row","justifyContent","TextLoader","variant","gap","Circle","size","V2PositionPageWrapper","chainId","useChainIdFromUrlParam","MultichainContextProvider","initialChainId","V2PositionPage","account","data","positionInfo","currency1Amount","currency0Amount","poolTokenPercentage","pairAddress","useParams","useAccount","isLoading","positionLoading","refetch","useGetPositionQuery","owner","address","ZERO_ADDRESS","protocolVersion","ProtocolVersion","V2","position","useMemo","parseRestPosition","dispatch","useAppDispatch","navigate","useNavigate","formatCurrencyAmount","formatPercent","useLocalizationContext","t","useTranslation","usePendingLPTransactionsChangeListener","value","lpRedesignEnabled","useFeatureFlagWithLoading","FeatureFlags","LPRedesign","liquidityAmount","token0USDValue","useUSDCValue","token1USDValue","useGetPoolTokenPercentage","liquidityTokenAddress","liquidityToken","isToken","isOwner","usePositionOwnerV2","Helmet","title","quoteSymbol","currency","symbol","baseSymbol","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","Trans","i18nKey","ChevronRight","Text","shortenAddress","poolId","Shine","LiquidityPositionInfoLoader","hideStatus","LiquidityPositionInfo","flexWrap","HeaderButton","disabled","emphasis","onPress","color","setOpenModal","name","ModalName","AddLiquidity","initialState","RemoveLiquidity","borderColor","borderWidth","p","borderRadius","add","type","NumberType","FiatStandard","TokenNonTx","DoubleCurrencyAndChainLogo","currencies","values","currencySymbol","toSignificant","NotFound","subtitle","centered","mt","textAlign","actionButton","Button","Navigate","replace"],"sourceRoot":""}