{"version":3,"file":"static/js/6539.8b0b2cbb.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/plus.js","components/Charts/LiquidityChart/renderer.tsx","components/Charts/LiquidityChart/liquidity-bar-series.tsx","components/Charts/LiquidityChart/index.tsx","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Plus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"12\",y1:\"5\",x2:\"12\",y2:\"19\"}),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Plus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Plus.displayName=\"Plus\";export default Plus;","\"use strict\";\nimport { calculateColumnPositionsInPlace, positionsBox } from \"components/Charts/VolumeChart/utils\";\nimport { roundRect } from \"components/Charts/utils\";\nexport class LiquidityBarSeriesRenderer {\n  _data = null;\n  _options;\n  constructor(props) {\n    this._options = props;\n    this._options.hoveredTick = props.activeTick;\n  }\n  draw(target, priceConverter) {\n    target.useBitmapCoordinateSpace((scope) => this._drawImpl(scope, priceConverter));\n  }\n  update(data, options) {\n    this._data = data;\n    this._options = { ...this._options, ...options };\n  }\n  _drawImpl(renderingScope, priceToCoordinate) {\n    if (this._data === null || this._data.bars.length === 0 || this._data.visibleRange === null || this._options === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    const bars = this._data.bars.map((bar) => {\n      return {\n        x: bar.x,\n        y: priceToCoordinate(bar.originalData.liquidity) ?? 0,\n        tick: bar.originalData.tick\n      };\n    });\n    calculateColumnPositionsInPlace(\n      bars,\n      this._data.barSpacing,\n      renderingScope.horizontalPixelRatio,\n      this._data.visibleRange.from,\n      this._data.visibleRange.to\n    );\n    const zeroY = priceToCoordinate(0) ?? 0;\n    ctx.fillStyle = this._options.tokenAColor;\n    for (let i = this._data.visibleRange.from; i < this._data.visibleRange.to; i++) {\n      const stack = bars[i];\n      const column = stack.column;\n      const isCurrentTick = this._options.activeTick === stack.tick;\n      const isHoveredTick = this._options.hoveredTick === stack.tick;\n      if (!column) {\n        return;\n      }\n      const width = Math.min(\n        Math.max(renderingScope.horizontalPixelRatio, column.right - column.left),\n        this._data.barSpacing * renderingScope.horizontalPixelRatio\n      );\n      const margin = 0.3 * width;\n      const widthWithMargin = width - margin * 2;\n      const totalBox = positionsBox(zeroY, stack.y, renderingScope.verticalPixelRatio);\n      if (isHoveredTick) {\n        const highlightOffset = 0.3 * ctx.canvas.height;\n        const highlightLength = ctx.canvas.height - highlightOffset;\n        ctx.fillStyle = this._options.highlightColor;\n        roundRect(ctx, column.left + margin, highlightOffset, widthWithMargin, highlightLength, 8);\n        ctx.globalAlpha = 1;\n      } else {\n        ctx.globalAlpha = 0.4;\n      }\n      if (isCurrentTick) {\n        ctx.fillStyle = this._options.tokenBColor;\n      } else if (this._options.activeTick === void 0) {\n        ctx.fillStyle = this._options.color ?? \"white\";\n      } else if (this._options.activeTick > stack.tick) {\n        ctx.fillStyle = this._options.tokenBColor;\n      } else if (this._options.activeTick < stack.tick) {\n        ctx.fillStyle = this._options.tokenAColor;\n      }\n      roundRect(ctx, column.left + margin, totalBox.position, widthWithMargin, totalBox.length, 8);\n      ctx.globalAlpha = 1;\n      if (isCurrentTick && this._options.activeTickProgress) {\n        ctx.globalCompositeOperation = \"source-atop\";\n        const activeRangeAdjustedHeight = totalBox.length * this._options.activeTickProgress;\n        const activeRangeAdjustedPosition = totalBox.position + (totalBox.length - activeRangeAdjustedHeight);\n        ctx.fillStyle = this._options.tokenAColor;\n        ctx.beginPath();\n        ctx.fillRect(column.left, activeRangeAdjustedPosition, width, activeRangeAdjustedHeight);\n        ctx.globalCompositeOperation = \"source-over\";\n      }\n    }\n  }\n}\n","\"use strict\";\nimport {\n  LiquidityBarSeriesRenderer\n} from \"components/Charts/LiquidityChart/renderer\";\nimport {\n  customSeriesDefaultOptions\n} from \"lightweight-charts\";\nexport class LiquidityBarSeries {\n  _renderer;\n  _tokenAColor;\n  _tokenBColor;\n  _highlightColor;\n  constructor(props) {\n    this._tokenAColor = props.tokenAColor;\n    this._renderer = new LiquidityBarSeriesRenderer(props);\n    this._tokenBColor = props.tokenBColor;\n    this._highlightColor = props.highlightColor;\n  }\n  priceValueBuilder(plotRow) {\n    return [0, plotRow.liquidity];\n  }\n  isWhitespace(data) {\n    return !data.liquidity;\n  }\n  renderer() {\n    return this._renderer;\n  }\n  update(data, options) {\n    this._renderer.update(data, options);\n  }\n  defaultOptions() {\n    return {\n      ...customSeriesDefaultOptions,\n      tokenAColor: this._tokenAColor,\n      tokenBColor: this._tokenBColor,\n      highlightColor: this._highlightColor\n    };\n  }\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { Pool, TICK_SPACINGS, TickMath, tickToPrice } from \"@uniswap/v3-sdk\";\nimport { ChartModel } from \"components/Charts/ChartModel\";\nimport { LiquidityBarSeries } from \"components/Charts/LiquidityChart/liquidity-bar-series\";\nimport { BigNumber } from \"ethers/lib/ethers\";\nimport { usePoolActiveLiquidity } from \"hooks/usePoolTickData\";\nimport JSBI from \"jsbi\";\nimport { useEffect, useState } from \"react\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport class LiquidityBarChartModel extends ChartModel {\n  series;\n  activeTick;\n  constructor(chartDiv, params) {\n    super(chartDiv, params);\n    this.series = this.api.addCustomSeries(new LiquidityBarSeries(params));\n    this.series.setData(this.data);\n    this.updateOptions(params);\n    this.fitContent();\n  }\n  updateOptions(params) {\n    super.updateOptions(params, {\n      localization: {\n        locale: params.locale\n      },\n      rightPriceScale: {\n        visible: false,\n        borderVisible: false,\n        scaleMargins: {\n          top: 0.35,\n          bottom: 0\n        },\n        autoScale: true\n      },\n      timeScale: {\n        visible: false,\n        fixLeftEdge: true,\n        fixRightEdge: true,\n        borderVisible: false\n      },\n      crosshair: {\n        horzLine: {\n          visible: false,\n          labelVisible: false\n        },\n        vertLine: {\n          visible: false,\n          labelVisible: false\n        }\n      },\n      grid: {\n        vertLines: {\n          visible: false\n        },\n        horzLines: {\n          visible: false\n        }\n      }\n    });\n    const { data, activeTick } = params;\n    this.activeTick = activeTick;\n    if (this.data !== data) {\n      this.data = data;\n      this.series.setData(data);\n      this.fitContent();\n    }\n    this.series.applyOptions({\n      priceFormat: {\n        type: \"volume\"\n      },\n      priceLineVisible: false,\n      lastValueVisible: false\n    });\n    this.series.applyOptions(params);\n  }\n  onSeriesHover(hoverData) {\n    super.onSeriesHover(hoverData);\n    const updatedOptions = { hoveredTick: hoverData?.item.tick ?? this.activeTick };\n    this.series.applyOptions(updatedOptions);\n  }\n  activeTickIndex() {\n    return this.data.findIndex((bar) => bar.tick === this.activeTick);\n  }\n  fitContent() {\n    const length = this.data.length;\n    const activeTickIndex = this.data.findIndex((bar) => bar.tick === this.activeTick);\n    const midPoint = activeTickIndex !== -1 ? activeTickIndex : length / 2;\n    this.api.timeScale().setVisibleLogicalRange({ from: Math.max(midPoint - 50, 0), to: Math.min(midPoint + 50, this.data.length) });\n  }\n}\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1);\nfunction maxAmount(token) {\n  return CurrencyAmount.fromRawAmount(token, MAX_UINT128.toString());\n}\nasync function calculateActiveRangeTokensLocked(token0, token1, feeTier, tick, poolData) {\n  if (!poolData.currentTick || !poolData.sqrtPriceX96 || !poolData.liquidity) {\n    return void 0;\n  }\n  try {\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0)) ? tick.liquidityNet : JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"));\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"))\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet\n      }\n    ];\n    const pool1 = new Pool(\n      token0,\n      token1,\n      feeTier,\n      poolData.sqrtPriceX96,\n      tick.liquidityActive,\n      poolData.currentTick,\n      mockTicks\n    );\n    const bottomOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[0].index);\n    const token1Amount = (await pool1.getOutputAmount(maxAmount(token0), bottomOfRangePrice))[0];\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact());\n    const topOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[1].index);\n    const token0Amount = (await pool1.getOutputAmount(maxAmount(token1), topOfRangePrice))[0];\n    const amount1Locked = parseFloat(tick.sdkPrice.quote(token0Amount).toExact());\n    return { amount0Locked, amount1Locked };\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 };\n  }\n}\nexport async function calculateTokensLocked(token0, token1, feeTier, tick) {\n  try {\n    const tickSpacing = TICK_SPACINGS[feeTier];\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0)) ? tick.liquidityNet : JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"));\n    const sqrtPriceX96 = TickMath.getSqrtRatioAtTick(tick.tick);\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"))\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet\n      }\n    ];\n    const pool = new Pool(token0, token1, Number(feeTier), sqrtPriceX96, tick.liquidityActive, tick.tick, mockTicks);\n    const nextSqrtX96 = TickMath.getSqrtRatioAtTick(tick.tick - tickSpacing);\n    const maxAmountToken0 = CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString());\n    const token1Amount = (await pool.getOutputAmount(maxAmountToken0, nextSqrtX96))[0];\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact());\n    const amount1Locked = parseFloat(token1Amount.toExact());\n    return { amount0Locked, amount1Locked };\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 };\n  }\n}\nexport function useLiquidityBarData({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  poolId\n}) {\n  const { formatNumber, formatPrice } = useFormatter();\n  const activePoolData = usePoolActiveLiquidity({\n    currencyA: tokenA,\n    currencyB: tokenB,\n    feeAmount: feeTier,\n    version,\n    poolId,\n    chainId,\n    tickSpacing: tickSpacing ?? TICK_SPACINGS[feeTier],\n    hooks\n  });\n  const [tickData, setTickData] = useState();\n  useEffect(() => {\n    async function formatData() {\n      const ticksProcessed = activePoolData.data;\n      if (!ticksProcessed) {\n        return;\n      }\n      let activeRangePercentage = void 0;\n      let activeRangeIndex = void 0;\n      const barData = [];\n      for (let index = 0; index < ticksProcessed.length; index++) {\n        const t = ticksProcessed[index];\n        const fakeTime = isReversed ? index * 1e3 : (ticksProcessed.length - index) * 1e3;\n        const isActive = activePoolData.activeTick === t.tick;\n        let price0 = t.sdkPrice;\n        let price1 = t.sdkPrice.invert();\n        if (isActive && activePoolData.activeTick && activePoolData.currentTick) {\n          activeRangeIndex = index;\n          activeRangePercentage = (activePoolData.currentTick - t.tick) / TICK_SPACINGS[feeTier];\n          price0 = tickToPrice(tokenA, tokenB, t.tick);\n          price1 = price0.invert();\n        }\n        const { amount0Locked, amount1Locked } = await calculateTokensLocked(tokenA, tokenB, feeTier, t);\n        barData.push({\n          tick: t.tick,\n          liquidity: parseFloat(t.liquidityActive.toString()),\n          price0: formatPrice({ price: price0, type: NumberType.SwapDetailsAmount }),\n          price1: formatPrice({ price: price1, type: NumberType.SwapDetailsAmount }),\n          time: fakeTime,\n          amount0Locked,\n          amount1Locked\n        });\n      }\n      barData?.map((entry, i) => {\n        if (i > 0) {\n          barData[i - 1].amount0Locked = entry.amount0Locked;\n          barData[i - 1].amount1Locked = entry.amount1Locked;\n        }\n      });\n      const activeRangeData = activeRangeIndex !== void 0 ? barData[activeRangeIndex] : void 0;\n      if (activeRangeIndex !== void 0 && activeRangeData) {\n        const activeTickTvl = await calculateActiveRangeTokensLocked(\n          tokenA,\n          tokenB,\n          feeTier,\n          ticksProcessed[activeRangeIndex],\n          activePoolData\n        );\n        barData[activeRangeIndex] = { ...activeRangeData, ...activeTickTvl };\n      }\n      if (!isReversed) {\n        barData.reverse();\n      }\n      setTickData({ barData: barData.filter((t) => t.liquidity > 0), activeRangeData, activeRangePercentage });\n    }\n    formatData();\n  }, [activePoolData, tokenA, tokenB, formatNumber, formatPrice, isReversed, feeTier]);\n  return { tickData, activeTick: activePoolData.activeTick, loading: activePoolData.isLoading || !tickData };\n}\n","\"use strict\";\nimport { tickToPrice } from \"@uniswap/v3-sdk\";\nimport JSBI from \"jsbi\";\nconst PRICE_FIXED_DIGITS = 8;\nexport default function computeSurroundingTicks(token0, token1, activeTickProcessed, sortedTickData, pivot, ascending) {\n  let previousTickProcessed = {\n    ...activeTickProcessed\n  };\n  let processedTicks = [];\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i]?.tick);\n    const sdkPrice = tickToPrice(token0, token1, tick);\n    const currentTickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i]?.liquidityNet ?? \"\"),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice\n    };\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i]?.liquidityNet ?? 0)\n      );\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      );\n    }\n    processedTicks.push(currentTickProcessed);\n    previousTickProcessed = currentTickProcessed;\n  }\n  if (!ascending) {\n    processedTicks = processedTicks.reverse();\n  }\n  return processedTicks;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { Pool as V3Pool, tickToPrice } from \"@uniswap/v3-sdk\";\nimport { Pool as V4Pool } from \"@uniswap/v4-sdk\";\nimport JSBI from \"jsbi\";\nimport ms from \"ms\";\nimport { getCurrencyAddressWithWrap, poolEnabledProtocolVersion } from \"pages/Pool/Positions/create/utils\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useMultichainContext } from \"state/multichain/useMultichainContext\";\nimport {\n  useAllV3TicksQuery,\n  useAllV4TicksQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useGetPoolsByTokens } from \"uniswap/src/data/rest/getPools\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport computeSurroundingTicks from \"utils/computeSurroundingTicks\";\nconst PRICE_FIXED_DIGITS = 8;\nconst getActiveTick = (tickCurrent, feeAmount, tickSpacing) => tickCurrent && feeAmount && tickSpacing ? Math.floor(tickCurrent / tickSpacing) * tickSpacing : void 0;\nconst MAX_TICK_FETCH_VALUE = 1e3;\nfunction usePaginatedTickQuery(poolId, version, skip = 0, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const supportedChainId = useSupportedChainId(chainId);\n  const v3Result = useAllV3TicksQuery({\n    variables: {\n      address: poolId?.toLowerCase() ?? \"\",\n      chain: toGraphQLChain(supportedChainId ?? defaultChainId),\n      skip,\n      first: MAX_TICK_FETCH_VALUE\n    },\n    skip: !poolId || version !== ProtocolVersion.V3,\n    pollInterval: ms(`30s`)\n  });\n  const v4Result = useAllV4TicksQuery({\n    variables: {\n      poolId: poolId ?? \"\",\n      chain: toGraphQLChain(supportedChainId ?? defaultChainId),\n      skip,\n      first: MAX_TICK_FETCH_VALUE\n    },\n    skip: !poolId || version !== ProtocolVersion.V4,\n    pollInterval: ms(`30s`)\n  });\n  return useMemo(() => {\n    if (version === ProtocolVersion.V3) {\n      return v3Result;\n    } else if (version === ProtocolVersion.V4) {\n      return v4Result;\n    }\n    return {\n      data: void 0,\n      error: new Error(\"Invalid version\"),\n      loading: false\n    };\n  }, [v3Result, v4Result, version]);\n}\nfunction useAllPoolTicks({\n  currencyA,\n  currencyB,\n  feeAmount,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  precalculatedPoolId\n}) {\n  const [skipNumber, setSkipNumber] = useState(0);\n  const [tickData, setTickData] = useState([]);\n  const poolId = useMemo(() => {\n    if (precalculatedPoolId) {\n      return precalculatedPoolId;\n    }\n    const v3PoolAddress = currencyA && currencyB && feeAmount && version === ProtocolVersion.V3 ? V3Pool.getAddress(\n      currencyA?.wrapped,\n      currencyB?.wrapped,\n      feeAmount,\n      void 0,\n      chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : void 0\n    ) : void 0;\n    const v4PoolId = version === ProtocolVersion.V4 && currencyA && currencyB && feeAmount && tickSpacing && hooks ? V4Pool.getPoolId(currencyA, currencyB, feeAmount, tickSpacing, hooks) : void 0;\n    return version === ProtocolVersion.V3 ? v3PoolAddress : v4PoolId;\n  }, [chainId, currencyA, currencyB, feeAmount, hooks, precalculatedPoolId, tickSpacing, version]);\n  const { data, error, loading: isLoading } = usePaginatedTickQuery(poolId, version, skipNumber, chainId);\n  const ticks = data?.v3Pool?.ticks ?? data?.v4Pool?.ticks;\n  useEffect(() => {\n    if (ticks?.length) {\n      setTickData((tickData2) => [...tickData2, ...ticks]);\n      if (ticks?.length === MAX_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber2) => skipNumber2 + MAX_TICK_FETCH_VALUE);\n      }\n    }\n  }, [ticks]);\n  return {\n    isLoading: isLoading || ticks?.length === MAX_TICK_FETCH_VALUE,\n    error,\n    ticks: tickData\n  };\n}\nexport function usePoolActiveLiquidity({\n  currencyA,\n  currencyB,\n  feeAmount,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  poolId\n}) {\n  const multichainContext = useMultichainContext();\n  const defaultChainId = multichainContext.chainId ?? UniverseChainId.Mainnet;\n  const poolsQueryEnabled = Boolean(poolEnabledProtocolVersion(version) && currencyA && currencyB);\n  const { data: poolData, isLoading: poolIsLoading } = useGetPoolsByTokens(\n    {\n      fee: feeAmount,\n      chainId: chainId ?? defaultChainId,\n      protocolVersions: [version],\n      token0: getCurrencyAddressWithWrap(currencyA, version),\n      token1: getCurrencyAddressWithWrap(currencyB, version),\n      hooks\n    },\n    poolsQueryEnabled\n  );\n  const pool = poolData?.pools && poolData.pools.length > 0 ? poolData.pools[0] : void 0;\n  const liquidity = pool?.liquidity;\n  const sqrtPriceX96 = pool?.sqrtPriceX96;\n  const currentTick = pool?.tick;\n  const activeTick = useMemo(\n    () => getActiveTick(currentTick, feeAmount, tickSpacing),\n    [currentTick, feeAmount, tickSpacing]\n  );\n  const { isLoading, error, ticks } = useAllPoolTicks({\n    currencyA,\n    currencyB,\n    feeAmount,\n    precalculatedPoolId: poolId,\n    chainId: chainId ?? defaultChainId,\n    version: version ?? ProtocolVersion.V3,\n    tickSpacing,\n    hooks\n  });\n  return useMemo(() => {\n    if (!currencyA || !currencyB || activeTick === void 0 || !pool || !ticks || ticks.length === 0 || isLoading) {\n      return {\n        isLoading: isLoading || poolIsLoading,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    const token0 = currencyA?.wrapped;\n    const token1 = currencyB?.wrapped;\n    const pivot = ticks.findIndex((tickData) => tickData?.tick && tickData.tick > activeTick) - 1;\n    if (pivot < 0) {\n      logger.debug(\"usePoolTickData\", \"usePoolActiveLiquidity\", \"TickData pivot not found\", {\n        token0: token0.address,\n        token1: token1.address,\n        chainId: token0.chainId\n      });\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    let sdkPrice;\n    try {\n      sdkPrice = tickToPrice(token0, token1, activeTick);\n    } catch (e) {\n      logger.debug(\"usePoolTickData\", \"usePoolActiveLiquidity\", \"Error getting price\", {\n        error: e,\n        token0: token0.address,\n        token1: token1.address,\n        chainId: token0.chainId\n      });\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    const activeTickProcessed = {\n      liquidityActive: JSBI.BigInt(pool?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot]?.tick) === activeTick ? JSBI.BigInt(ticks[pivot]?.liquidityNet ?? 0) : JSBI.BigInt(0),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice\n    };\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true);\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false);\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks);\n    return {\n      isLoading,\n      error,\n      currentTick,\n      activeTick,\n      liquidity: JSBI.BigInt(liquidity ?? 0),\n      sqrtPriceX96: JSBI.BigInt(sqrtPriceX96 ?? 0),\n      data: ticksProcessed\n    };\n  }, [\n    currencyA,\n    currencyB,\n    activeTick,\n    pool,\n    ticks,\n    isLoading,\n    error,\n    currentTick,\n    liquidity,\n    sqrtPriceX96,\n    poolIsLoading\n  ]);\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Plus","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","displayName","LiquidityBarSeriesRenderer","_data","_options","constructor","props","hoveredTick","activeTick","draw","priceConverter","useBitmapCoordinateSpace","scope","_drawImpl","update","data","options","renderingScope","priceToCoordinate","bars","visibleRange","ctx","context","map","bar","x","y","originalData","liquidity","tick","calculateColumnPositionsInPlace","barSpacing","horizontalPixelRatio","from","to","zeroY","fillStyle","tokenAColor","stack","column","isCurrentTick","isHoveredTick","Math","min","max","right","left","margin","widthWithMargin","totalBox","positionsBox","verticalPixelRatio","highlightOffset","canvas","highlightLength","highlightColor","roundRect","globalAlpha","tokenBColor","position","activeTickProgress","globalCompositeOperation","activeRangeAdjustedHeight","activeRangeAdjustedPosition","beginPath","fillRect","LiquidityBarSeries","_renderer","_tokenAColor","_tokenBColor","_highlightColor","priceValueBuilder","plotRow","isWhitespace","renderer","defaultOptions","customSeriesDefaultOptions","LiquidityBarChartModel","ChartModel","series","chartDiv","params","super","api","addCustomSeries","setData","updateOptions","fitContent","localization","locale","rightPriceScale","visible","borderVisible","scaleMargins","top","bottom","autoScale","timeScale","fixLeftEdge","fixRightEdge","crosshair","horzLine","labelVisible","vertLine","grid","vertLines","horzLines","applyOptions","priceFormat","type","priceLineVisible","lastValueVisible","onSeriesHover","hoverData","updatedOptions","item","activeTickIndex","findIndex","midPoint","setVisibleLogicalRange","MAX_UINT128","BigNumber","pow","sub","maxAmount","token","CurrencyAmount","fromRawAmount","toString","calculateActiveRangeTokensLocked","token0","token1","feeTier","poolData","currentTick","sqrtPriceX96","liqGross","JSBI","liquidityNet","mockTicks","index","liquidityGross","TICK_SPACINGS","pool1","Pool","liquidityActive","bottomOfRangePrice","TickMath","getSqrtRatioAtTick","token1Amount","getOutputAmount","amount0Locked","parseFloat","sdkPrice","invert","quote","toExact","topOfRangePrice","token0Amount","amount1Locked","calculateTokensLocked","tickSpacing","pool","Number","nextSqrtX96","maxAmountToken0","useLiquidityBarData","tokenA","tokenB","isReversed","chainId","version","hooks","poolId","formatNumber","formatPrice","useFormatter","activePoolData","usePoolActiveLiquidity","currencyA","currencyB","feeAmount","tickData","setTickData","useState","useEffect","formatData","barData","ticksProcessed","activeRangePercentage","activeRangeIndex","t","fakeTime","isActive","price0","price1","tickToPrice","push","price","NumberType","SwapDetailsAmount","time","entry","activeRangeData","activeTickTvl","reverse","filter","loading","isLoading","PRICE_FIXED_DIGITS","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","currentTickProcessed","toFixed","getActiveTick","tickCurrent","floor","MAX_TICK_FETCH_VALUE","useAllPoolTicks","precalculatedPoolId","ticks","skipNumber","setSkipNumber","useMemo","v3PoolAddress","ProtocolVersion","V3","V3Pool","getAddress","wrapped","V3_CORE_FACTORY_ADDRESSES","v4PoolId","V4","V4Pool","getPoolId","error","skip","defaultChainId","useEnabledChains","supportedChainId","useSupportedChainId","v3Result","useAllV3TicksQuery","variables","address","toLowerCase","chain","toGraphQLChain","first","pollInterval","ms","v4Result","useAllV4TicksQuery","Error","usePaginatedTickQuery","v3Pool","v4Pool","tickData2","skipNumber2","useMultichainContext","UniverseChainId","Mainnet","poolsQueryEnabled","Boolean","poolEnabledProtocolVersion","poolIsLoading","useGetPoolsByTokens","fee","protocolVersions","getCurrencyAddressWithWrap","pools","logger","debug","e","subsequentTicks","concat"],"sourceRoot":""}